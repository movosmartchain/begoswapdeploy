{"version":3,"file":"static/chunks/118.e45f64278493b159.js","mappings":"AIAA,YAAY,EACXA,IAAI,CAAC,gBAAkB,CAAIA,IAAI,CAAC,gBAAkB,EAAK,EAAE,EAAEC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAElE,KAAK,CACJ,SAASC,CAAuB,CAAEC,CAAmB,CAAEC,CAAmB,CAAE,CAInFA,CAAmB,CAACC,CAAC,CAACF,CAAmB,CAAE,CACzC,CAAG,CAAE,UAAW,CAAE,OAAqBG,CAAS,CAAG,CACpD,CAAC,KAGEC,CAAc,CAAGH,CAAmB,CAAC,KAAK,CAAC,CAE3CI,CAAoB,CAAGJ,CAAmB,CAAC,KAAK,CAAC,CAEjDK,CAA0B,CAAGL,CAAmB,CAAC,KAAK,CAAC,CAEvDM,CAAW,CAAGN,CAAmB,CAAC,KAAK,CAAC,CAEhCA,CAAmB,CAAC,KAAK,CAAC,KAElCO,CAAwB,CAAGP,CAAmB,CAAC,IAAI,CAAC,CAEpDQ,CAA6B,CAAGR,CAAmB,CAAC,KAAK,CAAC,CAE1DS,CAAS,CAAGT,CAAmB,CAAC,KAAK,CAAC,CAEtCU,CAAG,CAAGV,CAAmB,CAAC,IAAI,CAAC,UJ7BnCW,CAAA,OAAAC,CAAA,IAAAL,CAAA,CAAAM,CAAA,mKAAAF,CAAA,mBAAAC,CAAA,EAAAA,CAAA,UAAAE,CAAA,OAAAF,CAAA,IAAAL,CAAA,CAAAM,CAAA,gGAAAC,CAAA,mBAAAF,CAAA,EAAAA,CAAA,UAAAG,CAAA,OAAAH,CAAA,IAAAL,CAAA,CAAAM,CAAA,wKAAAE,CAAA,mBAAAH,CAAA,EAAAA,CAAA,UAAAI,CAAA,OAAAJ,CAAA,IAAAL,CAAA,CAAAM,CAAA,+GAAAG,CAAA,mBAAAJ,CAAA,EAAAA,CAAA,CAqBA,IAAAK,CAAA,IAAAT,CAAA,CAAAU,EAAA,EAAAP,CAAA,IAsBoCQ,CAAA,CAAAX,CACpB,CAAAY,EAAA,CAAAC,GAAA,CAAAC,UAAA,EACGC,WAAA,mBAAAD,UAAA,EAAAC,WAAA,gBAAG,CAAK,EAAAR,CAAY,EAAC,CApBlB,SAAES,CAAA,MACpBC,CAAA,CAAAD,CAAO,CAAAC,QAAA,CAAAC,CAAA,CAAAF,CAAA,CAAAE,SAAA,CAAAC,CAAA,CAAAH,CAAA,CAAAG,SAAA,CAAAC,CAAA,CAAAJ,CAAA,CAAAI,gBAAA,CAAAC,CAAA,CAAAL,CAAA,CAAAK,KAAA,SACR,GAGAF,CAAA,CAEDE,CAAA,CAAAC,MAAA,CAAAC,OAAA,CAECL,CAAA,CAEDG,CAAA,CAAAC,MAAA,CAAAE,OAAA,CAECP,CAAA,CAED,2BAAAQ,MAAA,CAAAJ,CAAA,CAAAC,MAAA,CAAAI,aAAA,OAAAD,MAAA,CAAAJ,CAAA,CAAAC,MAAA,CAAAK,SAAA,MAGFN,CAAA,CAAAC,MAAA,CAAAM,UAAA,CAfiB,CAemB,CAEc,SAAAZ,CAAA,EACvC,OAAAK,CAAA,CAAAA,KAAA,CAAQQ,KAAA,CAAAC,IAAA,WAAYd,CAAY,EAIvC,IAAAK,CAAA,CAAAL,CAAA,CAAAK,KAAA,CAAAU,CAAA,CAAAf,CAAA,CAAAe,UAAA,QAAAV,CAAG,CAAQC,MAAA,CAAAS,CAAA,kCAAAf,CACX,CAAQ,CAWZ,OAAAC,CAFE,CAAAA,QAAA,EAEF,GAAOjB,CAAA,CAAAgC,EAAA,EAAA1B,CAAA,GAAAG,CAAA,EAAmC,CAAAR,CAAA,CAAAgC,EAAA,EAAAC,CAAA,IAAAlC,CAG5B,CAAAY,EAAA,EAAAV,CAAA,CAAAG,CAAA,EAAAS,UAAA,EAAAC,WAAA,mBAAAD,UAAA,EAAAC,WAAA,gBAAG,GAAAP,CAAe,GAAQ,SAAkBQ,CAAA,EAC1C,OAAAmB,CAAA,CAAAA,eAAA,CAAQ,8BAAYnB,CAAO,EAEzC,IAAAK,CAAA,CAAAL,CAAA,CAAAK,KAAA,CAAAe,CAAA,CAAApB,CAAA,CAAAoB,UAAA,QAEFA,MAAAA,CAAA,CAAAA,CAAA,CAAAf,CAAA,CAAAS,IAAA,CAAAM,UAAA,CAA0B,EACTzB,CACf,CAAA0B,YAAW,EACXpB,QAAA,CAAS,EAAE,CACXC,SAAA,CAAU,EAAE,CACZC,SAAA,IAAAY,UAAA,SC7DkBrC,CAAA,CAViB,SAAM4C,CAAA,MAAEC,CAAA,CAAAD,CAAA,CAAAC,MAAA,CAAAC,CAAA,CAAAF,CAAA,CAAAE,QAAA,CAAAJ,CAAA,CAAAE,CAAA,CAAAF,UAAA,CAAAK,CAAA,IAAA5C,CAAA,CAAAQ,CAAA,EAAAiC,CAAA,EAAU,SAAU,WAC/D,aACuB,QACF,GAAAxC,CAAY,CAAA4C,GAAA,EAAA/B,CAAU,IAAAf,CAAA,CAAAS,CAAA,KAAAV,CAAA,CAAAU,CAAA,KAAAoC,CAAA,GAAAD,QAAE,IAAmB1C,CAAA,CAAA6C,IAAA,EAAAT,CAAA,EAAsBE,UAAA,CAAAA,CAAA,CAAAD,eACzE,GAAAM,CAAA,CAAArB,gBAAA,CAAAoB,QACN,EAAQD,CAAA,CACOC,CAAA,CAEpB,CACF,EACF,GAAoB,eAAAlD,CAAA,CAAAC,CAAA,CAAAC,CAAA,EAAAA,CAAA,CAAAoD,CAAA,CAAArD,CAAA,EAAAC,CAAA,CAAAC,CAAA,CAAAF,CAAA,4BAAAsD,CAAA,QCRRC,CAAA,CAKXA,CALW,CC2BNC,CAAA,CAAAC,CAAS,CAAAC,CAAG,CFnBEtD,CAAA,CAAAH,CAAA,QAAA0D,CAAA,CAAA1D,CAAA,QAAAO,CAAA,CAAAP,CAAA,OAAAM,CAAA,CAAAN,CAAA,QAAA2D,CAAA,CAAA3D,CAAA,QAAA4D,CAAA,CAAA5D,CAAA,QAAAQ,CAAA,CAAAR,CAAA,QAAA6D,CAAA,CAAA7D,CAAA,QAAA8D,CAAA,CAAA9D,CAAA,OAAAU,CAAA,CAAAV,CAAA,OAAA+D,CAAA,CAAA/D,CAAA,QAAAgE,CAAA,CAAAhE,CAAA,QAAAiE,CAAA,CAAAjE,CAAA,QAAAkE,CAAA,CAAAlE,CAAA,QAAAmE,CAAA,CAAAnE,CAAA,QAAAoE,CAAA,CAAApE,CAAA,QAAAqE,CAAA,CAAArE,CAAA,CAAAsE,CAAA,CAAAF,CAAA,EAAAG,CAAA,CAAAvE,CAAA,QAAAwE,CAAA,CAAAxE,CAAA,QAAAyE,CAAA,CAAAzE,CAAA,QAAA0E,CAAA,CAAA1E,CAAA,QAAA2E,CAAA,CAAA3E,CAAA,iBCdpBW,CAAA,OAAAC,CAAA,IAAAL,CAAA,CAAAM,CAAA,qbAAAF,CAAA,mBAAAC,CAAA,EAAAA,CAAA,CAAgC,CAMpB0C,CAAA,CAeZA,CAAM,EAAAA,CAAAA,CAA8B,KAfV,CAAdA,CAAc,CAExB,IAAO,EAAP,IAAO,CAFGA,CAAc,CAAdA,CAAc,CAGxB,OAAM,IAAN,SAAM,CAHIA,CAAc,CAAdA,CAAc,CAIxB,OAAO,CAAP,CAAO,SAAP,CAJUA,CAAc,CAAAA,CAAd,QAAc,kBAuFMsB,CAAA,CApEE,SAA8BC,CAAA,MAC5DtB,CAAA,CAAM,GAAEgB,CAAA,CAAAO,QAAe,GACvBC,MAAA,CAAAzB,CAAe,CAAA0B,OAAA,CACfC,YAAA,CAAc,EACdC,cAAc,GACdC,WAAA,GALKC,eAML,CANa,EAQf,EAAAC,CAAA,CAAA9B,CAAA,IAAA+B,CAAA,CAAA/B,CAAA,UAC0B,GAAAoB,CAChB,CAAiBY,CAAA,WAAAC,CAAA,EAAe,IAAAC,CAE0B,EAF1BA,CAE0B,CAqB1D,GArBOtB,CAAA,CAAmCtD,CAAA,EAAAwD,CAuBtC,GAAAqB,IACA,UAAAC,CACA,GAIwB,IAAApC,CAAA,CAAAqC,CAAA,CAAAX,CAAA,CAAAY,CAAA,CAAAX,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAU,CAAA,QAAAzB,CAAA,GAAA0B,IAAA,UAAAC,CAAA,gBAAAA,CAAA,CAAAC,IAAA,CAAAD,CAAA,CAAAE,IAAA,SA7BgD,OA6BhDF,CAAA,CAAAC,IAAA,GAAAD,CAAA,CAAAG,EAAA,CAAAzC,CAAA,CAAA7C,CAAA,CAAAmF,CAAA,CAAAE,IA7BoC,GAChEE,OAAA,CAAAC,GAAA,EAmBA,GAAA7B,CAAA,CAAA8B,OAAA,EAAA5B,CAAqB,CAAgB6B,EAAA,IAAA/B,CAAmB,CAAAgC,GAAG,EAAA7F,CAAA,GAAAkE,CAAA,GAC3DW,CAAA,CAAAY,OAAA,CAAAK,OAAA,CAAAjB,CAAA,EAAAf,CAAA,CAAAiC,EAAA,CAAAC,cAAA,aArB0DX,CAqB1D,CAAAY,EAAA,CAAAZ,CAAA,CAAAa,IAAA,CArB0CjB,CAAY,CAAArC,CAAjDA,CAAA,IAAAyC,CAAA,CAAAG,EAAA,EAAAH,CAAA,CAAAY,EAAA,KAAiD,GAAAhB,+BAAA,CAuBlDX,CAAY,CAAA1B,CAAA,IACZsC,CAAA,CAAAD,SAAgE,GAAhEA,CAA0B,CAAAkB,MAAA,CAC1B5B,CAAc,CAAA6B,QAAS,CAAAnB,CAAgC,CAAAoB,MAAS,CAAC,GAAA9B,cAAY,CAAM+B,MAAC,EACpF9B,CAAA,CAAA4B,QAAkB,CAAAnB,CAA0B,CAAAoB,MAAA,IAAA7B,WAAA,CAAA8B,MAAA,EAG5C7B,CAAA,CAAAH,CAA2B,CAAAE,CAAe,CAChDW,CAEE,CAAAb,CAAkB,CAAAC,CAAA,CAGlB,CAAAW,CAAA,EAAYT,CAAA,CAnDW,KAmDXU,CAAA,CAnDW,IAmDXR,CAAQ,CAAE,CAAuBP,MAAA,CAAAzB,CAAA,CAAA4D,MAAY,CAAEjC,YAAA,CAAcA,CAAd,CAAgBC,cAAA,CAAAA,CAAW,CAAEC,WAAA,CAAAA,CAAA,CAAkBC,eAAA,CAAAA,CAAA,CAC3G,EAICA,CAAY,CAvDW,IAuDXU,CAAA,CAvDW,GAuDXR,CAAQ,CAAE,CAAwBP,MAAA,CAAAzB,CAAA,CAAA6D,OAAY,CAAElC,YAAA,CAAcA,CAAd,CAAgBC,cAAA,CAAAA,CAAW,CAAEC,WAAA,CAAAA,CAAA,CAAkBC,eAAA,CAAAA,CAAA,CAC5G,EACaE,CAAQ,CAAE,CAAmBP,MAAA,CAAAzB,CAAA,CAAA8D,EAAA,CAAcnC,YAAA,CAAcA,CAAd,CAAgBC,cAAA,CAAAA,CAAW,CAAEC,WAAA,CAAAA,CAAA,CAAkBC,eAAA,CAAAA,CAAA,CACvG,EAAAY,CAAA,CAAAE,IAAA,kBAAAF,CAAA,CAAAC,IAAA,IAEDD,CAAA,CAAAqB,EAAO,CAACrB,CAAM,UAAqEsB,OAAA,CAAAC,KAAA,uCAAAtF,MAAA,CAAA4C,CAAA,cAAAmB,CAAA,CAAAqB,EAAA,2BAAArB,CAAA,CAAAwB,IAAA,KAAA7B,CAAA,cAEtF,KAjDsB,kBAAAF,CAAA,CAAAgC,KAAA,MAAAC,SAAA,EAiDtB,GAGH,GACD7C,CAAA,CAED,EACDQ,CAAA,CAED,UC7FAsC,CAAA,OAAA/G,CAAA,IAAAL,CAAA,CAAAM,CAAA,uGAAA8G,CAAA,mBAAA/G,CAAA,EAAAA,CAAA,UAAAE,CAAA,OAAAF,CAAA,IAAAL,CAAA,CAAAM,CAAA,8BAAAC,CAAA,mBAAAF,CAAA,EAAAA,CAAA,UAAAG,CAAA,OAAAH,CAAA,IAAAL,CAAA,CAAAM,CAAA,6FAAAE,CAAA,mBAAAH,CAAA,EAAAA,CAAA,KAQ+BO,CAAA,IAAAX,CAAA,CAAAY,EAAA,EAAAyC,CAAA,CAAAhD,CAAA,EAAAS,UAAA,EAAAC,WAAA,iBAQ/B,EAAAoG,CAAyB,IAAYC,CAAA,IAAApH,CAAA,CAAAY,EAAA,EAAA0C,CAAA,CAAAjD,CAAA,EAAAS,UAAA,EAAAC,WAAA,gBAEpC,CAED,EAAAT,CAAY,IAAW+G,CAAA,IAAArH,CAAA,CAAAY,EAAA,EAAAV,CAAA,CAAAG,CAAA,EAAAS,UAAA,EAAAC,WAAA,gBAIP,GAAAR,CAAS,GAAN,SAAQS,CAAK,MAAAsG,CAAO,CAAMtG,CAAA,CAAMsG,MAAC,CAAOjG,CAAA,CAAAL,CAAA,CAAAK,KAAA,QAC1DA,CAAA,CAAAC,MAAA,CAAAgG,CAAA,IA2HKC,CANC,UACLvG,CAAK,EAML,IAAMwG,CAAQ,CAAAxG,CAAA,CAAAwG,KAAA,CAAAC,CAAA,CAAAzG,CAAA,CAAAyG,KAAA,CAAAC,CAAL,CAAA1G,CAAA,CAAA0G,WAAA,CAAAjD,CAAA,CAAAzD,CAAA,CAAAyD,YAAA,CAAAkD,CAAA,CAAA3G,CAAA,CAAA2G,wBAAA,CAAAC,CAAA,CAAA5G,CAAA,CAAA4G,uBAAA,CACTC,CAAA,IAAAzE,CACE,CAAC0E,EAAA,IAAAD,CAAA,OAAG,GAAA/H,CAAA,CAAA6C,IAAA,EAAAzC,CAAA,CAAAG,CAAA,EAAAmC,QAAA,EACyB,GAAA1C,CAAA,CAAA6C,IAAA,EAAAyE,CAAA,EAAAW,EAAA,QAAAvF,QAAA,EACZ,GAAK1C,CAAA,CAAA4C,GAAA,EAAA2E,CAAA,EAAIC,MAAA,CAAAE,CAAA,GACf,GAAA1H,CAAK,CAAA4C,GAAA,EAAAc,CAAA,CAAAnD,CAAA,EAAQmC,QAAA,CAAAiF,CAAA,GACH,GACJ,GAAA3H,CAAA,CAAA4C,GAAA,EAAAc,CAAA,CAAAnD,CAAA,EAAA0H,EAAA,OAAE,CAAmBvF,QAAA,CAAAkF,CAAA,GAC/B,GAAA5H,CAAA,CAAA6C,IAAA,EAAAa,CAAA,CAAAnD,CAAA,EAAAmC,QAAA,EACI,GAAA1C,CAAA,CAAA6C,IAAA,YAAAH,QAAI,EAAoBqF,CAAA,mBAAC,MAAS,GAAE,IAAYpD,CAAA,CAClD,GACF,GAAA3E,CAAA,CAAA6C,IAAA,EAAAa,CAAA,CAAAnD,CAAA,EAAAmC,QAAA,EACI,GAAA1C,CAAA,CAAA6C,IAAA,YAAAH,QAAI,EAAyBqF,CAAA,wBAAC,MAAS,GAAE,IAAuBD,CAAA,CAClE,GACF,GAAA9H,CAAA,CAAA6C,IAAA,EAAAa,CAAA,CAAAnD,CAAA,EAAAmC,QAAA,EACI,GAAA1C,CAAA,CAAA6C,IAAA,YAAAH,QAAI,EAASqF,CAAA,QAAC,MAAS,GAAE,IAAuCpD,CAAE,CAAAmD,CAAA,CAAC,KAAyBD,CACrG,MAAO,GAEV,CACF,EAED,CAAsC9E,CAAA,CArF9B,SAAA7B,CAAc,EACpB,IApDC6G,CAAA,CAAAG,CAAA,CA6BgBC,CAAA,CAuBX5D,CAAQ,CAAArD,CAAA,CAAAqD,YAAA,CAAA6D,CAAA,CAAclH,CAAnB,CAAAkH,MAAA,CAAAF,CAAA,CAAAhH,CAAA,CAAAgH,kBAAA,CAAAG,CAAA,CAAAnH,CAAA,CAAAmH,iBAAA,CACsDN,CAAA,CAA+B,GAA/BzE,CAAA,CAAkB0E,EAAY,GAArF,CAAAD,CAAA,CACsB9E,CAAA,CAAmCqB,CAAA,CAAAC,CAAA,CAAnC,CAAAE,CAAA,CAAAxB,CAAA,CAAAwB,MAAA,CAAAE,CAAA,CAAA1B,CAAA,CAAA0B,YAAmC,CAAAG,CAA1D,CAAA7B,CAAA,CAAmB6B,eAAA,CAAAD,CAAA,CAAA5B,CAAA,CAAA4B,WAAA,CACpB3B,CAAA,IAAAE,CAAwB,CAAW7C,CAAA,KAAAqD,CAAA,CAAqC0E,EAAqB,OAAAC,CAAA,CAAArF,CAAA,IAC7FsF,CAAgB,CAAA/D,CAAA,GAAkBzB,CAAI,CAAA6D,OAAmB,EAAKpC,CAAA,GAAAzB,CAAqB,CAAA4D,MAAA,CAInF6B,CAAA,EA5DLV,CAAA,CA4DgCA,CAAA,CA5DhCG,CAAA,CA4DgCA,CAAkB,CA3DjD,CAASQ,OACP,CAAK,CACLf,KAAK,CAAEI,CAAA,UAAS,EAChBL,KAAA,UACE,CAIHE,WAAA,QAAA3E,CAAAA,CAAA,CAAAiF,MAAAA,CAAA,QAAAA,CAAA,CAAAQ,OAAA,IAAAzF,KAAA,IAAAA,CAAA,CAAAA,CAAA,CAAA8E,CAAA,qHACD,CAAMY,IACJ,EACAhB,KAAK,CAAEI,CAAA,eAAS,EAChBL,KAAA,UACE,CAIHE,WAAA,QAAA1E,CAAAA,CAAA,CAAAgF,MAAAA,CAAA,QAAAA,CAAA,CAAAS,IAAA,IAAAzF,KAAA,IAAAA,CAAA,CAAAA,CAAA,CAAA6E,CAAA,qHACD,CAASa,OACP,CAAK,CACLjB,KAAK,CAAEI,CAAA,QAAS,CAChBL,KAAA,UAAa,CACdE,WAAA,QAAAzE,CAAAA,CAAA,CAAA+E,MAAAA,CAAA,QAAAA,CAAA,CAAAU,OAAA,IAAAzF,KAAA,IAAAA,CAAA,CAAAA,CAAA,CAAA4E,CAAA,iCACQ,EAoCwC,CAE7CF,CAAiB,CAAA/C,CAAoB,CAAAzB,CAAA,CAAAwF,EAAA,CAIIC,CAAA,CAAAL,CAAA,CArCP,CAAvBN,CAAA,CAmCc1D,CAAA,IAlCtBzB,CAAS,CAAA4D,MAAA,CACjB,UAGCuB,CAAO,GAAMnF,CAAA,CAAA6D,OAAA,CACd,OAGF,UA4B0D,CAErD1D,CAAA,IAAAM,CAAc,CAAYlD,CAAA,KAAAP,CAAA,CAAA4C,GAAA,EAAA6E,CAAA,IAAA5H,CAAA,CAAAU,CAAA,GAC1BoE,YAAA,CAAAA,CAA0B,CAC1BkD,wBAAuB,CAAEA,CAAW,CAChCC,uBAEN,CAAAjD,CAAA,EAAAiE,CACE,GAAS,CARLC,SAAS,MAUhB,CAED,EAAIC,CAAC,CAAW7F,CAAI,CAAC6F,SAAA,CAAAC,CAAiB,CAAA9F,CAAe,CAAA8F,cAAA,CAAAC,CAAA,CAAA/F,CAAA,CAAA+F,OAAA,SACxC,EAAAvE,CAAA,EArBO0D,CAAAA,CAAgB,EAAAE,CAAmB,EAAAC,CAAA,EAyBrDJ,CAAA,CAC+B,GAAQpI,CAAA,CAAA6C,IAAA,EAAAyE,CAAA,EAAC6B,UAAA,SAAe,CAAWC,cAAc,YAAAnG,GAAA,CAAA+F,CAAA,CAAAtG,QAAA,EAC/D,GAAA1C,CAAa,CAAA4C,GAAA,EAAA2E,CAAA,EAAIC,MAAA,CAAAsB,CAAA,CAAApB,KAAA,GACvB,GAAA1H,CAAa,CAAA4C,GAAA,EAAAc,CAAA,CAAAnD,CAAA,EAAQmC,QAAA,CAAAoG,CAAA,CAAAnB,KAAA,GAEb,GAAA3H,CAAW,CAAA4C,GAAA,EAAAe,CAAA,CAAApD,CAAA,KAAA0I,CAAA,EAAAC,CAAA,CAE7B,CACF,EAGsB,GAAAlJ,CAAA,CAAA6C,IAAA,EAAAzC,CAAA,CAAAG,CAAA,EAAC8I,QAAO,QAAM,CAACC,MAAK,CAAC,MAAI,CAACC,KAAK,MAAWtG,GAAA,CAAA+F,CAAU,CAA2B,wCAAAtG,QACjG,EAAyBuG,CAC1B,EAAAC,CAAA,CACE,GAAAlJ,CAAA,CAAA4C,GAAA,EAAA/B,CAAA,EAAiB6B,QAAC,CAAmB,GAAA1C,CAAA,CAAA6C,IAAA,EAAAyE,CAAA,EAAC6B,UAAQ,UAAAK,CAAA,QAAA9G,QAAA,EAC/B,GAAA1C,CAAa,CAAA4C,GAAA,EAAA2E,CAAA,EAAIC,MAAA,CAAAsB,CAAA,CAAApB,KAAA,GACvB,GAAA1H,CAAa,CAAA4C,GAAA,EAAAc,CAAA,CAAAnD,CAAA,EAAQmC,QAAA,CAAAoG,CAAA,CAAAnB,KAAA,GAChB,GAAA3H,CAAA,CAAA4C,GAAA,EAAAe,CAAA,CAAApD,CAAA,KACK,CACR,IAEhB,CACF,EAzBE,KA2BH,CA6BsC","sources":["webpack://_N_E/./packages/uikit/src/components/Card/StyledCard.tsx","webpack://_N_E/./packages/uikit/src/components/Card/Card.tsx","webpack://_N_E/./src/hooks/useSubgraphHealth.ts","webpack://_N_E/./src/components/SubgraphHealthIndicator/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import _tagged_template_literal from \"@swc/helpers/src/_tagged_template_literal.mjs\";\nfunction _templateObject() {\n    var data = _tagged_template_literal([\n        \"\\n  0% {\\n    background-position: 50% 0%;\\n  }\\n  50% {\\n    background-position: 50% 100%;\\n  }\\n  100% {\\n    background-position: 50% 0%;\\n  }\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = _tagged_template_literal([\n        \"\\n      animation: \",\n        \" 3s ease infinite;\\n      background-size: 400% 400%;\\n    \"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    var data = _tagged_template_literal([\n        \"\\n  background: \",\n        \";\\n  border-radius: \",\n        \";\\n  color: \",\n        \";\\n  overflow: hidden;\\n  position: relative;\\n\\n  \",\n        \"\\n\\n  padding: 1px 1px 3px 1px;\\n\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject3() {\n    var data = _tagged_template_literal([\n        \"\\n  width: 100%;\\n  height: 100%;\\n  overflow: \",\n        \";\\n  background: \",\n        \";\\n  border-radius: 8px;\\n\"\n    ]);\n    _templateObject3 = function _templateObject3() {\n        return data;\n    };\n    return data;\n}\nimport styled, { keyframes, css } from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { Box } from \"../Box\";\nvar PromotedGradient = keyframes(_templateObject());\n/**\n * Priority: Warning --> Success --> Active\n */ var getBorderColor = function(param) {\n    var isActive = param.isActive, isSuccess = param.isSuccess, isWarning = param.isWarning, borderBackground = param.borderBackground, theme = param.theme;\n    if (borderBackground) {\n        return borderBackground;\n    }\n    if (isWarning) {\n        return theme.colors.warning;\n    }\n    if (isSuccess) {\n        return theme.colors.success;\n    }\n    if (isActive) {\n        return \"linear-gradient(180deg, \".concat(theme.colors.primaryBright, \", \").concat(theme.colors.secondary, \")\");\n    }\n    return theme.colors.cardBorder;\n};\nexport var StyledCard = styled.div.withConfig({\n    componentId: \"sc-8a82d250-0\"\n})(_templateObject2(), getBorderColor, function(param) {\n    var theme = param.theme;\n    return theme.radii.card;\n}, function(param) {\n    var theme = param.theme, isDisabled = param.isDisabled;\n    return theme.colors[isDisabled ? \"textDisabled\" : \"text\"];\n}, function(param) {\n    var isActive = param.isActive;\n    return isActive && css(_templateObject1(), PromotedGradient);\n}, space);\nexport var StyledCardInner = styled(Box).withConfig({\n    componentId: \"sc-8a82d250-1\"\n})(_templateObject3(), function(param) {\n    var hasCustomBorder = param.hasCustomBorder;\n    return hasCustomBorder ? \"initial\" : \"inherit\";\n}, function(param) {\n    var theme = param.theme, background = param.background;\n    return background !== null && background !== void 0 ? background : theme.card.background;\n});\nStyledCard.defaultProps = {\n    isActive: false,\n    isSuccess: false,\n    isWarning: false,\n    isDisabled: false\n};\n","import _object_spread from \"@swc/helpers/src/_object_spread.mjs\";\nimport _object_spread_props from \"@swc/helpers/src/_object_spread_props.mjs\";\nimport _object_without_properties from \"@swc/helpers/src/_object_without_properties.mjs\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { StyledCard, StyledCardInner } from \"./StyledCard\";\nvar Card = function(_param) {\n    var ribbon = _param.ribbon, children = _param.children, background = _param.background, props = _object_without_properties(_param, [\n        \"ribbon\",\n        \"children\",\n        \"background\"\n    ]);\n    return /*#__PURE__*/ _jsx(StyledCard, _object_spread_props(_object_spread({}, props), {\n        children: /*#__PURE__*/ _jsxs(StyledCardInner, {\n            background: background,\n            hasCustomBorder: !!props.borderBackground,\n            children: [\n                ribbon,\n                children\n            ]\n        })\n    }));\n};\nexport default Card;\n","import { useState } from 'react'\r\nimport { request, gql } from 'graphql-request'\r\nimport { movoRpcProvider } from 'utils/providers'\r\nimport { GRAPH_HEALTH } from 'config/constants/endpoints'\r\nimport { useSlowRefreshEffect } from './useRefreshEffect'\r\n\r\nexport enum SubgraphStatus {\r\n  OK,\r\n  WARNING,\r\n  NOT_OK,\r\n  UNKNOWN,\r\n}\r\n\r\nexport type SubgraphHealthState = {\r\n  status: SubgraphStatus\r\n  currentBlock: number\r\n  chainHeadBlock: number\r\n  latestBlock: number\r\n  blockDifference: number\r\n}\r\n\r\nconst NOT_OK_BLOCK_DIFFERENCE = 200 // ~15 minutes delay\r\nconst WARNING_BLOCK_DIFFERENCE = 50 // ~2.5 minute delay\r\n\r\nconst useSubgraphHealth = (subgraphName: string) => {\r\n  const [sgHealth, setSgHealth] = useState<SubgraphHealthState>({\r\n    status: SubgraphStatus.UNKNOWN,\r\n    currentBlock: 0,\r\n    chainHeadBlock: 0,\r\n    latestBlock: 0,\r\n    blockDifference: 0,\r\n  })\r\n\r\n  useSlowRefreshEffect(\r\n    (currentBlockNumber) => {\r\n      const getSubgraphHealth = async () => {\r\n        try {\r\n          const [{ indexingStatusForCurrentVersion }, currentBlock] = await Promise.all([\r\n            request(\r\n              GRAPH_HEALTH,\r\n              gql`\r\n            query getNftMarketSubgraphHealth {\r\n              indexingStatusForCurrentVersion(subgraphName: \"${subgraphName}\") {\r\n                synced\r\n                health\r\n                chains {\r\n                  chainHeadBlock {\r\n                    number\r\n                  }\r\n                  latestBlock {\r\n                    number\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          `,\r\n            ),\r\n            currentBlockNumber ? Promise.resolve(currentBlockNumber) : movoRpcProvider.getBlockNumber(),\r\n          ])\r\n\r\n          const isHealthy = indexingStatusForCurrentVersion.health === 'healthy'\r\n          const chainHeadBlock = parseInt(indexingStatusForCurrentVersion.chains[0].chainHeadBlock.number)\r\n          const latestBlock = parseInt(indexingStatusForCurrentVersion.chains[0].latestBlock.number)\r\n          const blockDifference = currentBlock - latestBlock\r\n          // Sometimes subgraph might report old block as chainHeadBlock, so its important to compare\r\n          // it with block retrieved from simpleRpcProvider.getBlockNumber()\r\n          const chainHeadBlockDifference = currentBlock - chainHeadBlock\r\n          if (\r\n            !isHealthy ||\r\n            blockDifference > NOT_OK_BLOCK_DIFFERENCE ||\r\n            chainHeadBlockDifference > NOT_OK_BLOCK_DIFFERENCE\r\n          ) {\r\n            setSgHealth({ status: SubgraphStatus.NOT_OK, currentBlock, chainHeadBlock, latestBlock, blockDifference })\r\n          } else if (\r\n            blockDifference > WARNING_BLOCK_DIFFERENCE ||\r\n            chainHeadBlockDifference > WARNING_BLOCK_DIFFERENCE\r\n          ) {\r\n            setSgHealth({ status: SubgraphStatus.WARNING, currentBlock, chainHeadBlock, latestBlock, blockDifference })\r\n          } else {\r\n            setSgHealth({ status: SubgraphStatus.OK, currentBlock, chainHeadBlock, latestBlock, blockDifference })\r\n          }\r\n        } catch (error) {\r\n          console.error(`Failed to perform health check for ${subgraphName} subgraph`, error)\r\n        }\r\n      }\r\n      getSubgraphHealth()\r\n    },\r\n    [subgraphName],\r\n  )\r\n\r\n  return sgHealth\r\n}\r\n\r\nexport default useSubgraphHealth\r\n","import { MOVO_BLOCK_TIME } from 'config'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TranslateFunction } from 'contexts/Localization/types'\r\nimport styled from 'styled-components'\r\nimport { Card, Flex, Box, InfoIcon, Text, useTooltip } from '@pancakeswap/uikit'\r\nimport { useSubgraphHealthIndicatorManager } from 'state/user/hooks'\r\nimport useSubgraphHealth, { SubgraphStatus } from 'hooks/useSubgraphHealth'\r\n\r\nconst StyledCard = styled(Card)`\r\n  border-radius: 8px;\r\n  > div {\r\n    border-radius: 8px;\r\n  }\r\n  user-select: none;\r\n`\r\n\r\nconst IndicatorWrapper = styled(Flex)`\r\n  gap: 7px;\r\n`\r\n\r\nconst Dot = styled(Box)<{ $color: string }>`\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 50%;\r\n  background: ${({ $color, theme }) => theme.colors[$color]};\r\n`\r\n\r\ninterface CustomDescriptions {\r\n  delayed: string\r\n  slow: string\r\n  healthy: string\r\n}\r\n\r\nconst indicator = (t: TranslateFunction, customDescriptions?: CustomDescriptions) =>\r\n  ({\r\n    delayed: {\r\n      label: t('Delayed'),\r\n      color: 'failure',\r\n      description:\r\n        customDescriptions?.delayed ??\r\n        t(\r\n          'Subgraph is currently experiencing delays due to MOVO issues. Performance may suffer until subgraph is restored.',\r\n        ),\r\n    },\r\n    slow: {\r\n      label: t('Slight delay'),\r\n      color: 'warning',\r\n      description:\r\n        customDescriptions?.slow ??\r\n        t(\r\n          'Subgraph is currently experiencing delays due to MOVO issues. Performance may suffer until subgraph is restored.',\r\n        ),\r\n    },\r\n    healthy: {\r\n      label: t('Fast'),\r\n      color: 'success',\r\n      description: customDescriptions?.healthy ?? t('No issues with the subgraph.'),\r\n    },\r\n  } as const)\r\n\r\ntype Indicator = keyof ReturnType<typeof indicator>\r\n\r\nconst getIndicator = (sgStatus: SubgraphStatus): Indicator => {\r\n  if (sgStatus === SubgraphStatus.NOT_OK) {\r\n    return 'delayed'\r\n  }\r\n\r\n  if (sgStatus === SubgraphStatus.WARNING) {\r\n    return 'slow'\r\n  }\r\n\r\n  return 'healthy'\r\n}\r\n\r\nexport interface BlockResponse {\r\n  blocks: {\r\n    number: string\r\n  }[]\r\n}\r\n\r\nconst SubgraphHealthIndicator: React.FC<{\r\n  subgraphName: string\r\n  inline?: boolean\r\n  customDescriptions?: CustomDescriptions\r\n  obeyGlobalSetting?: boolean\r\n}> = ({ subgraphName, inline, customDescriptions, obeyGlobalSetting }) => {\r\n  const { t } = useTranslation()\r\n  const { status, currentBlock, blockDifference, latestBlock } = useSubgraphHealth(subgraphName)\r\n  const [alwaysShowIndicator] = useSubgraphHealthIndicatorManager()\r\n  const forceIndicatorDisplay = status === SubgraphStatus.WARNING || status === SubgraphStatus.NOT_OK\r\n  const showIndicator = (obeyGlobalSetting && alwaysShowIndicator) || forceIndicatorDisplay\r\n\r\n  const indicatorProps = indicator(t, customDescriptions)\r\n\r\n  const secondRemainingBlockSync = blockDifference * MOVO_BLOCK_TIME\r\n\r\n  const indicatorValue = getIndicator(status)\r\n\r\n  const current = indicatorProps[indicatorValue]\r\n\r\n  const { targetRef, tooltipVisible, tooltip } = useTooltip(\r\n    <TooltipContent\r\n      currentBlock={currentBlock}\r\n      secondRemainingBlockSync={secondRemainingBlockSync}\r\n      blockNumberFromSubgraph={latestBlock}\r\n      {...current}\r\n    />,\r\n    {\r\n      placement: 'top',\r\n    },\r\n  )\r\n\r\n  if (!latestBlock || !currentBlock || !showIndicator) {\r\n    return null\r\n  }\r\n\r\n  if (inline) {\r\n    return (\r\n      <IndicatorWrapper alignItems=\"center\" justifyContent=\"flex-end\" ref={targetRef}>\r\n        <Dot $color={current.color} />\r\n        <Text>{current.label}</Text>\r\n        <InfoIcon />\r\n        {tooltipVisible && tooltip}\r\n      </IndicatorWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Box position=\"fixed\" bottom=\"55px\" right=\"5%\" ref={targetRef} data-test=\"subgraph-health-indicator\">\r\n      {tooltipVisible && tooltip}\r\n      <StyledCard>\r\n        <IndicatorWrapper alignItems=\"center\" p=\"10px\">\r\n          <Dot $color={current.color} />\r\n          <Text>{current.label}</Text>\r\n          <InfoIcon />\r\n        </IndicatorWrapper>\r\n      </StyledCard>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst TooltipContent = ({\r\n  color,\r\n  label,\r\n  description,\r\n  currentBlock,\r\n  secondRemainingBlockSync,\r\n  blockNumberFromSubgraph,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Box>\r\n      <IndicatorWrapper pb=\"10px\">\r\n        <Dot $color={color} />\r\n        <Text>{label}</Text>\r\n      </IndicatorWrapper>\r\n      <Text pb=\"24px\">{description}</Text>\r\n      <Text>\r\n        <strong>{t('Chain Head Block')}:</strong> {currentBlock}\r\n      </Text>\r\n      <Text>\r\n        <strong>{t('Latest Subgraph Block')}:</strong> {blockNumberFromSubgraph}\r\n      </Text>\r\n      <Text>\r\n        <strong>{t('Delay')}:</strong> {currentBlock - blockNumberFromSubgraph} ({secondRemainingBlockSync}s)\r\n      </Text>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default SubgraphHealthIndicator\r\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[118],{\n\n/***/ 38144:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Z\": function() { return /* binding */ Card_Card; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_object_spread.mjs\nvar _object_spread = __webpack_require__(26042);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_object_spread_props.mjs\nvar _object_spread_props = __webpack_require__(69396);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_object_without_properties.mjs + 1 modules\nvar _object_without_properties = __webpack_require__(99534);\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(85893);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_tagged_template_literal.mjs\nvar _tagged_template_literal = __webpack_require__(7297);\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js + 4 modules\nvar styled_components_browser_esm = __webpack_require__(87379);\n// EXTERNAL MODULE: ./node_modules/styled-system/dist/index.esm.js + 13 modules\nvar index_esm = __webpack_require__(57247);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Box/Box.tsx + 29 modules\nvar Box = __webpack_require__(7180);\n;// CONCATENATED MODULE: ./packages/uikit/src/components/Card/StyledCard.tsx\n\n\n\n\nfunction _templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  0% {\\n    background-position: 50% 0%;\\n  }\\n  50% {\\n    background-position: 50% 100%;\\n  }\\n  100% {\\n    background-position: 50% 0%;\\n  }\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n      animation: \",\n        \" 3s ease infinite;\\n      background-size: 400% 400%;\\n    \"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  background: \",\n        \";\\n  border-radius: \",\n        \";\\n  color: \",\n        \";\\n  overflow: hidden;\\n  position: relative;\\n\\n  \",\n        \"\\n\\n  padding: 1px 1px 3px 1px;\\n\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject3() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  width: 100%;\\n  height: 100%;\\n  overflow: \",\n        \";\\n  background: \",\n        \";\\n  border-radius: 8px;\\n\"\n    ]);\n    _templateObject3 = function _templateObject3() {\n        return data;\n    };\n    return data;\n}\nvar PromotedGradient = (0,styled_components_browser_esm/* keyframes */.F4)(_templateObject());\n/**\n * Priority: Warning --> Success --> Active\n */ var getBorderColor = function getBorderColor(param) {\n    var isActive = param.isActive, isSuccess = param.isSuccess, isWarning = param.isWarning, borderBackground = param.borderBackground, theme = param.theme;\n    if (borderBackground) {\n        return borderBackground;\n    }\n    if (isWarning) {\n        return theme.colors.warning;\n    }\n    if (isSuccess) {\n        return theme.colors.success;\n    }\n    if (isActive) {\n        return \"linear-gradient(180deg, \".concat(theme.colors.primaryBright, \", \").concat(theme.colors.secondary, \")\");\n    }\n    return theme.colors.cardBorder;\n};\nvar StyledCard = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-8a82d250-0\"\n}).withConfig({\n    componentId: \"sc-4ec8cc93-0\"\n})(_templateObject2(), getBorderColor, function(param) {\n    var theme = param.theme;\n    return theme.radii.card;\n}, function(param) {\n    var theme = param.theme, isDisabled = param.isDisabled;\n    return theme.colors[isDisabled ? \"textDisabled\" : \"text\"];\n}, function(param) {\n    var isActive = param.isActive;\n    return isActive && (0,styled_components_browser_esm/* css */.iv)(_templateObject1(), PromotedGradient);\n}, index_esm/* space */.Dh);\nvar StyledCardInner = (0,styled_components_browser_esm/* default */.ZP)(Box/* default */.Z).withConfig({\n    componentId: \"sc-8a82d250-1\"\n}).withConfig({\n    componentId: \"sc-4ec8cc93-1\"\n})(_templateObject3(), function(param) {\n    var hasCustomBorder = param.hasCustomBorder;\n    return hasCustomBorder ? \"initial\" : \"inherit\";\n}, function(param) {\n    var theme = param.theme, background = param.background;\n    return background !== null && background !== void 0 ? background : theme.card.background;\n});\nStyledCard.defaultProps = {\n    isActive: false,\n    isSuccess: false,\n    isWarning: false,\n    isDisabled: false\n};\n\n;// CONCATENATED MODULE: ./packages/uikit/src/components/Card/Card.tsx\n\n\n\n\n\n\nvar Card = function Card(_param) {\n    var ribbon = _param.ribbon, children = _param.children, background = _param.background, props = (0,_object_without_properties/* default */.Z)(_param, [\n        \"ribbon\",\n        \"children\",\n        \"background\"\n    ]);\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(StyledCard, (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, props), {\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(StyledCardInner, {\n            background: background,\n            hasCustomBorder: !!props.borderBackground,\n            children: [\n                ribbon,\n                children\n            ]\n        })\n    }));\n};\n/* harmony default export */ var Card_Card = (Card);\n\n\n/***/ }),\n\n/***/ 118:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ components_SubgraphHealthIndicator; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_object_spread.mjs\nvar _object_spread = __webpack_require__(26042);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(10253);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_tagged_template_literal.mjs\nvar _tagged_template_literal = __webpack_require__(7297);\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(85893);\n// EXTERNAL MODULE: ./src/config/index.ts + 1 modules\nvar config = __webpack_require__(37519);\n// EXTERNAL MODULE: ./src/contexts/Localization/index.tsx + 3 modules\nvar Localization = __webpack_require__(99150);\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js + 4 modules\nvar styled_components_browser_esm = __webpack_require__(87379);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Card/Card.tsx + 1 modules\nvar Card = __webpack_require__(38144);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Box/Flex.tsx\nvar Flex = __webpack_require__(4318);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Box/Box.tsx + 29 modules\nvar Box = __webpack_require__(7180);\n// EXTERNAL MODULE: ./packages/uikit/src/hooks/useTooltip/useTooltip.tsx + 1 modules\nvar useTooltip = __webpack_require__(36544);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Text/Text.tsx\nvar Text = __webpack_require__(97114);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/Info.tsx\nvar Info = __webpack_require__(82035);\n// EXTERNAL MODULE: ./src/state/user/hooks/index.tsx\nvar hooks = __webpack_require__(68605);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_async_to_generator.mjs\nvar _async_to_generator = __webpack_require__(47568);\n// EXTERNAL MODULE: ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\nvar runtime = __webpack_require__(34051);\nvar runtime_default = /*#__PURE__*/__webpack_require__.n(runtime);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/graphql-request/dist/index.js\nvar dist = __webpack_require__(28687);\n// EXTERNAL MODULE: ./src/utils/providers.ts + 1 modules\nvar providers = __webpack_require__(65684);\n// EXTERNAL MODULE: ./src/config/constants/endpoints.ts\nvar endpoints = __webpack_require__(85906);\n// EXTERNAL MODULE: ./src/hooks/useRefreshEffect.ts\nvar useRefreshEffect = __webpack_require__(27892);\n;// CONCATENATED MODULE: ./src/hooks/useSubgraphHealth.ts\n\n\n\n\nfunction _templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        '\\n            query getNftMarketSubgraphHealth {\\n              indexingStatusForCurrentVersion(subgraphName: \"',\n        '\") {\\n                synced\\n                health\\n                chains {\\n                  chainHeadBlock {\\n                    number\\n                  }\\n                  latestBlock {\\n                    number\\n                  }\\n                }\\n              }\\n            }\\n          '\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\nvar SubgraphStatus;\n(function(SubgraphStatus) {\n    SubgraphStatus[SubgraphStatus[\"OK\"] = 0] = \"OK\";\n    SubgraphStatus[SubgraphStatus[\"WARNING\"] = 1] = \"WARNING\";\n    SubgraphStatus[SubgraphStatus[\"NOT_OK\"] = 2] = \"NOT_OK\";\n    SubgraphStatus[SubgraphStatus[\"UNKNOWN\"] = 3] = \"UNKNOWN\";\n})(SubgraphStatus || (SubgraphStatus = {}));\nvar NOT_OK_BLOCK_DIFFERENCE = 200 // ~15 minutes delay\n;\nvar WARNING_BLOCK_DIFFERENCE = 50 // ~2.5 minute delay\n;\nvar useSubgraphHealth = function(subgraphName) {\n    var ref = (0,react.useState)({\n        status: SubgraphStatus.UNKNOWN,\n        currentBlock: 0,\n        chainHeadBlock: 0,\n        latestBlock: 0,\n        blockDifference: 0\n    }), sgHealth = ref[0], setSgHealth = ref[1];\n    (0,useRefreshEffect/* useSlowRefreshEffect */.X)(function(currentBlockNumber) {\n        var getSubgraphHealth = function() {\n            var _ref = (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee() {\n                var ref, indexingStatusForCurrentVersion, currentBlock, isHealthy, chainHeadBlock, latestBlock, blockDifference, chainHeadBlockDifference;\n                return runtime_default().wrap(function _callee$(_ctx) {\n                    while(1)switch(_ctx.prev = _ctx.next){\n                        case 0:\n                            _ctx.prev = 0;\n                            _ctx.t0 = _sliced_to_array/* default */.Z;\n                            _ctx.next = 4;\n                            return Promise.all([\n                                (0,dist.request)(endpoints/* GRAPH_HEALTH */.AM, (0,dist.gql)(_templateObject(), subgraphName)),\n                                currentBlockNumber ? Promise.resolve(currentBlockNumber) : providers/* movoRpcProvider.getBlockNumber */.U6.getBlockNumber(), \n                            ]);\n                        case 4:\n                            _ctx.t1 = _ctx.sent;\n                            ref = (0, _ctx.t0)(_ctx.t1, 2);\n                            indexingStatusForCurrentVersion = ref[0].indexingStatusForCurrentVersion;\n                            currentBlock = ref[1];\n                            isHealthy = indexingStatusForCurrentVersion.health === \"healthy\";\n                            chainHeadBlock = parseInt(indexingStatusForCurrentVersion.chains[0].chainHeadBlock.number);\n                            latestBlock = parseInt(indexingStatusForCurrentVersion.chains[0].latestBlock.number);\n                            blockDifference = currentBlock - latestBlock;\n                            chainHeadBlockDifference = currentBlock - chainHeadBlock;\n                            if (!isHealthy || blockDifference > NOT_OK_BLOCK_DIFFERENCE || chainHeadBlockDifference > NOT_OK_BLOCK_DIFFERENCE) {\n                                setSgHealth({\n                                    status: SubgraphStatus.NOT_OK,\n                                    currentBlock: currentBlock,\n                                    chainHeadBlock: chainHeadBlock,\n                                    latestBlock: latestBlock,\n                                    blockDifference: blockDifference\n                                });\n                            } else if (blockDifference > WARNING_BLOCK_DIFFERENCE || chainHeadBlockDifference > WARNING_BLOCK_DIFFERENCE) {\n                                setSgHealth({\n                                    status: SubgraphStatus.WARNING,\n                                    currentBlock: currentBlock,\n                                    chainHeadBlock: chainHeadBlock,\n                                    latestBlock: latestBlock,\n                                    blockDifference: blockDifference\n                                });\n                            } else {\n                                setSgHealth({\n                                    status: SubgraphStatus.OK,\n                                    currentBlock: currentBlock,\n                                    chainHeadBlock: chainHeadBlock,\n                                    latestBlock: latestBlock,\n                                    blockDifference: blockDifference\n                                });\n                            }\n                            _ctx.next = 19;\n                            break;\n                        case 16:\n                            _ctx.prev = 16;\n                            _ctx.t2 = _ctx[\"catch\"](0);\n                            console.error(\"Failed to perform health check for \".concat(subgraphName, \" subgraph\"), _ctx.t2);\n                        case 19:\n                        case \"end\":\n                            return _ctx.stop();\n                    }\n                }, _callee, null, [\n                    [\n                        0,\n                        16\n                    ]\n                ]);\n            }));\n            return function getSubgraphHealth() {\n                return _ref.apply(this, arguments);\n            };\n        }();\n        getSubgraphHealth();\n    }, [\n        subgraphName\n    ]);\n    return sgHealth;\n};\n/* harmony default export */ var hooks_useSubgraphHealth = (useSubgraphHealth);\n\n;// CONCATENATED MODULE: ./src/components/SubgraphHealthIndicator/index.tsx\n\n\n\nfunction SubgraphHealthIndicator_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  border-radius: 8px;\\n  > div {\\n    border-radius: 8px;\\n  }\\n  user-select: none;\\n\"\n    ]);\n    SubgraphHealthIndicator_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  gap: 7px;\\n\"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject2() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  width: 12px;\\n  height: 12px;\\n  border-radius: 50%;\\n  background: \",\n        \";\\n\"\n    ]);\n    _templateObject2 = function _templateObject2() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\nvar StyledCard = (0,styled_components_browser_esm/* default */.ZP)(Card/* default */.Z).withConfig({\n    componentId: \"sc-d34ee9f5-0\"\n})(SubgraphHealthIndicator_templateObject());\nvar IndicatorWrapper = (0,styled_components_browser_esm/* default */.ZP)(Flex/* default */.Z).withConfig({\n    componentId: \"sc-d34ee9f5-1\"\n})(_templateObject1());\nvar Dot = (0,styled_components_browser_esm/* default */.ZP)(Box/* default */.Z).withConfig({\n    componentId: \"sc-d34ee9f5-2\"\n})(_templateObject2(), function(param) {\n    var $color = param.$color, theme = param.theme;\n    return theme.colors[$color];\n});\nvar ref, ref1, ref2;\nvar indicator = function(t, customDescriptions) {\n    return {\n        delayed: {\n            label: t(\"Delayed\"),\n            color: \"failure\",\n            description: (ref = customDescriptions === null || customDescriptions === void 0 ? void 0 : customDescriptions.delayed) !== null && ref !== void 0 ? ref : t(\"Subgraph is currently experiencing delays due to MOVO issues. Performance may suffer until subgraph is restored.\")\n        },\n        slow: {\n            label: t(\"Slight delay\"),\n            color: \"warning\",\n            description: (ref1 = customDescriptions === null || customDescriptions === void 0 ? void 0 : customDescriptions.slow) !== null && ref1 !== void 0 ? ref1 : t(\"Subgraph is currently experiencing delays due to MOVO issues. Performance may suffer until subgraph is restored.\")\n        },\n        healthy: {\n            label: t(\"Fast\"),\n            color: \"success\",\n            description: (ref2 = customDescriptions === null || customDescriptions === void 0 ? void 0 : customDescriptions.healthy) !== null && ref2 !== void 0 ? ref2 : t(\"No issues with the subgraph.\")\n        }\n    };\n};\nvar getIndicator = function(sgStatus) {\n    if (sgStatus === SubgraphStatus.NOT_OK) {\n        return \"delayed\";\n    }\n    if (sgStatus === SubgraphStatus.WARNING) {\n        return \"slow\";\n    }\n    return \"healthy\";\n};\nvar SubgraphHealthIndicator = function(param) {\n    var subgraphName = param.subgraphName, inline = param.inline, customDescriptions = param.customDescriptions, obeyGlobalSetting = param.obeyGlobalSetting;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var ref = hooks_useSubgraphHealth(subgraphName), status = ref.status, currentBlock = ref.currentBlock, blockDifference = ref.blockDifference, latestBlock = ref.latestBlock;\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,hooks/* useSubgraphHealthIndicatorManager */.YF)(), 1), alwaysShowIndicator = ref1[0];\n    var forceIndicatorDisplay = status === SubgraphStatus.WARNING || status === SubgraphStatus.NOT_OK;\n    var showIndicator = obeyGlobalSetting && alwaysShowIndicator || forceIndicatorDisplay;\n    var indicatorProps = indicator(t, customDescriptions);\n    var secondRemainingBlockSync = blockDifference * config/* MOVO_BLOCK_TIME */.Wx;\n    var indicatorValue = getIndicator(status);\n    var current = indicatorProps[indicatorValue];\n    var ref2 = (0,useTooltip/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(TooltipContent, (0,_object_spread/* default */.Z)({\n        currentBlock: currentBlock,\n        secondRemainingBlockSync: secondRemainingBlockSync,\n        blockNumberFromSubgraph: latestBlock\n    }, current)), {\n        placement: \"top\"\n    }), targetRef = ref2.targetRef, tooltipVisible = ref2.tooltipVisible, tooltip = ref2.tooltip;\n    if (!latestBlock || !currentBlock || !showIndicator) {\n        return null;\n    }\n    if (inline) {\n        return /*#__PURE__*/ (0,jsx_runtime.jsxs)(IndicatorWrapper, {\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            ref: targetRef,\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Dot, {\n                    $color: current.color\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    children: current.label\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Info/* default */.Z, {}),\n                tooltipVisible && tooltip\n            ]\n        });\n    }\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n        position: \"fixed\",\n        bottom: \"55px\",\n        right: \"5%\",\n        ref: targetRef,\n        \"data-test\": \"subgraph-health-indicator\",\n        children: [\n            tooltipVisible && tooltip,\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(StyledCard, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(IndicatorWrapper, {\n                    alignItems: \"center\",\n                    p: \"10px\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Dot, {\n                            $color: current.color\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            children: current.label\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Info/* default */.Z, {})\n                    ]\n                })\n            })\n        ]\n    });\n};\nvar TooltipContent = function(param) {\n    var color = param.color, label = param.label, description = param.description, currentBlock = param.currentBlock, secondRemainingBlockSync = param.secondRemainingBlockSync, blockNumberFromSubgraph = param.blockNumberFromSubgraph;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(IndicatorWrapper, {\n                pb: \"10px\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Dot, {\n                        $color: color\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        children: label\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                pb: \"24px\",\n                children: description\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"strong\", {\n                        children: [\n                            t(\"Chain Head Block\"),\n                            \":\"\n                        ]\n                    }),\n                    \" \",\n                    currentBlock\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"strong\", {\n                        children: [\n                            t(\"Latest Subgraph Block\"),\n                            \":\"\n                        ]\n                    }),\n                    \" \",\n                    blockNumberFromSubgraph\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"strong\", {\n                        children: [\n                            t(\"Delay\"),\n                            \":\"\n                        ]\n                    }),\n                    \" \",\n                    currentBlock - blockNumberFromSubgraph,\n                    \" (\",\n                    secondRemainingBlockSync,\n                    \"s)\"\n                ]\n            })\n        ]\n    });\n};\n/* harmony default export */ var components_SubgraphHealthIndicator = (SubgraphHealthIndicator);\n\n\n/***/ })\n\n}]);"],"names":["self","push","__unused_webpack_module","__webpack_exports__","__webpack_require__","d","Card_Card","_object_spread","_object_spread_props","_object_without_properties","jsx_runtime","_tagged_template_literal","styled_components_browser_esm","index_esm","Box","_templateObject","data","Z","_templateObject1","_templateObject2","_templateObject3","PromotedGradient","F4","StyledCard","ZP","div","withConfig","componentId","param","isActive","isSuccess","isWarning","borderBackground","theme","colors","warning","success","concat","primaryBright","secondary","cardBorder","radii","card","isDisabled","iv","Dh","StyledCardInner","hasCustomBorder","background","defaultProps","_param","ribbon","children","props","jsx","jsxs","r","components_SubgraphHealthIndicator","SubgraphStatus","ref","ref1","ref2","_sliced_to_array","config","Localization","Card","Flex","useTooltip","Text","Info","hooks","_async_to_generator","runtime","runtime_default","n","react","dist","providers","endpoints","useRefreshEffect","hooks_useSubgraphHealth","subgraphName","useState","status","UNKNOWN","currentBlock","chainHeadBlock","latestBlock","blockDifference","sgHealth","setSgHealth","X","currentBlockNumber","_ref","mark","_callee","indexingStatusForCurrentVersion","isHealthy","chainHeadBlockDifference","wrap","_ctx","prev","next","t0","Promise","all","request","AM","gql","resolve","U6","getBlockNumber","t1","sent","health","parseInt","chains","number","NOT_OK","WARNING","OK","t2","console","error","stop","apply","arguments","SubgraphHealthIndicator_templateObject","IndicatorWrapper","Dot","$color","TooltipContent","color","label","description","secondRemainingBlockSync","blockNumberFromSubgraph","t","$G","pb","customDescriptions","sgStatus","inline","obeyGlobalSetting","YF","alwaysShowIndicator","forceIndicatorDisplay","indicatorProps","delayed","slow","healthy","Wx","current","placement","targetRef","tooltipVisible","tooltip","alignItems","justifyContent","position","bottom","right","p"],"sourceRoot":""}