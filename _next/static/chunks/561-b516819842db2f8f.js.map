{"version":3,"file":"static/chunks/561-b516819842db2f8f.js","mappings":"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","sources":["webpack://_N_E/./src/config/constants/exchange.ts","webpack://_N_E/./src/utils/trades.ts","webpack://_N_E/./src/hooks/Trades.ts","webpack://_N_E/./src/utils/exchange.ts","webpack://_N_E/./src/utils/tryParseAmount.ts","webpack://_N_E/<anon>"],"sourcesContent":["import { ChainId, JSBI, Percent, Token } from '@pancakeswap/sdk'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { movoTokens, bscTestnetTokens } from './tokens'\nimport { ChainTokenList } from './types'\n\nexport const ROUTER_ADDRESS = {\n  [ChainId.MOVO]: '0x820973bA86b25a735859e1Dd4e696e891Eec8C14',\n  [ChainId.MOVO_TESTNET]: '0xD99D1c33F9fC3444f8101754aBC46c52416550D1',\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MOVO]: [\n    movoTokens.wbnb,\n    movoTokens.cake,\n    // movoTokens.busd,\n    movoTokens.usdt,\n    // movoTokens.btcb,\n    // movoTokens.eth,\n    // movoTokens.usdc,\n  ],\n  [ChainId.MOVO_TESTNET]: [bscTestnetTokens.wbnb, bscTestnetTokens.busd],\n}\n\n/**\n * Additional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MOVO]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WNATIVE[ChainId.MOVO]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MOVO]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MOVO]: [\n    // movoTokens.busd,\n    movoTokens.cake,\n    // movoTokens.btcb\n  ],\n  [ChainId.MOVO_TESTNET]: [bscTestnetTokens.wbnb, bscTestnetTokens.busd],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MOVO]: [\n    movoTokens.wbnb,\n    movoTokens.cake,\n    // movoTokens.dai,\n    // movoTokens.busd,\n    movoTokens.usdt,\n  ],\n  [ChainId.MOVO_TESTNET]: [bscTestnetTokens.wbnb, bscTestnetTokens.busd],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MOVO]: [\n    [movoTokens.cake, movoTokens.wbnb],\n    // [movoTokens.busd, movoTokens.usdt],\n    // [movoTokens.dai, movoTokens.usdt],\n  ],\n}\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\nexport const BIG_INT_TEN = JSBI.BigInt(10)\n\n// one basis point\nexport const BIPS_BASE = JSBI.BigInt(10000)\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), BIPS_BASE)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much MOVO so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(BIG_INT_TEN, JSBI.BigInt(16)) // .01 MOVO\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), BIPS_BASE)\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\nexport const BASE_FEE = new Percent(JSBI.BigInt(25), BIPS_BASE)\nexport const INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// MOVO\nexport const DEFAULT_INPUT_CURRENCY = 'MOVO'\n// BEGO\nexport const DEFAULT_OUTPUT_CURRENCY = '0x829d6d268a3cdcff2f4bd119D1281986b3D6B906'\n\n// Handler string is passed to Gelato to use PCS router\nexport const GELATO_HANDLER = 'pancakeswap'\nexport const GENERIC_GAS_LIMIT_ORDER_EXECUTION = BigNumber.from(500000)\n\nexport const LIMIT_ORDERS_DOCS_URL = 'https://docs.cloudtx.finance/products/pancakeswap-exchange/limit-orders'\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\r\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from 'config/constants/exchange'\r\n\r\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\r\nexport function isTradeBetter(\r\n  tradeA: Trade | undefined | null,\r\n  tradeB: Trade | undefined | null,\r\n  minimumDelta: Percent = ZERO_PERCENT,\r\n): boolean | undefined {\r\n  if (tradeA && !tradeB) return false\r\n  if (tradeB && !tradeA) return true\r\n  if (!tradeA || !tradeB) return undefined\r\n\r\n  if (\r\n    tradeA.tradeType !== tradeB.tradeType ||\r\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency)\r\n  ) {\r\n    throw new Error('Trades are not comparable')\r\n  }\r\n\r\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\r\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\r\n  }\r\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\r\n}\r\n\r\nexport default isTradeBetter\r\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from 'config/constants/exchange'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens, useWarningTokens } from './Tokens'\n\nexport function useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n  const allPairs = usePairs(allPairCombinations)\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport function useIsTransactionWarning(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useWarningTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { Web3Provider } from '@ethersproject/providers'\r\nimport IPancakeRouter02ABI from 'config/abi/IPancakeRouter02.json'\r\nimport { IPancakeRouter02 } from 'config/abi/types/IPancakeRouter02'\r\nimport { JSBI, Percent, CurrencyAmount, Trade, Fraction, TokenAmount } from '@pancakeswap/sdk'\r\nimport {\r\n  ROUTER_ADDRESS,\r\n  BIPS_BASE,\r\n  ONE_HUNDRED_PERCENT,\r\n  INPUT_FRACTION_AFTER_FEE,\r\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\r\n  ALLOWED_PRICE_IMPACT_HIGH,\r\n  ALLOWED_PRICE_IMPACT_MEDIUM,\r\n  ALLOWED_PRICE_IMPACT_LOW,\r\n} from 'config/constants/exchange'\r\nimport { getContract, getProviderOrSigner } from './index'\r\nimport { Field } from '../state/swap/actions'\r\n\r\n// converts a basis points value to a sdk percent\r\nexport function basisPointsToPercent(num: number): Percent {\r\n  return new Percent(JSBI.BigInt(num), BIPS_BASE)\r\n}\r\n\r\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\r\n  if (slippage < 0 || slippage > 10000) {\r\n    throw Error(`Unexpected slippage value: ${slippage}`)\r\n  }\r\n  return [\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), BIPS_BASE),\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), BIPS_BASE),\r\n  ]\r\n}\r\n\r\n// account is optional\r\nexport function getRouterContract(chainId: number, library: Web3Provider, account?: string) {\r\n  return getContract(\r\n    ROUTER_ADDRESS[chainId],\r\n    IPancakeRouter02ABI,\r\n    getProviderOrSigner(library, account),\r\n  ) as IPancakeRouter02\r\n}\r\n\r\n// computes price breakdown for the trade\r\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\r\n  priceImpactWithoutFee: Percent | undefined\r\n  realizedLPFee: CurrencyAmount | undefined | null\r\n} {\r\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\r\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\r\n  const realizedLPFee = !trade\r\n    ? undefined\r\n    : ONE_HUNDRED_PERCENT.subtract(\r\n        trade.route.pairs.reduce<Fraction>(\r\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\r\n          ONE_HUNDRED_PERCENT,\r\n        ),\r\n      )\r\n\r\n  // remove lp fees from price impact\r\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\r\n\r\n  // the x*y=k impact\r\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\r\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\r\n    : undefined\r\n\r\n  // the amount of the input that accrues to LPs\r\n  const realizedLPFeeAmount =\r\n    realizedLPFee &&\r\n    trade &&\r\n    (trade.inputAmount instanceof TokenAmount\r\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\r\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\r\n\r\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\r\n}\r\n\r\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\r\nexport function computeSlippageAdjustedAmounts(\r\n  trade: Trade | undefined,\r\n  allowedSlippage: number,\r\n): { [field in Field]?: CurrencyAmount } {\r\n  const pct = basisPointsToPercent(allowedSlippage)\r\n  return {\r\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\r\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\r\n  }\r\n}\r\n\r\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\r\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\r\n  return 0\r\n}\r\n\r\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\r\n  if (!trade) {\r\n    return ''\r\n  }\r\n  return inverted\r\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\r\n        trade.outputAmount.currency.symbol\r\n      }`\r\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\r\n        trade.inputAmount.currency.symbol\r\n      }`\r\n}\r\n","import { parseUnits } from '@ethersproject/units'\r\nimport { Currency, CurrencyAmount, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\r\n\r\n// try to parse a user entered amount for a given token\r\nconst tryParseAmount = (value?: string, currency?: Currency): CurrencyAmount | TokenAmount | undefined => {\r\n  if (!value || !currency) {\r\n    return undefined\r\n  }\r\n  try {\r\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\r\n\r\n    if (typedValueParsed !== '0') {\r\n      return currency instanceof Token\r\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\r\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\r\n    }\r\n  } catch (error) {\r\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\r\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\r\n  }\r\n  // necessary for all paths to return a value\r\n  return undefined\r\n}\r\n\r\nexport default tryParseAmount\r\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[561],{\n\n/***/ 19838:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Bz\": function() { return /* binding */ ALLOWED_PRICE_IMPACT_LOW; },\n/* harmony export */   \"EV\": function() { return /* binding */ PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN; },\n/* harmony export */   \"IP\": function() { return /* binding */ CUSTOM_BASES; },\n/* harmony export */   \"IS\": function() { return /* binding */ ONE_BIPS; },\n/* harmony export */   \"PM\": function() { return /* binding */ BIPS_BASE; },\n/* harmony export */   \"Ru\": function() { return /* binding */ BETTER_TRADE_LESS_HOPS_THRESHOLD; },\n/* harmony export */   \"TY\": function() { return /* binding */ BIG_INT_TEN; },\n/* harmony export */   \"Uf\": function() { return /* binding */ ALLOWED_PRICE_IMPACT_HIGH; },\n/* harmony export */   \"Uz\": function() { return /* binding */ MIN_BNB; },\n/* harmony export */   \"VN\": function() { return /* binding */ DEFAULT_INPUT_CURRENCY; },\n/* harmony export */   \"Zw\": function() { return /* binding */ INPUT_FRACTION_AFTER_FEE; },\n/* harmony export */   \"bR\": function() { return /* binding */ ROUTER_ADDRESS; },\n/* harmony export */   \"ck\": function() { return /* binding */ ADDITIONAL_BASES; },\n/* harmony export */   \"fI\": function() { return /* binding */ ZERO_PERCENT; },\n/* harmony export */   \"g$\": function() { return /* binding */ DEFAULT_OUTPUT_CURRENCY; },\n/* harmony export */   \"iV\": function() { return /* binding */ BIG_INT_ZERO; },\n/* harmony export */   \"kx\": function() { return /* binding */ SUGGESTED_BASES; },\n/* harmony export */   \"lM\": function() { return /* binding */ BASES_TO_CHECK_TRADES_AGAINST; },\n/* harmony export */   \"lN\": function() { return /* binding */ BLOCKED_PRICE_IMPACT_NON_EXPERT; },\n/* harmony export */   \"p9\": function() { return /* binding */ ALLOWED_PRICE_IMPACT_MEDIUM; },\n/* harmony export */   \"q3\": function() { return /* binding */ GENERIC_GAS_LIMIT_ORDER_EXECUTION; },\n/* harmony export */   \"uX\": function() { return /* binding */ GELATO_HANDLER; },\n/* harmony export */   \"vm\": function() { return /* binding */ LIMIT_ORDERS_DOCS_URL; },\n/* harmony export */   \"yC\": function() { return /* binding */ ONE_HUNDRED_PERCENT; }\n/* harmony export */ });\n/* unused harmony exports BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS, BASE_FEE */\n/* harmony import */ var _swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(14924);\n/* harmony import */ var _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(54346);\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2593);\n/* harmony import */ var _tokens__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29748);\n\n\n\n\nvar _obj;\nvar ROUTER_ADDRESS = (_obj = {}, (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)(_obj, _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .ChainId.MOVO */ .a_.MOVO, \"0x820973bA86b25a735859e1Dd4e696e891Eec8C14\"), (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)(_obj, _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .ChainId.MOVO_TESTNET */ .a_.MOVO_TESTNET, \"0xD99D1c33F9fC3444f8101754aBC46c52416550D1\"), _obj);\nvar _obj1;\n// used to construct intermediary pairs for trading\nvar BASES_TO_CHECK_TRADES_AGAINST = (_obj1 = {}, (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)(_obj1, _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .ChainId.MOVO */ .a_.MOVO, [\n    _tokens__WEBPACK_IMPORTED_MODULE_1__/* .movoTokens.wbnb */ .xP.wbnb,\n    _tokens__WEBPACK_IMPORTED_MODULE_1__/* .movoTokens.cake */ .xP.cake,\n    // movoTokens.busd,\n    _tokens__WEBPACK_IMPORTED_MODULE_1__/* .movoTokens.usdt */ .xP.usdt, \n]), (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)(_obj1, _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .ChainId.MOVO_TESTNET */ .a_.MOVO_TESTNET, [\n    _tokens__WEBPACK_IMPORTED_MODULE_1__/* .bscTestnetTokens.wbnb */ .dI.wbnb,\n    _tokens__WEBPACK_IMPORTED_MODULE_1__/* .bscTestnetTokens.busd */ .dI.busd\n]), _obj1);\n/**\n * Additional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */ var ADDITIONAL_BASES = (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)({}, _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .ChainId.MOVO */ .a_.MOVO, {});\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WNATIVE[ChainId.MOVO]]\n */ var CUSTOM_BASES = (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)({}, _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .ChainId.MOVO */ .a_.MOVO, {});\nvar _obj2;\n// used for display in the default list when adding liquidity\nvar SUGGESTED_BASES = (_obj2 = {}, (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)(_obj2, _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .ChainId.MOVO */ .a_.MOVO, [\n    // movoTokens.busd,\n    _tokens__WEBPACK_IMPORTED_MODULE_1__/* .movoTokens.cake */ .xP.cake\n]), (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)(_obj2, _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .ChainId.MOVO_TESTNET */ .a_.MOVO_TESTNET, [\n    _tokens__WEBPACK_IMPORTED_MODULE_1__/* .bscTestnetTokens.wbnb */ .dI.wbnb,\n    _tokens__WEBPACK_IMPORTED_MODULE_1__/* .bscTestnetTokens.busd */ .dI.busd\n]), _obj2);\nvar _obj3;\n// used to construct the list of all pairs we consider by default in the frontend\nvar BASES_TO_TRACK_LIQUIDITY_FOR = (_obj3 = {}, (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)(_obj3, _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .ChainId.MOVO */ .a_.MOVO, [\n    _tokens__WEBPACK_IMPORTED_MODULE_1__/* .movoTokens.wbnb */ .xP.wbnb,\n    _tokens__WEBPACK_IMPORTED_MODULE_1__/* .movoTokens.cake */ .xP.cake,\n    // movoTokens.dai,\n    // movoTokens.busd,\n    _tokens__WEBPACK_IMPORTED_MODULE_1__/* .movoTokens.usdt */ .xP.usdt, \n]), (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)(_obj3, _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .ChainId.MOVO_TESTNET */ .a_.MOVO_TESTNET, [\n    _tokens__WEBPACK_IMPORTED_MODULE_1__/* .bscTestnetTokens.wbnb */ .dI.wbnb,\n    _tokens__WEBPACK_IMPORTED_MODULE_1__/* .bscTestnetTokens.busd */ .dI.busd\n]), _obj3);\nvar PINNED_PAIRS = (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)({}, _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .ChainId.MOVO */ .a_.MOVO, [\n    [\n        _tokens__WEBPACK_IMPORTED_MODULE_1__/* .movoTokens.cake */ .xP.cake,\n        _tokens__WEBPACK_IMPORTED_MODULE_1__/* .movoTokens.wbnb */ .xP.wbnb\n    ], \n]);\nvar BIG_INT_ZERO = _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.BigInt */ .QA.BigInt(0);\nvar BIG_INT_TEN = _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.BigInt */ .QA.BigInt(10);\n// one basis point\nvar BIPS_BASE = _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.BigInt */ .QA.BigInt(10000);\nvar ONE_BIPS = new _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .Percent */ .gG(_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.BigInt */ .QA.BigInt(1), BIPS_BASE);\n// used for warning states\nvar ALLOWED_PRICE_IMPACT_LOW = new _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .Percent */ .gG(_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.BigInt */ .QA.BigInt(100), BIPS_BASE) // 1%\n;\nvar ALLOWED_PRICE_IMPACT_MEDIUM = new _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .Percent */ .gG(_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.BigInt */ .QA.BigInt(300), BIPS_BASE) // 3%\n;\nvar ALLOWED_PRICE_IMPACT_HIGH = new _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .Percent */ .gG(_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.BigInt */ .QA.BigInt(500), BIPS_BASE) // 5%\n;\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nvar PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN = new _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .Percent */ .gG(_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.BigInt */ .QA.BigInt(1000), BIPS_BASE) // 10%\n;\n// for non expert mode disable swaps above this\nvar BLOCKED_PRICE_IMPACT_NON_EXPERT = new _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .Percent */ .gG(_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.BigInt */ .QA.BigInt(1500), BIPS_BASE) // 15%\n;\n// used to ensure the user doesn't send so much MOVO so they end up with <.01\nvar MIN_BNB = _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.exponentiate */ .QA.exponentiate(BIG_INT_TEN, _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.BigInt */ .QA.BigInt(16)) // .01 MOVO\n;\nvar BETTER_TRADE_LESS_HOPS_THRESHOLD = new _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .Percent */ .gG(_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.BigInt */ .QA.BigInt(50), BIPS_BASE);\nvar ZERO_PERCENT = new _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .Percent */ .gG(\"0\");\nvar ONE_HUNDRED_PERCENT = new _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .Percent */ .gG(\"1\");\nvar BASE_FEE = new _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .Percent */ .gG(_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.BigInt */ .QA.BigInt(25), BIPS_BASE);\nvar INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE);\n// MOVO\nvar DEFAULT_INPUT_CURRENCY = \"MOVO\";\n// BEGO\nvar DEFAULT_OUTPUT_CURRENCY = \"0x829d6d268a3cdcff2f4bd119D1281986b3D6B906\";\n// Handler string is passed to Gelato to use PCS router\nvar GELATO_HANDLER = \"pancakeswap\";\nvar GENERIC_GAS_LIMIT_ORDER_EXECUTION = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__/* .BigNumber.from */ .O$.from(500000);\nvar LIMIT_ORDERS_DOCS_URL = \"https://docs.cloudtx.finance/products/pancakeswap-exchange/limit-orders\";\n\n\n/***/ }),\n\n/***/ 23715:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"mP\": function() { return /* binding */ useIsTransactionUnsupported; },\n  \"uK\": function() { return /* binding */ useIsTransactionWarning; },\n  \"AU\": function() { return /* binding */ useTradeExactIn; },\n  \"in\": function() { return /* binding */ useTradeExactOut; }\n});\n\n// UNUSED EXPORTS: useAllCommonPairs\n\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(10253);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_to_consumable_array.mjs + 2 modules\nvar _to_consumable_array = __webpack_require__(29815);\n// EXTERNAL MODULE: ./packages/swap-sdk/src/index.ts + 32 modules\nvar src = __webpack_require__(54346);\n// EXTERNAL MODULE: ./src/config/constants/exchange.ts\nvar exchange = __webpack_require__(19838);\n;// CONCATENATED MODULE: ./src/utils/trades.ts\n\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nfunction isTradeBetter(tradeA, tradeB) {\n    var minimumDelta = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : exchange/* ZERO_PERCENT */.fI;\n    if (tradeA && !tradeB) return false;\n    if (tradeB && !tradeA) return true;\n    if (!tradeA || !tradeB) return undefined;\n    if (tradeA.tradeType !== tradeB.tradeType || !(0,src/* currencyEquals */.KA)(tradeA.inputAmount.currency, tradeB.inputAmount.currency) || !(0,src/* currencyEquals */.KA)(tradeA.outputAmount.currency, tradeB.outputAmount.currency)) {\n        throw new Error(\"Trades are not comparable\");\n    }\n    if (minimumDelta.equalTo(exchange/* ZERO_PERCENT */.fI)) {\n        return tradeA.executionPrice.lessThan(tradeB.executionPrice);\n    }\n    return tradeA.executionPrice.raw.multiply(minimumDelta.add(exchange/* ONE_HUNDRED_PERCENT */.yC)).lessThan(tradeB.executionPrice);\n}\n/* harmony default export */ var trades = ((/* unused pure expression or super */ null && (isTradeBetter)));\n\n// EXTERNAL MODULE: ./node_modules/lodash/flatMap.js\nvar flatMap = __webpack_require__(94654);\nvar flatMap_default = /*#__PURE__*/__webpack_require__.n(flatMap);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./src/hooks/useActiveWeb3React.ts\nvar useActiveWeb3React = __webpack_require__(64011);\n// EXTERNAL MODULE: ./src/state/user/hooks/index.tsx\nvar hooks = __webpack_require__(68605);\n// EXTERNAL MODULE: ./src/hooks/usePairs.ts\nvar usePairs = __webpack_require__(84915);\n// EXTERNAL MODULE: ./src/utils/wrappedCurrency.ts\nvar wrappedCurrency = __webpack_require__(53854);\n// EXTERNAL MODULE: ./src/hooks/Tokens.ts\nvar Tokens = __webpack_require__(86435);\n;// CONCATENATED MODULE: ./src/hooks/Trades.ts\n\n\n/* eslint-disable no-param-reassign */ \n\n\n\n\n\n\n\n\n\nfunction useAllCommonPairs(currencyA, currencyB) {\n    var chainId = (0,useActiveWeb3React/* default */.Z)().chainId;\n    var ref = (0,_sliced_to_array/* default */.Z)(chainId ? [\n        (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyA, chainId),\n        (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyB, chainId)\n    ] : [\n        undefined,\n        undefined\n    ], 2), tokenA = ref[0], tokenB = ref[1];\n    var bases = (0,react.useMemo)(function() {\n        var ref, ref1;\n        if (!chainId) return [];\n        var _chainId;\n        var common = (_chainId = exchange/* BASES_TO_CHECK_TRADES_AGAINST */.lM[chainId]) !== null && _chainId !== void 0 ? _chainId : [];\n        var ref2;\n        var additionalA = tokenA ? (ref2 = (ref = exchange/* ADDITIONAL_BASES */.ck[chainId]) === null || ref === void 0 ? void 0 : ref[tokenA.address]) !== null && ref2 !== void 0 ? ref2 : [] : [];\n        var ref3;\n        var additionalB = tokenB ? (ref3 = (ref1 = exchange/* ADDITIONAL_BASES */.ck[chainId]) === null || ref1 === void 0 ? void 0 : ref1[tokenB.address]) !== null && ref3 !== void 0 ? ref3 : [] : [];\n        return (0,_to_consumable_array/* default */.Z)(common).concat((0,_to_consumable_array/* default */.Z)(additionalA), (0,_to_consumable_array/* default */.Z)(additionalB));\n    }, [\n        chainId,\n        tokenA,\n        tokenB\n    ]);\n    var basePairs = (0,react.useMemo)(function() {\n        return flatMap_default()(bases, function(base) {\n            return bases.map(function(otherBase) {\n                return [\n                    base,\n                    otherBase\n                ];\n            });\n        });\n    }, [\n        bases\n    ]);\n    var allPairCombinations = (0,react.useMemo)(function() {\n        return tokenA && tokenB ? [\n            // the direct pair\n            [\n                tokenA,\n                tokenB\n            ], \n        ].concat(// token A against all bases\n        (0,_to_consumable_array/* default */.Z)(bases.map(function(base) {\n            return [\n                tokenA,\n                base\n            ];\n        })), // token B against all bases\n        (0,_to_consumable_array/* default */.Z)(bases.map(function(base) {\n            return [\n                tokenB,\n                base\n            ];\n        })), // each base against all bases\n        (0,_to_consumable_array/* default */.Z)(basePairs)).filter(function(tokens) {\n            return Boolean(tokens[0] && tokens[1]);\n        }).filter(function(param) {\n            var _param = (0,_sliced_to_array/* default */.Z)(param, 2), t0 = _param[0], t1 = _param[1];\n            return t0.address !== t1.address;\n        }).filter(function(param) {\n            var _param = (0,_sliced_to_array/* default */.Z)(param, 2), tokenA_ = _param[0], tokenB_ = _param[1];\n            if (!chainId) return true;\n            var customBases = exchange/* CUSTOM_BASES */.IP[chainId];\n            var customBasesA = customBases === null || customBases === void 0 ? void 0 : customBases[tokenA_.address];\n            var customBasesB = customBases === null || customBases === void 0 ? void 0 : customBases[tokenB_.address];\n            if (!customBasesA && !customBasesB) return true;\n            if (customBasesA && !customBasesA.find(function(base) {\n                return tokenB_.equals(base);\n            })) return false;\n            if (customBasesB && !customBasesB.find(function(base) {\n                return tokenA_.equals(base);\n            })) return false;\n            return true;\n        }) : [];\n    }, [\n        tokenA,\n        tokenB,\n        bases,\n        basePairs,\n        chainId\n    ]);\n    var allPairs = (0,usePairs/* usePairs */.z$)(allPairCombinations);\n    // only pass along valid pairs, non-duplicated pairs\n    return (0,react.useMemo)(function() {\n        return Object.values(allPairs// filter out invalid pairs\n        .filter(function(result) {\n            return Boolean(result[0] === usePairs/* PairState.EXISTS */._G.EXISTS && result[1]);\n        })// filter out duplicated pairs\n        .reduce(function(memo, param) {\n            var _param = (0,_sliced_to_array/* default */.Z)(param, 2), curr = _param[1];\n            var _address;\n            memo[curr.liquidityToken.address] = (_address = memo[curr.liquidityToken.address]) !== null && _address !== void 0 ? _address : curr;\n            return memo;\n        }, {}));\n    }, [\n        allPairs\n    ]);\n}\nvar MAX_HOPS = 3;\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */ function useTradeExactIn(currencyAmountIn, currencyOut) {\n    var allowedPairs = useAllCommonPairs(currencyAmountIn === null || currencyAmountIn === void 0 ? void 0 : currencyAmountIn.currency, currencyOut);\n    var ref = (0,_sliced_to_array/* default */.Z)((0,hooks/* useUserSingleHopOnly */.RO)(), 1), singleHopOnly = ref[0];\n    return (0,react.useMemo)(function() {\n        if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n            if (singleHopOnly) {\n                var ref;\n                return (ref = src/* Trade.bestTradeExactIn */.ho.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, {\n                    maxHops: 1,\n                    maxNumResults: 1\n                })[0]) !== null && ref !== void 0 ? ref : null;\n            }\n            // search through trades with varying hops, find best trade out of them\n            var bestTradeSoFar = null;\n            for(var i = 1; i <= MAX_HOPS; i++){\n                var ref1;\n                var currentTrade = (ref1 = src/* Trade.bestTradeExactIn */.ho.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, {\n                    maxHops: i,\n                    maxNumResults: 1\n                })[0]) !== null && ref1 !== void 0 ? ref1 : null;\n                // if current trade is best yet, save it\n                if (isTradeBetter(bestTradeSoFar, currentTrade, exchange/* BETTER_TRADE_LESS_HOPS_THRESHOLD */.Ru)) {\n                    bestTradeSoFar = currentTrade;\n                }\n            }\n            return bestTradeSoFar;\n        }\n        return null;\n    }, [\n        allowedPairs,\n        currencyAmountIn,\n        currencyOut,\n        singleHopOnly\n    ]);\n}\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */ function useTradeExactOut(currencyIn, currencyAmountOut) {\n    var allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut === null || currencyAmountOut === void 0 ? void 0 : currencyAmountOut.currency);\n    var ref = (0,_sliced_to_array/* default */.Z)((0,hooks/* useUserSingleHopOnly */.RO)(), 1), singleHopOnly = ref[0];\n    return (0,react.useMemo)(function() {\n        if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n            if (singleHopOnly) {\n                var ref;\n                return (ref = src/* Trade.bestTradeExactOut */.ho.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, {\n                    maxHops: 1,\n                    maxNumResults: 1\n                })[0]) !== null && ref !== void 0 ? ref : null;\n            }\n            // search through trades with varying hops, find best trade out of them\n            var bestTradeSoFar = null;\n            for(var i = 1; i <= MAX_HOPS; i++){\n                var ref1;\n                var currentTrade = (ref1 = src/* Trade.bestTradeExactOut */.ho.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, {\n                    maxHops: i,\n                    maxNumResults: 1\n                })[0]) !== null && ref1 !== void 0 ? ref1 : null;\n                if (isTradeBetter(bestTradeSoFar, currentTrade, exchange/* BETTER_TRADE_LESS_HOPS_THRESHOLD */.Ru)) {\n                    bestTradeSoFar = currentTrade;\n                }\n            }\n            return bestTradeSoFar;\n        }\n        return null;\n    }, [\n        currencyIn,\n        currencyAmountOut,\n        allowedPairs,\n        singleHopOnly\n    ]);\n}\nfunction useIsTransactionUnsupported(currencyIn, currencyOut) {\n    var unsupportedTokens = (0,Tokens/* useUnsupportedTokens */.l6)();\n    var chainId = (0,useActiveWeb3React/* default */.Z)().chainId;\n    var tokenIn = (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyIn, chainId);\n    var tokenOut = (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyOut, chainId);\n    // if unsupported list loaded & either token on list, mark as unsupported\n    if (unsupportedTokens) {\n        if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n            return true;\n        }\n        if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction useIsTransactionWarning(currencyIn, currencyOut) {\n    var unsupportedTokens = (0,Tokens/* useWarningTokens */.zd)();\n    var chainId = (0,useActiveWeb3React/* default */.Z)().chainId;\n    var tokenIn = (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyIn, chainId);\n    var tokenOut = (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyOut, chainId);\n    // if unsupported list loaded & either token on list, mark as unsupported\n    if (unsupportedTokens) {\n        if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n            return true;\n        }\n        if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n\n/***/ }),\n\n/***/ 60872:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"uc\": function() { return /* binding */ calculateSlippageAmount; },\n  \"b5\": function() { return /* binding */ computeSlippageAdjustedAmounts; },\n  \"U7\": function() { return /* binding */ computeTradePriceBreakdown; },\n  \"Kh\": function() { return /* binding */ formatExecutionPrice; },\n  \"iY\": function() { return /* binding */ getRouterContract; },\n  \"oX\": function() { return /* binding */ warningSeverity; }\n});\n\n// UNUSED EXPORTS: basisPointsToPercent\n\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_define_property.mjs\nvar _define_property = __webpack_require__(14924);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_instanceof.mjs\nvar _instanceof = __webpack_require__(82670);\n;// CONCATENATED MODULE: ./src/config/abi/IPancakeRouter02.json\nvar IPancakeRouter02_namespaceObject = JSON.parse('[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]');\n// EXTERNAL MODULE: ./packages/swap-sdk/src/index.ts + 32 modules\nvar src = __webpack_require__(54346);\n// EXTERNAL MODULE: ./src/config/constants/exchange.ts\nvar exchange = __webpack_require__(19838);\n// EXTERNAL MODULE: ./src/utils/index.ts\nvar utils = __webpack_require__(93293);\n// EXTERNAL MODULE: ./src/state/swap/actions.ts\nvar actions = __webpack_require__(70193);\n;// CONCATENATED MODULE: ./src/utils/exchange.ts\n\n\n\n\n\n\n\n// converts a basis points value to a sdk percent\nfunction basisPointsToPercent(num) {\n    return new src/* Percent */.gG(src/* JSBI.BigInt */.QA.BigInt(num), exchange/* BIPS_BASE */.PM);\n}\nfunction calculateSlippageAmount(value, slippage) {\n    if (slippage < 0 || slippage > 10000) {\n        throw Error(\"Unexpected slippage value: \".concat(slippage));\n    }\n    return [\n        src/* JSBI.divide */.QA.divide(src/* JSBI.multiply */.QA.multiply(value.raw, src/* JSBI.BigInt */.QA.BigInt(10000 - slippage)), exchange/* BIPS_BASE */.PM),\n        src/* JSBI.divide */.QA.divide(src/* JSBI.multiply */.QA.multiply(value.raw, src/* JSBI.BigInt */.QA.BigInt(10000 + slippage)), exchange/* BIPS_BASE */.PM), \n    ];\n}\n// account is optional\nfunction getRouterContract(chainId, library, account) {\n    return (0,utils/* getContract */.uN)(exchange/* ROUTER_ADDRESS */.bR[chainId], IPancakeRouter02_namespaceObject, (0,utils/* getProviderOrSigner */.TY)(library, account));\n}\n// computes price breakdown for the trade\nfunction computeTradePriceBreakdown(trade) {\n    // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n    // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n    var realizedLPFee = !trade ? undefined : exchange/* ONE_HUNDRED_PERCENT.subtract */.yC.subtract(trade.route.pairs.reduce(function(currentFee) {\n        return currentFee.multiply(exchange/* INPUT_FRACTION_AFTER_FEE */.Zw);\n    }, exchange/* ONE_HUNDRED_PERCENT */.yC));\n    // remove lp fees from price impact\n    var priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined;\n    // the x*y=k impact\n    var priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction ? new src/* Percent */.gG(priceImpactWithoutFeeFraction === null || priceImpactWithoutFeeFraction === void 0 ? void 0 : priceImpactWithoutFeeFraction.numerator, priceImpactWithoutFeeFraction === null || priceImpactWithoutFeeFraction === void 0 ? void 0 : priceImpactWithoutFeeFraction.denominator) : undefined;\n    // the amount of the input that accrues to LPs\n    var realizedLPFeeAmount = realizedLPFee && trade && ((0,_instanceof/* default */.Z)(trade.inputAmount, src/* TokenAmount */.dt) ? new src/* TokenAmount */.dt(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient) : src/* CurrencyAmount.ether */.ih.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient));\n    return {\n        priceImpactWithoutFee: priceImpactWithoutFeePercent,\n        realizedLPFee: realizedLPFeeAmount\n    };\n}\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nfunction computeSlippageAdjustedAmounts(trade, allowedSlippage) {\n    var pct = basisPointsToPercent(allowedSlippage);\n    var _obj;\n    return _obj = {}, (0,_define_property/* default */.Z)(_obj, actions/* Field.INPUT */.gN.INPUT, trade === null || trade === void 0 ? void 0 : trade.maximumAmountIn(pct)), (0,_define_property/* default */.Z)(_obj, actions/* Field.OUTPUT */.gN.OUTPUT, trade === null || trade === void 0 ? void 0 : trade.minimumAmountOut(pct)), _obj;\n}\nfunction warningSeverity(priceImpact) {\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(exchange/* BLOCKED_PRICE_IMPACT_NON_EXPERT */.lN))) return 4;\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(exchange/* ALLOWED_PRICE_IMPACT_HIGH */.Uf))) return 3;\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(exchange/* ALLOWED_PRICE_IMPACT_MEDIUM */.p9))) return 2;\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(exchange/* ALLOWED_PRICE_IMPACT_LOW */.Bz))) return 1;\n    return 0;\n}\nfunction formatExecutionPrice(trade, inverted) {\n    if (!trade) {\n        return \"\";\n    }\n    return inverted ? \"\".concat(trade.executionPrice.invert().toSignificant(6), \" \").concat(trade.inputAmount.currency.symbol, \" / \").concat(trade.outputAmount.currency.symbol) : \"\".concat(trade.executionPrice.toSignificant(6), \" \").concat(trade.outputAmount.currency.symbol, \" / \").concat(trade.inputAmount.currency.symbol);\n}\n\n\n/***/ }),\n\n/***/ 97938:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony import */ var _swc_helpers_src_instanceof_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82670);\n/* harmony import */ var _ethersproject_units__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(61744);\n/* harmony import */ var _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(54346);\n\n\n\n// try to parse a user entered amount for a given token\nvar tryParseAmount = function(value, currency) {\n    if (!value || !currency) {\n        return undefined;\n    }\n    try {\n        var typedValueParsed = (0,_ethersproject_units__WEBPACK_IMPORTED_MODULE_1__/* .parseUnits */ .vz)(value, currency.decimals).toString();\n        if (typedValueParsed !== \"0\") {\n            return (0,_swc_helpers_src_instanceof_mjs__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)(currency, _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .Token */ .WU) ? new _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .TokenAmount */ .dt(currency, _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.BigInt */ .QA.BigInt(typedValueParsed)) : _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .CurrencyAmount.ether */ .ih.ether(_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.BigInt */ .QA.BigInt(typedValueParsed));\n        }\n    } catch (error) {\n        // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n        console.debug('Failed to parse input amount: \"'.concat(value, '\"'), error);\n    }\n    // necessary for all paths to return a value\n    return undefined;\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (tryParseAmount);\n\n\n/***/ })\n\n}]);"],"names":["self","push","__unused_webpack_module","__webpack_exports__","__webpack_require__","d","ALLOWED_PRICE_IMPACT_LOW","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","CUSTOM_BASES","ONE_BIPS","BIPS_BASE","BETTER_TRADE_LESS_HOPS_THRESHOLD","BIG_INT_TEN","ALLOWED_PRICE_IMPACT_HIGH","MIN_BNB","DEFAULT_INPUT_CURRENCY","INPUT_FRACTION_AFTER_FEE","ROUTER_ADDRESS","ADDITIONAL_BASES","ZERO_PERCENT","DEFAULT_OUTPUT_CURRENCY","BIG_INT_ZERO","SUGGESTED_BASES","BASES_TO_CHECK_TRADES_AGAINST","BLOCKED_PRICE_IMPACT_NON_EXPERT","ALLOWED_PRICE_IMPACT_MEDIUM","GENERIC_GAS_LIMIT_ORDER_EXECUTION","GELATO_HANDLER","LIMIT_ORDERS_DOCS_URL","ONE_HUNDRED_PERCENT","_obj","_obj1","_obj2","_obj3","_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_2__","_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__","_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__","_tokens__WEBPACK_IMPORTED_MODULE_1__","Z","a_","MOVO","MOVO_TESTNET","xP","wbnb","cake","usdt","dI","busd","QA","BigInt","gG","exponentiate","BASE_FEE","subtract","O$","from","useIsTransactionUnsupported","useIsTransactionWarning","useTradeExactIn","useTradeExactOut","_sliced_to_array","_to_consumable_array","src","exchange","isTradeBetter","tradeA","tradeB","minimumDelta","arguments","length","fI","tradeType","KA","inputAmount","currency","outputAmount","equalTo","executionPrice","lessThan","raw","multiply","add","yC","flatMap","flatMap_default","n","react","useActiveWeb3React","hooks","usePairs","wrappedCurrency","Tokens","useAllCommonPairs","currencyA","currencyB","chainId","ref","pu","undefined","tokenA","tokenB","bases","useMemo","ref1","_chainId","ref2","ref3","common","lM","additionalA","ck","address","additionalB","concat","basePairs","base","map","otherBase","allPairCombinations","filter","tokens","Boolean","param","_param","t0","t1","tokenA_","tokenB_","customBases","IP","customBasesA","customBasesB","find","equals","allPairs","z$","Object","values","result","_G","EXISTS","reduce","memo","_address","curr","liquidityToken","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","RO","ho","bestTradeExactIn","maxHops","maxNumResults","bestTradeSoFar","i","currentTrade","Ru","currencyIn","currencyAmountOut","bestTradeExactOut","unsupportedTokens","l6","tokenIn","tokenOut","keys","includes","zd","calculateSlippageAmount","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","formatExecutionPrice","getRouterContract","warningSeverity","_define_property","_instanceof","IPancakeRouter02_namespaceObject","JSON","parse","utils","actions","value","slippage","Error","divide","PM","library","account","uN","bR","TY","trade","realizedLPFee","route","pairs","currentFee","Zw","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFeePercent","numerator","denominator","realizedLPFeeAmount","dt","token","quotient","ih","ether","priceImpactWithoutFee","allowedSlippage","num","pct","gN","INPUT","maximumAmountIn","OUTPUT","minimumAmountOut","lN","Uf","p9","Bz","inverted","invert","toSignificant","symbol","_swc_helpers_src_instanceof_mjs__WEBPACK_IMPORTED_MODULE_2__","_ethersproject_units__WEBPACK_IMPORTED_MODULE_1__","typedValueParsed","vz","decimals","toString","WU","error","console","debug"],"sourceRoot":""}