{"version":3,"file":"static/chunks/pages/add/[[...currency]]-ab5743bfeb454fb1.js","mappings":"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","sources":["webpack://_N_E/?b070","webpack://_N_E/./packages/uikit/src/components/Card/CardFooter.tsx","webpack://_N_E/./packages/uikit/src/components/Svg/Icons/ArrowDropDown.tsx","webpack://_N_E/./src/components/CurrencyInputPanel/ZapCheckbox.tsx","webpack://_N_E/./src/components/Layout/Flex.tsx","webpack://_N_E/./src/components/UnsupportedCurrencyFooter.tsx","webpack://_N_E/./src/hooks/useCurrentBlockTimestamp.ts","webpack://_N_E/./src/hooks/useTransactionDeadline.ts","webpack://_N_E/./src/state/mint/hooks.ts","webpack://_N_E/./src/views/AddLiquidity/PoolPriceBar.tsx","webpack://_N_E/./src/views/AddLiquidity/components/common.tsx","webpack://_N_E/./src/views/AddLiquidity/components/ConfirmAddLiquidityModal.tsx","webpack://_N_E/./src/views/AddLiquidity/components/ConfirmZapInModal.tsx","webpack://_N_E/./src/components/CurrencySelect/index.tsx","webpack://_N_E/./src/views/AddLiquidity/useCurrencySelectRoute.ts","webpack://_N_E/./src/views/AddLiquidity/ChoosePair.tsx","webpack://_N_E/./src/views/AddLiquidity/index.tsx","webpack://_N_E/./src/pages/add/[[...currency]].tsx","webpack://_N_E/./src/utils/calls/estimateGas.ts","webpack://_N_E/./src/utils/calls/farms.ts","webpack://_N_E/./src/utils/calls/pools.ts","webpack://_N_E/./src/utils/calls/index.ts","webpack://_N_E/./src/utils/getGasPrice.ts","webpack://_N_E/./src/utils/getLpSymbol.ts","webpack://_N_E/./src/utils/maxAmountSpend.ts","webpack://_N_E/./src/utils/transactionErrorToUserReadableMessage.ts","webpack://_N_E/./src/views/AddLiquidity/components/ZapErrorMessage.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/add/[[...currency]]\",\n      function () {\n        return require(\"private-next-pages/add/[[...currency]].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/add/[[...currency]]\"])\n      });\n    }\n  ","import _tagged_template_literal from \"@swc/helpers/src/_tagged_template_literal.mjs\";\nfunction _templateObject() {\n    var data = _tagged_template_literal([\n        \"\\n  border-top: 1px solid \",\n        \";\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nimport styled from \"styled-components\";\nimport { space } from \"styled-system\";\nvar CardFooter = styled.div.withConfig({\n    componentId: \"sc-11aac870-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.cardBorder;\n}, space);\nCardFooter.defaultProps = {\n    p: \"24px\"\n};\nexport default CardFooter;\n","import _object_spread from \"@swc/helpers/src/_object_spread.mjs\";\nimport _object_spread_props from \"@swc/helpers/src/_object_spread_props.mjs\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport Svg from \"../Svg\";\nvar Icon = function(props) {\n    return /*#__PURE__*/ _jsx(Svg, _object_spread_props(_object_spread({\n        viewBox: \"0 0 24 24\"\n    }, props), {\n        children: /*#__PURE__*/ _jsx(\"path\", {\n            d: \"M8.71005 11.71L11.3001 14.3C11.6901 14.69 12.3201 14.69 12.7101 14.3L15.3001 11.71C15.9301 11.08 15.4801 10 14.5901 10H9.41005C8.52005 10 8.08005 11.08 8.71005 11.71Z\"\n        })\n    }));\n};\nexport default Icon;\n","import { Checkbox } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst ZapCheckBoxWrapper = styled.label`\r\n  display: grid;\r\n  place-content: center;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  border-radius: 8px 0px 0px 0px;\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-right: none;\r\n  width: 40px;\r\n`\r\n\r\nexport const ZapCheckbox = (props) => {\r\n  return (\r\n    <ZapCheckBoxWrapper>\r\n      <Checkbox scale=\"sm\" {...props} />\r\n    </ZapCheckBoxWrapper>\r\n  )\r\n}\r\n","import { Flex, FlexProps } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport interface FlexGapProps extends FlexProps {\r\n  gap?: string\r\n  rowGap?: string\r\n  columnGap?: string\r\n}\r\n\r\nexport const FlexGap = styled(Flex)<FlexGapProps>`\r\n  gap: ${({ gap }) => gap};\r\n  row-gap: ${({ rowGap }) => rowGap};\r\n  column-gap: ${({ columnGap }) => columnGap};\r\n`\r\n\r\nexport default FlexLayout\r\n","import { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getMovoScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 430px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title={t('Unsupported Assets')} maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getMovoScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            {t(\n              'Some assets are not available through this interface because they may not work well with our smart contract or we are unable to allow trading for legal reasons.',\n            )}\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const { t } = useTranslation()\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        {t('Read more about unsupported assets')}\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\nimport { useMulticallContract } from './useContract'\r\n\r\n// gets the current timestamp from the blockchain\r\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\r\n  const multicall = useMulticallContract()\r\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppState } from '../state'\r\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\r\n\r\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\r\nexport default function useTransactionDeadline(): BigNumber | undefined {\r\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\r\n  const blockTimestamp = useCurrentBlockTimestamp()\r\n  return useMemo(() => {\r\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\r\n    return undefined\r\n  }, [blockTimestamp, ttl])\r\n}\r\n","import { formatUnits } from '@ethersproject/units'\r\nimport {\r\n  Currency,\r\n  CurrencyAmount,\r\n  ETHER,\r\n  JSBI,\r\n  Pair,\r\n  Percent,\r\n  Price,\r\n  Token,\r\n  TokenAmount,\r\n  Route,\r\n  MINIMUM_LIQUIDITY,\r\n} from '@pancakeswap/sdk'\r\nimport { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { PairState, usePair } from 'hooks/usePairs'\r\nimport useTotalSupply from 'hooks/useTotalSupply'\r\nimport { useGasPrice } from 'state/user/hooks'\r\nimport { computePriceImpact } from 'utils/prices'\r\nimport { warningSeverity } from 'utils/exchange'\r\nimport { BIG_INT_ZERO } from 'config/constants/exchange'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\r\nimport { useZapContract } from 'hooks/useContract'\r\nimport { useSWRContract } from 'hooks/useSWRContract'\r\nimport { FetchStatus } from 'config/constants/types'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport usePreviousValue from 'hooks/usePreviousValue'\r\nimport { useTradeExactIn } from 'hooks/Trades'\r\nimport tryParseAmount from 'utils/tryParseAmount'\r\nimport { AppState, useAppDispatch } from '../index'\r\nimport { useCurrencyBalances } from '../wallet/hooks'\r\nimport { Field, typeInput } from './actions'\r\n\r\nexport function useMintState(): AppState['mint'] {\r\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\r\n}\r\n\r\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\r\n  onFieldAInput: (typedValue: string) => void\r\n  onFieldBInput: (typedValue: string) => void\r\n} {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const onFieldAInput = useCallback(\r\n    (typedValue: string) => {\r\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\r\n    },\r\n    [dispatch, noLiquidity],\r\n  )\r\n  const onFieldBInput = useCallback(\r\n    (typedValue: string) => {\r\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\r\n    },\r\n    [dispatch, noLiquidity],\r\n  )\r\n\r\n  return {\r\n    onFieldAInput,\r\n    onFieldBInput,\r\n  }\r\n}\r\n\r\nexport function useDerivedMintInfo(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined,\r\n): {\r\n  dependentField: Field\r\n  currencies: { [field in Field]?: Currency }\r\n  pair?: Pair | null\r\n  pairState: PairState\r\n  currencyBalances: { [field in Field]?: CurrencyAmount }\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\r\n  price?: Price\r\n  noLiquidity?: boolean\r\n  liquidityMinted?: TokenAmount\r\n  poolTokenPercentage?: Percent\r\n  error?: string\r\n  addError?: string\r\n} {\r\n  const { account, chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n\r\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\r\n\r\n  // tokens\r\n  const currencies: { [field in Field]?: Currency } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: currencyA ?? undefined,\r\n      [Field.CURRENCY_B]: currencyB ?? undefined,\r\n    }),\r\n    [currencyA, currencyB],\r\n  )\r\n\r\n  // pair\r\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\r\n\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n\r\n  const noLiquidity: boolean =\r\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, BIG_INT_ZERO))\r\n\r\n  // balances\r\n  const balances = useCurrencyBalances(account ?? undefined, [\r\n    currencies[Field.CURRENCY_A],\r\n    currencies[Field.CURRENCY_B],\r\n  ])\r\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\r\n    [Field.CURRENCY_A]: balances[0],\r\n    [Field.CURRENCY_B]: balances[1],\r\n  }\r\n\r\n  // amounts\r\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\r\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\r\n    if (noLiquidity) {\r\n      if (otherTypedValue && currencies[dependentField]) {\r\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\r\n      }\r\n      return undefined\r\n    }\r\n    if (independentAmount) {\r\n      // we wrap the currencies just to get the price in terms of the other token\r\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\r\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\r\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\r\n        const dependentTokenAmount =\r\n          dependentField === Field.CURRENCY_B\r\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\r\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\r\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\r\n      }\r\n      return undefined\r\n    }\r\n    return undefined\r\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\r\n\r\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\r\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\r\n    }),\r\n    [dependentAmount, independentAmount, independentField],\r\n  )\r\n\r\n  const price = useMemo(() => {\r\n    if (noLiquidity) {\r\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n      if (currencyAAmount && currencyBAmount) {\r\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\r\n      }\r\n      return undefined\r\n    }\r\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\r\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\r\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\r\n\r\n  // liquidity minted\r\n  const liquidityMinted = useMemo(() => {\r\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n    const [tokenAmountA, tokenAmountB] = [\r\n      wrappedCurrencyAmount(currencyAAmount, chainId),\r\n      wrappedCurrencyAmount(currencyBAmount, chainId),\r\n    ]\r\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\r\n      try {\r\n        return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\r\n      } catch (error) {\r\n        console.error(error)\r\n        return undefined\r\n      }\r\n    }\r\n    return undefined\r\n  }, [parsedAmounts, chainId, pair, totalSupply])\r\n\r\n  const poolTokenPercentage = useMemo(() => {\r\n    if (liquidityMinted && totalSupply) {\r\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\r\n    }\r\n    return undefined\r\n  }, [liquidityMinted, totalSupply])\r\n\r\n  let error: string | undefined\r\n  let addError: string | undefined\r\n  if (!account) {\r\n    error = t('Connect Wallet')\r\n  }\r\n\r\n  if (pairState === PairState.INVALID) {\r\n    error = error ?? t('Choose a valid pair')\r\n  }\r\n\r\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n\r\n  if (\r\n    currencyAAmount &&\r\n    currencyBAmount &&\r\n    currencyBalances?.[Field.CURRENCY_A]?.equalTo(0) &&\r\n    currencyBalances?.[Field.CURRENCY_B]?.equalTo(0)\r\n  ) {\r\n    error = error ?? t('No token balance')\r\n  }\r\n\r\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\r\n    addError = t('Enter an amount')\r\n  }\r\n\r\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\r\n    addError = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_A]?.symbol })\r\n  }\r\n\r\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\r\n    addError = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_B]?.symbol })\r\n  }\r\n\r\n  return {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n    addError,\r\n  }\r\n}\r\n\r\nconst MAX_ZAP_REVERSE_RATIO = JSBI.BigInt(50)\r\n\r\nconst getMaxZapSwapAmount = (pair: Pair, tokenZap: Token) =>\r\n  pair && tokenZap && pair.involvesToken(tokenZap) && JSBI.divide(pair.reserveOf(tokenZap).raw, MAX_ZAP_REVERSE_RATIO)\r\n\r\n// simplify version to guess the zap in amount by swapInAmount from max zap reserves ratio 50\r\nfunction guessMaxZappableAmount(pair: Pair, token0AmountIn: TokenAmount, token1AmountIn?: TokenAmount) {\r\n  if (!token1AmountIn) {\r\n    if (token0AmountIn) {\r\n      const maxSwapAmount = getMaxZapSwapAmount(pair, token0AmountIn.token)\r\n      return maxSwapAmount && JSBI.multiply(maxSwapAmount, JSBI.BigInt(2))\r\n    }\r\n    return undefined\r\n  }\r\n  if (token0AmountIn && token1AmountIn) {\r\n    const maxSwapAmount = getMaxZapSwapAmount(pair, token0AmountIn.token)\r\n\r\n    if (!maxSwapAmount) {\r\n      return undefined\r\n    }\r\n\r\n    const [_, newPair] = pair.getInputAmount(new TokenAmount(token0AmountIn.token, maxSwapAmount))\r\n\r\n    return JSBI.add(\r\n      maxSwapAmount,\r\n      JSBI.divide(\r\n        JSBI.multiply(token1AmountIn.raw, newPair.reserveOf(token0AmountIn.token).raw),\r\n        newPair.reserveOf(token1AmountIn.token).raw,\r\n      ),\r\n    )\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\n// compare the gas is larger than swap in amount\r\nfunction useZapInGasOverhead(inputAmount: CurrencyAmount | undefined) {\r\n  const gasPrice = useGasPrice()\r\n  const requiredGas = formatUnits(gasPrice ? BigNumber.from(gasPrice).mul('500000') : '0')\r\n  const requiredGasAsCurrencyAmount = inputAmount ? tryParseAmount(requiredGas, ETHER) : undefined\r\n  const inputIsBNB = inputAmount?.currency.symbol === 'MOVO'\r\n\r\n  const gasCostInInputTokens = useTradeExactIn(requiredGasAsCurrencyAmount, inputIsBNB ? null : inputAmount?.currency)\r\n\r\n  return gasCostInInputTokens?.outputAmount?.greaterThan(inputAmount?.raw) ?? false\r\n}\r\n\r\nexport function useZapIn({\r\n  canZap,\r\n  currencyA,\r\n  currencyB,\r\n  pair,\r\n  currencyBalances,\r\n  zapTokenCheckedA,\r\n  zapTokenCheckedB,\r\n  maxAmounts,\r\n}: {\r\n  canZap?: boolean\r\n  currencyA?: Currency\r\n  currencyB?: Currency\r\n  pair: Pair\r\n  currencyBalances: { [field in Field]?: CurrencyAmount }\r\n  zapTokenCheckedA?: boolean\r\n  zapTokenCheckedB?: boolean\r\n  maxAmounts?: { [field in Field]?: TokenAmount }\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n  const [inputBlurOnce, setInputBlurOnce] = useState(false)\r\n  const previousBlur = usePreviousValue(inputBlurOnce)\r\n  const [triedAutoReduce, setTriedAutoReduce] = useState(false)\r\n  const { independentField, typedValue } = useMintState()\r\n\r\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\r\n\r\n  const currencies: { [field in Field]?: Currency } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: currencyA ?? undefined,\r\n      [Field.CURRENCY_B]: currencyB ?? undefined,\r\n    }),\r\n    [currencyA, currencyB],\r\n  )\r\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\r\n\r\n  const _dependentAmount = useMemo(() => {\r\n    if (!canZap) {\r\n      return undefined\r\n    }\r\n    if (independentAmount) {\r\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\r\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\r\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\r\n        const dependentTokenAmount =\r\n          dependentField === Field.CURRENCY_B\r\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\r\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\r\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\r\n      }\r\n      return undefined\r\n    }\r\n    return undefined\r\n  }, [canZap, chainId, currencyA, currencyB, dependentField, independentAmount, pair])\r\n\r\n  const isDependentAmountGreaterThanMaxAmount =\r\n    maxAmounts[dependentField] && _dependentAmount && _dependentAmount?.greaterThan(maxAmounts[dependentField])\r\n\r\n  // amounts\r\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\r\n    return isDependentAmountGreaterThanMaxAmount ? maxAmounts[dependentField] : _dependentAmount\r\n  }, [isDependentAmountGreaterThanMaxAmount, maxAmounts, dependentField, _dependentAmount])\r\n\r\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: !zapTokenCheckedA\r\n        ? undefined\r\n        : independentField === Field.CURRENCY_A\r\n        ? independentAmount\r\n        : dependentAmount,\r\n      [Field.CURRENCY_B]: !zapTokenCheckedB\r\n        ? undefined\r\n        : independentField === Field.CURRENCY_A\r\n        ? dependentAmount\r\n        : independentAmount,\r\n    }),\r\n    [dependentAmount, independentAmount, independentField, zapTokenCheckedA, zapTokenCheckedB],\r\n  )\r\n\r\n  const wrappedParsedAmounts: { [field in Field]: TokenAmount | undefined } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: wrappedCurrencyAmount(parsedAmounts[Field.CURRENCY_A], chainId),\r\n      [Field.CURRENCY_B]: wrappedCurrencyAmount(parsedAmounts[Field.CURRENCY_B], chainId),\r\n    }),\r\n    [chainId, parsedAmounts],\r\n  )\r\n\r\n  const zapContract = useZapContract()\r\n\r\n  const rebalancing =\r\n    !!zapTokenCheckedA && !!zapTokenCheckedB && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\r\n\r\n  const singleTokenToZapField =\r\n    !rebalancing && zapTokenCheckedB && !!parsedAmounts[Field.CURRENCY_B] ? Field.CURRENCY_B : Field.CURRENCY_A\r\n\r\n  const singleTokenToZapAmount = useMemo(\r\n    () => wrappedParsedAmounts[singleTokenToZapField],\r\n    [singleTokenToZapField, wrappedParsedAmounts],\r\n  )\r\n\r\n  const noNeedZap = useMemo(() => {\r\n    if (!rebalancing) {\r\n      return false\r\n    }\r\n    if (!wrappedParsedAmounts[independentField] || !wrappedParsedAmounts[dependentField]) {\r\n      return undefined\r\n    }\r\n\r\n    if (!isDependentAmountGreaterThanMaxAmount) {\r\n      return true\r\n    }\r\n\r\n    const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n\r\n    if (tokenA && tokenB && wrappedParsedAmounts[independentField] && pair) {\r\n      return wrappedParsedAmounts[dependentField].equalTo(\r\n        dependentField === Field.CURRENCY_B\r\n          ? pair.priceOf(tokenA).quote(wrappedParsedAmounts[independentField])\r\n          : pair.priceOf(tokenB).quote(wrappedParsedAmounts[independentField]),\r\n      )\r\n    }\r\n    return undefined\r\n  }, [\r\n    chainId,\r\n    currencyA,\r\n    currencyB,\r\n    dependentField,\r\n    independentField,\r\n    isDependentAmountGreaterThanMaxAmount,\r\n    pair,\r\n    rebalancing,\r\n    wrappedParsedAmounts,\r\n  ])\r\n\r\n  const singleZapEstimate = useSWRContract(\r\n    canZap &&\r\n      !noNeedZap &&\r\n      zapContract &&\r\n      singleTokenToZapAmount &&\r\n      singleTokenToZapAmount?.token &&\r\n      pair &&\r\n      !rebalancing && {\r\n        contract: zapContract,\r\n        methodName: 'estimateZapInSwap',\r\n        params: [\r\n          singleTokenToZapAmount.token.address,\r\n          singleTokenToZapAmount.raw.toString(),\r\n          pair.liquidityToken.address,\r\n        ],\r\n      },\r\n    {\r\n      onError(err) {\r\n        console.error(err)\r\n      },\r\n    },\r\n  )\r\n\r\n  const rebalancingZapEstimate = useSWRContract(\r\n    canZap &&\r\n      zapContract &&\r\n      !noNeedZap &&\r\n      wrappedParsedAmounts &&\r\n      wrappedParsedAmounts[Field.CURRENCY_A] &&\r\n      wrappedParsedAmounts[Field.CURRENCY_B] &&\r\n      pair &&\r\n      rebalancing && {\r\n        contract: zapContract,\r\n        methodName: 'estimateZapInRebalancingSwap',\r\n        params: [\r\n          wrappedParsedAmounts[Field.CURRENCY_A].token.address,\r\n          wrappedParsedAmounts[Field.CURRENCY_B].token.address,\r\n          wrappedParsedAmounts[Field.CURRENCY_A].raw.toString(),\r\n          wrappedParsedAmounts[Field.CURRENCY_B]?.raw?.toString(),\r\n          pair.liquidityToken.address,\r\n        ],\r\n      },\r\n    {\r\n      onError(err) {\r\n        console.error(err)\r\n      },\r\n    },\r\n  )\r\n\r\n  const zapInEstimated = useMemo(\r\n    () =>\r\n      (rebalancingZapEstimate?.data || singleZapEstimate?.data) && {\r\n        swapAmountIn: rebalancing ? rebalancingZapEstimate.data?.swapAmountIn : singleZapEstimate.data?.swapAmountIn,\r\n        swapAmountOut: rebalancing ? rebalancingZapEstimate.data?.swapAmountOut : singleZapEstimate.data?.swapAmountOut,\r\n        isToken0Sold: rebalancing\r\n          ? rebalancingZapEstimate.data?.sellToken0\r\n          : singleZapEstimate.data?.swapTokenOut === singleTokenToZapAmount?.token.address,\r\n      },\r\n    [rebalancing, rebalancingZapEstimate.data, singleZapEstimate.data, singleTokenToZapAmount?.token.address],\r\n  )\r\n\r\n  const rebalancingSellToken0 = useMemo(() => {\r\n    if (rebalancingZapEstimate.data) {\r\n      return rebalancingZapEstimate.data.sellToken0\r\n    }\r\n    if (!pair || !wrappedParsedAmounts[Field.CURRENCY_A] || !wrappedParsedAmounts[Field.CURRENCY_B]) {\r\n      return undefined\r\n    }\r\n    const token0toZap = pair.token0.equals(wrappedParsedAmounts[Field.CURRENCY_A].token)\r\n    if (token0toZap) {\r\n      return JSBI.greaterThan(\r\n        JSBI.multiply(wrappedParsedAmounts[Field.CURRENCY_A].raw, pair.reserve1.raw),\r\n        JSBI.multiply(wrappedParsedAmounts[Field.CURRENCY_B].raw, pair.reserve0.raw),\r\n      )\r\n    }\r\n    return JSBI.greaterThan(\r\n      JSBI.multiply(wrappedParsedAmounts[Field.CURRENCY_B].raw, pair.reserve0.raw),\r\n      JSBI.multiply(wrappedParsedAmounts[Field.CURRENCY_A].raw, pair.reserve1.raw),\r\n    )\r\n  }, [pair, rebalancingZapEstimate.data, wrappedParsedAmounts])\r\n\r\n  const swapTokenField = !rebalancing\r\n    ? singleTokenToZapField\r\n    : rebalancingSellToken0\r\n    ? Field.CURRENCY_A\r\n    : Field.CURRENCY_B\r\n  const swapOutTokenField = swapTokenField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\r\n\r\n  const swapTokens: { [field in Field]?: Token } = useMemo(\r\n    () => ({\r\n      [swapTokenField]: wrappedCurrency(currencies[swapTokenField], chainId),\r\n      [swapOutTokenField]: wrappedCurrency(currencies[swapOutTokenField], chainId),\r\n    }),\r\n    [chainId, currencies, swapOutTokenField, swapTokenField],\r\n  )\r\n\r\n  const zapInEstimatedError = useMemo(\r\n    () => (rebalancing ? rebalancingZapEstimate.error : singleZapEstimate.error),\r\n    [rebalancing, rebalancingZapEstimate.error, singleZapEstimate.error],\r\n  )\r\n\r\n  const zapInEstimatedStatus = useMemo(\r\n    () => (rebalancing ? rebalancingZapEstimate.status : singleZapEstimate.status),\r\n    [rebalancing, rebalancingZapEstimate.status, singleZapEstimate.status],\r\n  )\r\n\r\n  const priceImpact = useMemo(() => {\r\n    if (!zapInEstimated) {\r\n      return undefined\r\n    }\r\n    const tokenAmountIn = new TokenAmount(swapTokens[swapTokenField], zapInEstimated.swapAmountIn.toString())\r\n    const tokenAmountOut = new TokenAmount(swapTokens[swapOutTokenField], zapInEstimated.swapAmountOut.toString())\r\n    const midPrice = Price.fromRoute(new Route([pair], currencies[swapTokenField]))\r\n    return computePriceImpact(midPrice, tokenAmountIn, tokenAmountOut)\r\n  }, [currencies, pair, swapOutTokenField, swapTokenField, swapTokens, zapInEstimated])\r\n\r\n  const overLimitZapRatio = useMemo(() => {\r\n    if (!zapInEstimated) {\r\n      return false\r\n    }\r\n\r\n    return JSBI.lessThan(\r\n      JSBI.divide(pair.reserveOf(swapTokens[swapTokenField]).raw, JSBI.BigInt(zapInEstimated.swapAmountIn.toString())),\r\n      MAX_ZAP_REVERSE_RATIO,\r\n    )\r\n  }, [pair, swapTokens, zapInEstimated, swapTokenField])\r\n\r\n  const priceSeverity = overLimitZapRatio || zapInEstimatedError ? 4 : priceImpact ? warningSeverity(priceImpact) : 0\r\n\r\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(false)\r\n\r\n  const maxZappableAmount = useMemo(\r\n    () =>\r\n      guessMaxZappableAmount(\r\n        pair,\r\n        wrappedParsedAmounts[swapTokenField],\r\n        rebalancing ? wrappedParsedAmounts[swapOutTokenField] : undefined,\r\n      ),\r\n    [pair, wrappedParsedAmounts, swapTokenField, rebalancing, swapOutTokenField],\r\n  )\r\n\r\n  const convertToMaxZappable = useCallback(() => {\r\n    if (maxZappableAmount) {\r\n      if (maxAmounts[swapTokenField]) {\r\n        const formatInput = formatUnits(\r\n          JSBI.greaterThan(maxAmounts[swapTokenField].raw, maxZappableAmount)\r\n            ? maxZappableAmount.toString()\r\n            : maxAmounts[swapTokenField].raw.toString(),\r\n          maxAmounts[swapTokenField]?.currency.decimals,\r\n        )\r\n\r\n        if (swapTokenField === Field.CURRENCY_A) {\r\n          onFieldAInput(formatInput)\r\n        } else {\r\n          onFieldBInput(formatInput)\r\n        }\r\n      }\r\n    }\r\n  }, [maxAmounts, maxZappableAmount, onFieldAInput, onFieldBInput, swapTokenField])\r\n\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n\r\n  // liquidity minted\r\n  const liquidityMinted = useMemo(() => {\r\n    if (\r\n      !pair ||\r\n      !swapTokens[swapTokenField] ||\r\n      !swapTokens[swapOutTokenField] ||\r\n      !zapInEstimated?.swapAmountIn ||\r\n      !zapInEstimated?.swapAmountOut ||\r\n      !wrappedParsedAmounts[swapTokenField]\r\n    ) {\r\n      return undefined\r\n    }\r\n\r\n    if (pair && totalSupply) {\r\n      try {\r\n        // calc the tokenA amount after swap\r\n        const zappedTokenAmountA = wrappedParsedAmounts[swapTokenField].greaterThan(\r\n          zapInEstimated.swapAmountIn.toString(),\r\n        )\r\n          ? wrappedParsedAmounts[swapTokenField].subtract(\r\n              new TokenAmount(swapTokens[swapTokenField], zapInEstimated.swapAmountIn.toString()),\r\n            )\r\n          : wrappedParsedAmounts[swapTokenField]\r\n\r\n        let zappedTokenAmountB = new TokenAmount(swapTokens[swapOutTokenField], zapInEstimated.swapAmountOut.toString())\r\n\r\n        if (wrappedParsedAmounts[swapOutTokenField]) {\r\n          zappedTokenAmountB = zappedTokenAmountB.add(wrappedParsedAmounts[swapOutTokenField])\r\n        }\r\n        const lpMinted = pair.getLiquidityMinted(totalSupply, zappedTokenAmountA, zappedTokenAmountB)\r\n        return lpMinted\r\n      } catch (error) {\r\n        console.error(error)\r\n        return undefined\r\n      }\r\n    }\r\n    return undefined\r\n  }, [\r\n    pair,\r\n    swapTokens,\r\n    swapTokenField,\r\n    swapOutTokenField,\r\n    zapInEstimated?.swapAmountIn,\r\n    zapInEstimated?.swapAmountOut,\r\n    wrappedParsedAmounts,\r\n    totalSupply,\r\n  ])\r\n\r\n  const swapTokenAmountTooLow = useMemo(\r\n    () =>\r\n      wrappedParsedAmounts[swapTokenField] &&\r\n      JSBI.lessThan(wrappedParsedAmounts[swapTokenField].raw, MINIMUM_LIQUIDITY),\r\n    [swapTokenField, wrappedParsedAmounts],\r\n  )\r\n  const swapOutAmountTooLow = useMemo(\r\n    () =>\r\n      wrappedParsedAmounts[swapOutTokenField] &&\r\n      JSBI.lessThan(wrappedParsedAmounts[swapOutTokenField].raw, MINIMUM_LIQUIDITY),\r\n    [swapOutTokenField, wrappedParsedAmounts],\r\n  )\r\n\r\n  const poolTokenPercentage = useMemo(() => {\r\n    if (liquidityMinted && totalSupply) {\r\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\r\n    }\r\n    return undefined\r\n  }, [liquidityMinted, totalSupply])\r\n\r\n  const gasOverhead = useZapInGasOverhead(\r\n    useMemo(\r\n      () =>\r\n        zapInEstimated ? new TokenAmount(swapTokens[swapTokenField], zapInEstimated.swapAmountIn.toString()) : null,\r\n      [swapTokenField, swapTokens, zapInEstimated],\r\n    ),\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !triedAutoReduce &&\r\n      parsedAmounts[swapTokenField] &&\r\n      maxZappableAmount &&\r\n      !previousBlur &&\r\n      inputBlurOnce &&\r\n      !rebalancing\r\n    ) {\r\n      if (JSBI.greaterThan(parsedAmounts[swapTokenField].raw, maxZappableAmount)) {\r\n        convertToMaxZappable()\r\n        setTriedAutoReduce(true)\r\n      }\r\n    }\r\n  }, [\r\n    convertToMaxZappable,\r\n    inputBlurOnce,\r\n    maxZappableAmount,\r\n    parsedAmounts,\r\n    previousBlur,\r\n    rebalancing,\r\n    singleTokenToZapAmount,\r\n    swapTokenField,\r\n    triedAutoReduce,\r\n  ])\r\n\r\n  const onInputBlurOnce = useCallback(() => {\r\n    setInputBlurOnce(true)\r\n  }, [])\r\n\r\n  let error: string | undefined\r\n\r\n  if (zapInEstimatedError) {\r\n    error = t('Cannot estimate zap amount')\r\n  }\r\n\r\n  if (swapTokenAmountTooLow || (rebalancing && swapOutAmountTooLow)) {\r\n    error = t('Zap in amount too low')\r\n  }\r\n\r\n  if (\r\n    wrappedParsedAmounts[swapTokenField] &&\r\n    currencyBalances[swapTokenField]?.lessThan(wrappedParsedAmounts[swapTokenField])\r\n  ) {\r\n    error = t('Insufficient %token% balance', {\r\n      token: wrappedParsedAmounts[swapTokenField]?.token.symbol ?? '',\r\n    })\r\n  }\r\n\r\n  if (\r\n    wrappedParsedAmounts[swapOutTokenField] &&\r\n    rebalancing &&\r\n    currencyBalances[swapOutTokenField]?.lessThan(wrappedParsedAmounts[swapOutTokenField])\r\n  ) {\r\n    error = t('Insufficient %token% balance', { token: wrappedParsedAmounts[swapOutTokenField]?.token.symbol ?? '' })\r\n  }\r\n\r\n  return {\r\n    zapInEstimating: zapInEstimatedStatus !== FetchStatus.Fetched,\r\n    zapInEstimatedError,\r\n    zapInEstimated,\r\n    error,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    parsedAmounts,\r\n    swapTokenField,\r\n    swapOutTokenField,\r\n    priceSeverity,\r\n    convertToMaxZappable,\r\n    rebalancing,\r\n    noNeedZap,\r\n    gasOverhead,\r\n    isDependentAmountGreaterThanMaxAmount,\r\n    onInputBlurOnce,\r\n  }\r\n}\r\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { ONE_BIPS } from 'config/constants/exchange'\r\nimport { AutoColumn } from '../../components/Layout/Column'\r\nimport { AutoRow } from '../../components/Layout/Row'\r\nimport { Field } from '../../state/mint/actions'\r\n\r\nfunction PoolPriceBar({\r\n  currencies,\r\n  noLiquidity,\r\n  poolTokenPercentage,\r\n  price,\r\n}: {\r\n  currencies: { [field in Field]?: Currency }\r\n  noLiquidity?: boolean\r\n  poolTokenPercentage?: Percent\r\n  price?: Price\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow justify=\"space-around\" gap=\"4px\">\r\n        <AutoColumn justify=\"center\">\r\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('%assetA% per %assetB%', {\r\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n            })}\r\n          </Text>\r\n        </AutoColumn>\r\n        <AutoColumn justify=\"center\">\r\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('%assetA% per %assetB%', {\r\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n            })}\r\n          </Text>\r\n        </AutoColumn>\r\n        <AutoColumn justify=\"center\">\r\n          <Text>\r\n            {noLiquidity && price\r\n              ? '100'\r\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\r\n            %\r\n          </Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('Share of Pool')}\r\n          </Text>\r\n        </AutoColumn>\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default PoolPriceBar\r\n","import React from 'react'\r\nimport { Currency, Fraction, Percent, TokenAmount } from '@pancakeswap/sdk'\r\nimport { Text, useTooltip, TooltipText, Box, Flex, Svg, SvgProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { AutoRow, RowBetween } from 'components/Layout/Row'\r\nimport { Field } from 'state/burn/actions'\r\nimport { DoubleCurrencyLogo, CurrencyLogo } from 'components/Logo'\r\nimport { GreyCard } from 'components/Card'\r\nimport { getLPSymbol } from 'utils/getLpSymbol'\r\n\r\nconst Dot = styled(Box)<{ scale?: 'sm' | 'md' }>`\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 50%;\r\n`\r\n\r\nconst CircleSvg = ({ percent = 1, ...props }: SvgProps & { percent?: number }) => (\r\n  <Svg width=\"60px\" height=\"60px\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\r\n    <g filter=\"url(#filter0_i_1147_113741)\">\r\n      <circle r=\"10\" cx=\"10\" cy=\"10\" fill=\"#7645D9\" />\r\n      <circle\r\n        r=\"5\"\r\n        cx=\"10\"\r\n        cy=\"10\"\r\n        fill=\"transparent\"\r\n        stroke=\"#1FC7D4\"\r\n        strokeWidth=\"10\"\r\n        strokeDasharray={`calc(${percent * 100}px * 31.4 / 100) 31.4`}\r\n        transform=\"rotate(-90) translate(-20)\"\r\n      />\r\n    </g>\r\n    <defs>\r\n      <filter\r\n        id=\"filter0_i_1147_113741\"\r\n        x={0}\r\n        y={0}\r\n        width={60}\r\n        height={60}\r\n        filterUnits=\"userSpaceOnUse\"\r\n        colorInterpolationFilters=\"sRGB\"\r\n      >\r\n        <feFlood floodOpacity={0} result=\"BackgroundImageFix\" />\r\n        <feBlend in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n        <feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" />\r\n        <feOffset dy={-2} />\r\n        <feComposite in2=\"hardAlpha\" operator=\"arithmetic\" k2={-1} k3={1} />\r\n        <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0\" />\r\n        <feBlend in2=\"shape\" result=\"effect1_innerShadow_1147_113741\" />\r\n      </filter>\r\n    </defs>\r\n  </Svg>\r\n)\r\n\r\nconst Subtitle: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  return (\r\n    <Text fontSize=\"12px\" textTransform=\"uppercase\" bold color=\"secondary\">\r\n      {children}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport const PairDistribution = ({\r\n  title,\r\n  percent,\r\n  currencyA,\r\n  currencyB,\r\n  currencyAValue,\r\n  currencyBValue,\r\n  tooltipTargetRef,\r\n}: {\r\n  title: React.ReactNode\r\n  percent?: number\r\n  currencyA?: Currency\r\n  currencyB?: Currency\r\n  currencyAValue?: string\r\n  currencyBValue?: string\r\n  tooltipTargetRef?: any\r\n}) => {\r\n  return (\r\n    <AutoColumn gap=\"8px\">\r\n      <Subtitle>{title}</Subtitle>\r\n      <Flex>\r\n        {typeof percent !== 'undefined' && (\r\n          <div ref={tooltipTargetRef}>\r\n            <CircleSvg percent={percent} mr=\"34px\" />\r\n          </div>\r\n        )}\r\n        <AutoColumn style={{ width: '100%' }}>\r\n          {currencyA && (\r\n            <RowBetween>\r\n              <AutoRow gap=\"4px\">\r\n                <Dot bg=\"primary\" />\r\n                <CurrencyLogo currency={currencyA} />\r\n                <Text>{currencyA?.symbol}</Text>\r\n              </AutoRow>\r\n              <Text>{currencyAValue}</Text>\r\n            </RowBetween>\r\n          )}\r\n\r\n          {currencyB && (\r\n            <RowBetween>\r\n              <AutoRow gap=\"4px\">\r\n                <Dot bg=\"secondary\" />\r\n                <CurrencyLogo currency={currencyB} />\r\n                <Text>{currencyB?.symbol}</Text>\r\n              </AutoRow>\r\n              <Text>{currencyBValue}</Text>\r\n            </RowBetween>\r\n          )}\r\n        </AutoColumn>\r\n      </Flex>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\ninterface AddLiquidityModalHeaderProps {\r\n  currencies: { [field in Field]?: Currency }\r\n  poolTokenPercentage?: Percent\r\n  liquidityMinted: TokenAmount\r\n  price: Fraction\r\n  allowedSlippage: number\r\n  children: React.ReactNode\r\n  noLiquidity?: boolean\r\n}\r\n\r\nexport const AddLiquidityModalHeader = ({\r\n  currencies,\r\n  poolTokenPercentage,\r\n  liquidityMinted,\r\n  price,\r\n  allowedSlippage,\r\n  noLiquidity,\r\n  children,\r\n}: AddLiquidityModalHeaderProps) => {\r\n  const { t } = useTranslation()\r\n  const { tooltip, tooltipVisible, targetRef } = useTooltip(\r\n    t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\r\n      slippage: allowedSlippage / 100,\r\n    }),\r\n    { placement: 'auto' },\r\n  )\r\n\r\n  return (\r\n    <AutoColumn gap=\"24px\">\r\n      <AutoColumn gap=\"8px\">\r\n        <Subtitle>{t('You will receive')}</Subtitle>\r\n        <GreyCard>\r\n          <RowBetween>\r\n            <AutoRow gap=\"4px\">\r\n              <DoubleCurrencyLogo\r\n                currency0={currencies[Field.CURRENCY_A]}\r\n                currency1={currencies[Field.CURRENCY_B]}\r\n                size={24}\r\n              />\r\n              <Text color=\"textSubtle\">\r\n                {currencies[Field.CURRENCY_A]?.symbol &&\r\n                  currencies[Field.CURRENCY_B]?.symbol &&\r\n                  getLPSymbol(currencies[Field.CURRENCY_A]?.symbol, currencies[Field.CURRENCY_B]?.symbol)}\r\n              </Text>\r\n            </AutoRow>\r\n            <Text ml=\"8px\">{liquidityMinted?.toSignificant(6)}</Text>\r\n          </RowBetween>\r\n        </GreyCard>\r\n      </AutoColumn>\r\n      <RowBetween>\r\n        <Subtitle>{t('Your pool share')}</Subtitle>\r\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\r\n      </RowBetween>\r\n      <AutoColumn gap=\"8px\">{children}</AutoColumn>\r\n      <AutoColumn>\r\n        <RowBetween>\r\n          <Subtitle>{t('Rates')}</Subtitle>\r\n          <Text>\r\n            {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\r\n              currencies[Field.CURRENCY_B]?.symbol\r\n            }`}\r\n          </Text>\r\n        </RowBetween>\r\n        <RowBetween style={{ justifyContent: 'flex-end' }}>\r\n          <Text>\r\n            {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\r\n              currencies[Field.CURRENCY_A]?.symbol\r\n            }`}\r\n          </Text>\r\n        </RowBetween>\r\n      </AutoColumn>\r\n      {!noLiquidity && (\r\n        <RowBetween>\r\n          <Subtitle>{t('Slippage Tolerance')}</Subtitle>\r\n          <TooltipText ref={targetRef}>{allowedSlippage / 100}%</TooltipText>\r\n          {tooltipVisible && tooltip}\r\n        </RowBetween>\r\n      )}\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { Currency, CurrencyAmount, Fraction, Percent, Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { InjectedModalProps, Button } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport TransactionConfirmationModal, {\r\n  ConfirmationModalContent,\r\n  TransactionErrorContent,\r\n} from 'components/TransactionConfirmationModal'\r\nimport { Field } from 'state/burn/actions'\r\nimport { AddLiquidityModalHeader, PairDistribution } from './common'\r\n\r\ninterface ConfirmAddLiquidityModalProps {\r\n  title: string\r\n  customOnDismiss: () => void\r\n  attemptingTxn: boolean\r\n  hash: string\r\n  pendingText: string\r\n  currencies: { [field in Field]?: Currency }\r\n  noLiquidity: boolean\r\n  allowedSlippage: number\r\n  liquidityErrorMessage: string\r\n  price: Fraction\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\r\n  onAdd: () => void\r\n  poolTokenPercentage: Percent\r\n  liquidityMinted: TokenAmount\r\n  currencyToAdd: Token\r\n}\r\n\r\nconst ConfirmAddLiquidityModal: React.FC<InjectedModalProps & ConfirmAddLiquidityModalProps> = ({\r\n  title,\r\n  onDismiss,\r\n  customOnDismiss,\r\n  attemptingTxn,\r\n  hash,\r\n  pendingText,\r\n  price,\r\n  currencies,\r\n  noLiquidity,\r\n  allowedSlippage,\r\n  parsedAmounts,\r\n  liquidityErrorMessage,\r\n  onAdd,\r\n  poolTokenPercentage,\r\n  liquidityMinted,\r\n  currencyToAdd,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  const modalHeader = useCallback(() => {\r\n    return (\r\n      <AddLiquidityModalHeader\r\n        allowedSlippage={allowedSlippage}\r\n        currencies={currencies}\r\n        liquidityMinted={liquidityMinted}\r\n        poolTokenPercentage={poolTokenPercentage}\r\n        price={price}\r\n        noLiquidity={noLiquidity}\r\n      >\r\n        <PairDistribution\r\n          title={t('Input')}\r\n          percent={0.5}\r\n          currencyA={currencies[Field.CURRENCY_A]}\r\n          currencyAValue={parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}\r\n          currencyB={currencies[Field.CURRENCY_B]}\r\n          currencyBValue={parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}\r\n        />\r\n      </AddLiquidityModalHeader>\r\n    )\r\n  }, [allowedSlippage, currencies, liquidityMinted, noLiquidity, parsedAmounts, poolTokenPercentage, price, t])\r\n\r\n  const modalBottom = useCallback(() => {\r\n    return (\r\n      <Button width=\"100%\" onClick={onAdd} mt=\"20px\">\r\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\r\n      </Button>\r\n    )\r\n  }, [noLiquidity, onAdd, t])\r\n\r\n  const confirmationContent = useCallback(\r\n    () =>\r\n      liquidityErrorMessage ? (\r\n        <TransactionErrorContent onDismiss={onDismiss} message={liquidityErrorMessage} />\r\n      ) : (\r\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\r\n      ),\r\n    [onDismiss, modalBottom, modalHeader, liquidityErrorMessage],\r\n  )\r\n\r\n  return (\r\n    <TransactionConfirmationModal\r\n      minWidth={['100%', , '420px']}\r\n      title={title}\r\n      onDismiss={onDismiss}\r\n      customOnDismiss={customOnDismiss}\r\n      attemptingTxn={attemptingTxn}\r\n      currencyToAdd={currencyToAdd}\r\n      hash={hash}\r\n      content={confirmationContent}\r\n      pendingText={pendingText}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ConfirmAddLiquidityModal\r\n","import React, { useCallback, useMemo } from 'react'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Currency, CurrencyAmount, Fraction, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\r\nimport { InjectedModalProps, Text, ArrowDownIcon, Button, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport TransactionConfirmationModal, {\r\n  ConfirmationModalContent,\r\n  TransactionErrorContent,\r\n} from 'components/TransactionConfirmationModal'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\r\nimport { Field } from 'state/burn/actions'\r\nimport { CurrencyLogo } from 'components/Logo'\r\nimport useTotalSupply from 'hooks/useTotalSupply'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { PairDistribution, AddLiquidityModalHeader } from './common'\r\nimport { ZapErrorMessages } from './ZapErrorMessage'\r\n\r\ninterface ConfirmZapInModalProps {\r\n  title: string\r\n  customOnDismiss: () => void\r\n  attemptingTxn: boolean\r\n  hash: string\r\n  pendingText: string\r\n  currencies: { [field in Field]?: Currency }\r\n  allowedSlippage: number\r\n  liquidityErrorMessage: string\r\n  price: Fraction\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\r\n  onAdd: () => void\r\n  poolTokenPercentage: Percent\r\n  liquidityMinted: TokenAmount\r\n  pair: Pair\r\n  rebalancing?: boolean\r\n  zapSwapTokenField: Field\r\n  zapSwapOutTokenField: Field\r\n  zapInEstimated: {\r\n    swapAmountIn: BigNumber\r\n    swapAmountOut: BigNumber\r\n    isToken0Sold: boolean\r\n  }\r\n  zapMode: boolean\r\n  toggleZapMode: (value: boolean) => void\r\n}\r\n\r\nconst clamp = (num: number, min: number, max: number) => Math.min(Math.max(num, min), max)\r\n\r\nconst ConfirmZapInModal: React.FC<InjectedModalProps & ConfirmZapInModalProps> = ({\r\n  title,\r\n  onDismiss,\r\n  customOnDismiss,\r\n  attemptingTxn,\r\n  hash,\r\n  pendingText,\r\n  price,\r\n  currencies,\r\n  zapSwapTokenField,\r\n  zapSwapOutTokenField,\r\n  allowedSlippage,\r\n  parsedAmounts,\r\n  liquidityErrorMessage,\r\n  onAdd,\r\n  poolTokenPercentage,\r\n  liquidityMinted,\r\n  pair,\r\n  zapInEstimated,\r\n  rebalancing,\r\n  zapMode,\r\n  toggleZapMode,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n  const swapInCurrencyAmount = parsedAmounts[zapSwapTokenField]\r\n  const swapOutCurrencyAmount = parsedAmounts[zapSwapOutTokenField]\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    swapInCurrencyAmount && !swapOutCurrencyAmount\r\n      ? t('There is no %token1% input. Half of %token0% input is converted into %token1% to add liquidity.', {\r\n          token0: currencies[zapSwapTokenField]?.symbol,\r\n          token1: currencies[zapSwapOutTokenField]?.symbol,\r\n        })\r\n      : t('There is not enough %token1% input to match 50/50. Some of %token0% will be converted to %token1%', {\r\n          token0: currencies[zapSwapTokenField]?.symbol,\r\n          token1: currencies[zapSwapOutTokenField]?.symbol,\r\n        }),\r\n    {\r\n      placement: 'auto-start',\r\n    },\r\n  )\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!liquidityMinted &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, liquidityMinted.raw)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, liquidityMinted, false),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, liquidityMinted, false),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  const swapInTokenAmount = useMemo(\r\n    () =>\r\n      zapInEstimated &&\r\n      new TokenAmount(wrappedCurrency(currencies[zapSwapTokenField], chainId), zapInEstimated.swapAmountIn.toString()),\r\n    [chainId, currencies, zapInEstimated, zapSwapTokenField],\r\n  )\r\n\r\n  const swapOutTokenAmount = useMemo(\r\n    () =>\r\n      zapInEstimated?.swapAmountOut &&\r\n      new TokenAmount(\r\n        wrappedCurrency(currencies[zapSwapOutTokenField], chainId),\r\n        zapInEstimated.swapAmountOut.toString(),\r\n      ),\r\n    [chainId, currencies, zapInEstimated?.swapAmountOut, zapSwapOutTokenField],\r\n  )\r\n\r\n  const inputPercent = useMemo(\r\n    () =>\r\n      swapInCurrencyAmount && swapOutCurrencyAmount\r\n        ? clamp(\r\n            +pair\r\n              .priceOf(wrappedCurrency(swapOutCurrencyAmount.currency, chainId))\r\n              .raw.divide(\r\n                new Price(\r\n                  swapInCurrencyAmount.currency,\r\n                  swapOutCurrencyAmount.currency,\r\n                  JSBI.add(swapInCurrencyAmount.raw, swapOutCurrencyAmount.raw),\r\n                  swapInCurrencyAmount.raw,\r\n                ),\r\n              )\r\n              .toSignificant(2),\r\n            0.05,\r\n            0.95,\r\n          )\r\n        : swapInCurrencyAmount && !swapOutCurrencyAmount\r\n        ? 1\r\n        : undefined,\r\n    [chainId, pair, swapInCurrencyAmount, swapOutCurrencyAmount],\r\n  )\r\n\r\n  const tokenDeposited = useMemo(\r\n    () => ({\r\n      [zapSwapTokenField]:\r\n        swapInTokenAmount?.token && pair?.token0\r\n          ? pair.token0.equals(swapInTokenAmount.token)\r\n            ? token0Deposited\r\n            : token1Deposited\r\n          : undefined,\r\n      [zapSwapOutTokenField]:\r\n        swapOutTokenAmount?.token && pair?.token1\r\n          ? pair.token1.equals(swapOutTokenAmount.token)\r\n            ? token1Deposited\r\n            : token0Deposited\r\n          : undefined,\r\n    }),\r\n    [\r\n      pair.token0,\r\n      pair.token1,\r\n      swapInTokenAmount?.token,\r\n      swapOutTokenAmount?.token,\r\n      token0Deposited,\r\n      token1Deposited,\r\n      zapSwapOutTokenField,\r\n      zapSwapTokenField,\r\n    ],\r\n  )\r\n\r\n  const modalHeader = useCallback(() => {\r\n    return (\r\n      <AddLiquidityModalHeader\r\n        allowedSlippage={allowedSlippage}\r\n        currencies={currencies}\r\n        liquidityMinted={liquidityMinted}\r\n        poolTokenPercentage={poolTokenPercentage}\r\n        price={price}\r\n      >\r\n        <PairDistribution\r\n          title={t('Input')}\r\n          percent={inputPercent}\r\n          currencyA={swapInCurrencyAmount ? currencies[zapSwapTokenField] : undefined}\r\n          currencyAValue={swapInCurrencyAmount?.toSignificant(6)}\r\n          currencyB={swapOutCurrencyAmount ? currencies[zapSwapOutTokenField] : undefined}\r\n          currencyBValue={swapOutCurrencyAmount?.toSignificant(6)}\r\n        />\r\n        {swapOutTokenAmount && swapInTokenAmount && currencies[zapSwapTokenField] && currencies[zapSwapOutTokenField] && (\r\n          <AutoColumn justify=\"center\" gap=\"16px\">\r\n            <ArrowDownIcon color=\"textSubtle\" />\r\n            <AutoRow gap=\"6px\" justify=\"center\">\r\n              <RowFixed gap=\"2px\">\r\n                <Text>{swapInTokenAmount?.toSignificant(6)}</Text>\r\n                <CurrencyLogo currency={currencies[zapSwapTokenField]} />\r\n                <Text>{currencies[zapSwapTokenField].symbol}</Text>\r\n              </RowFixed>\r\n              <Text>{t('to')}</Text>\r\n              <RowFixed gap=\"2px\">\r\n                <Text>{swapOutTokenAmount?.toSignificant(6)}</Text>\r\n                <CurrencyLogo currency={currencies[zapSwapOutTokenField]} />\r\n                <Text>{currencies[zapSwapOutTokenField].symbol}</Text>\r\n              </RowFixed>\r\n            </AutoRow>\r\n            <ArrowDownIcon color=\"textSubtle\" />\r\n          </AutoColumn>\r\n        )}\r\n        <AutoColumn gap=\"4px\">\r\n          {tooltipVisible && tooltip}\r\n          <PairDistribution\r\n            tooltipTargetRef={targetRef}\r\n            title={t('Pooled')}\r\n            percent={0.5}\r\n            currencyA={currencies[zapSwapTokenField]}\r\n            currencyAValue={tokenDeposited?.[zapSwapTokenField]?.toSignificant(6)}\r\n            currencyB={currencies[zapSwapOutTokenField]}\r\n            currencyBValue={tokenDeposited?.[zapSwapOutTokenField]?.toSignificant(6)}\r\n          />\r\n        </AutoColumn>\r\n      </AddLiquidityModalHeader>\r\n    )\r\n  }, [\r\n    allowedSlippage,\r\n    currencies,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    price,\r\n    t,\r\n    inputPercent,\r\n    swapInCurrencyAmount,\r\n    zapSwapTokenField,\r\n    swapOutCurrencyAmount,\r\n    zapSwapOutTokenField,\r\n    swapOutTokenAmount,\r\n    swapInTokenAmount,\r\n    tooltip,\r\n    tooltipVisible,\r\n    targetRef,\r\n    tokenDeposited,\r\n  ])\r\n\r\n  const modalBottom = useCallback(() => {\r\n    return (\r\n      <Button width=\"100%\" onClick={onAdd} mt=\"20px\">\r\n        {t('Confirm Supply')}\r\n      </Button>\r\n    )\r\n  }, [onAdd, t])\r\n\r\n  const confirmationContent = useCallback(\r\n    () =>\r\n      liquidityErrorMessage ? (\r\n        <>\r\n          <ZapErrorMessages\r\n            isSingleToken={!rebalancing}\r\n            zapMode={zapMode}\r\n            toggleZapMode={toggleZapMode}\r\n            onModalDismiss={onDismiss}\r\n          />\r\n          <TransactionErrorContent onDismiss={onDismiss} message={liquidityErrorMessage} />\r\n        </>\r\n      ) : (\r\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\r\n      ),\r\n    [liquidityErrorMessage, rebalancing, zapMode, toggleZapMode, onDismiss, modalHeader, modalBottom],\r\n  )\r\n\r\n  return (\r\n    <TransactionConfirmationModal\r\n      minWidth={['100%', , '420px']}\r\n      title={title}\r\n      onDismiss={onDismiss}\r\n      customOnDismiss={customOnDismiss}\r\n      attemptingTxn={attemptingTxn}\r\n      currencyToAdd={pair?.liquidityToken}\r\n      hash={hash}\r\n      content={confirmationContent}\r\n      pendingText={pendingText}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ConfirmZapInModal\r\n","import styled from 'styled-components'\nimport { ArrowDropDownIcon, Box, Button, Text, useModal, Flex, BoxProps } from '@pancakeswap/uikit'\nimport CurrencySearchModal, { CurrencySearchModalProps } from 'components/SearchModal/CurrencySearchModal'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatNumber } from 'utils/formatBalance'\nimport { useCurrencyBalance } from 'state/wallet/hooks'\nimport useBUSDPrice from 'hooks/useBUSDPrice'\nimport { CurrencyLogo } from '../Logo'\nimport { RowBetween, AutoRow } from '../Layout/Row'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 8px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownContainer = styled(Button)`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  .down-icon {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\ninterface CurrencySelectProps extends CurrencySearchModalProps, BoxProps {\n  hideBalance?: boolean\n}\n\nexport const CurrencySelect = ({\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases,\n  hideBalance,\n  ...props\n}: CurrencySelectProps) => {\n  const { account } = useActiveWeb3React()\n\n  const selectedCurrencyBalance = useCurrencyBalance(\n    account ?? undefined,\n    !hideBalance && selectedCurrency ? selectedCurrency : undefined,\n  )\n\n  const { t } = useTranslation()\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={selectedCurrency}\n      otherSelectedCurrency={otherSelectedCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n\n  const price = useBUSDPrice(selectedCurrencyBalance && selectedCurrency ? selectedCurrency : undefined)\n  const quoted = selectedCurrencyBalance && price?.quote(selectedCurrencyBalance)\n\n  return (\n    <Box width=\"100%\" {...props}>\n      <DropDownContainer p={0} onClick={onPresentCurrencyModal}>\n        <DropDownHeader>\n          <Text id=\"pair\" color={!selectedCurrency ? 'text' : undefined}>\n            {!selectedCurrency ? (\n              <>{t('Select')}</>\n            ) : (\n              <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                <CurrencyLogo currency={selectedCurrency} size=\"24px\" style={{ marginRight: '8px' }} />\n                <Text id=\"pair\" bold>\n                  {selectedCurrency && selectedCurrency.symbol && selectedCurrency.symbol.length > 20\n                    ? `${selectedCurrency.symbol.slice(0, 4)}...${selectedCurrency.symbol.slice(\n                        selectedCurrency.symbol.length - 5,\n                        selectedCurrency.symbol.length,\n                      )}`\n                    : selectedCurrency?.symbol}\n                </Text>\n              </Flex>\n            )}\n          </Text>\n        </DropDownHeader>\n        <ArrowDropDownIcon color=\"text\" className=\"down-icon\" />\n      </DropDownContainer>\n      {account && !!selectedCurrency && !hideBalance && (\n        <Box>\n          <AutoRow justify=\"space-between\" gap=\"2px\">\n            <Text color=\"textSubtle\" fontSize=\"12px\">\n              {t('Balance')}:\n            </Text>\n            <Text fontSize=\"12px\">{selectedCurrencyBalance?.toSignificant(6) ?? t('Loading')}</Text>\n          </AutoRow>\n          <RowBetween>\n            <div />\n            {Number.isFinite(+quoted?.toExact()) && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                ~${formatNumber(+quoted.toExact())}\n              </Text>\n            )}\n          </RowBetween>\n        </Box>\n      )}\n    </Box>\n  )\n}\n","import { Currency } from '@pancakeswap/sdk'\r\nimport { useRouter } from 'next/router'\r\nimport { useCallback } from 'react'\r\nimport currencyId from 'utils/currencyId'\r\n\r\nexport const useCurrencySelectRoute = () => {\r\n  const router = useRouter()\r\n  const [currencyIdA, currencyIdB] = router.query.currency || []\r\n\r\n  const handleCurrencyASelect = useCallback(\r\n    (currencyA_: Currency) => {\r\n      const newCurrencyIdA = currencyId(currencyA_)\r\n      if (newCurrencyIdA === currencyIdB) {\r\n        router.replace(`/add/${currencyIdB}/${currencyIdA}`, undefined, { shallow: true })\r\n      } else if (currencyIdB) {\r\n        router.replace(`/add/${newCurrencyIdA}/${currencyIdB}`, undefined, { shallow: true })\r\n      } else {\r\n        router.replace(`/add/${newCurrencyIdA}`, undefined, { shallow: true })\r\n      }\r\n    },\r\n    [currencyIdB, router, currencyIdA],\r\n  )\r\n  const handleCurrencyBSelect = useCallback(\r\n    (currencyB_: Currency) => {\r\n      const newCurrencyIdB = currencyId(currencyB_)\r\n      if (currencyIdA === newCurrencyIdB) {\r\n        if (currencyIdB) {\r\n          router.replace(`/add/${currencyIdB}/${newCurrencyIdB}`, undefined, { shallow: true })\r\n        } else {\r\n          router.replace(`/add/${newCurrencyIdB}`, undefined, { shallow: true })\r\n        }\r\n      } else {\r\n        router.replace(`/add/${currencyIdA || 'MOVO'}/${newCurrencyIdB}`, undefined, { shallow: true })\r\n      }\r\n    },\r\n    [currencyIdA, router, currencyIdB],\r\n  )\r\n\r\n  return {\r\n    handleCurrencyASelect,\r\n    handleCurrencyBSelect,\r\n  }\r\n}\r\n","import { Currency } from '@pancakeswap/sdk'\r\nimport { Box, Text, AddIcon, CardBody, Button, CardFooter } from '@pancakeswap/uikit'\r\nimport { CurrencySelect } from 'components/CurrencySelect'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { FlexGap } from 'components/Layout/Flex'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { AppHeader } from '../../components/App'\r\nimport { useCurrencySelectRoute } from './useCurrencySelectRoute'\r\n\r\nexport function ChoosePair({\r\n  currencyA,\r\n  currencyB,\r\n  error,\r\n  onNext,\r\n}: {\r\n  currencyA?: Currency\r\n  currencyB?: Currency\r\n  error?: string\r\n  onNext?: () => void\r\n}) {\r\n  const { t } = useTranslation()\r\n  const { account } = useActiveWeb3React()\r\n  const isValid = !error\r\n  const { handleCurrencyASelect, handleCurrencyBSelect } = useCurrencySelectRoute()\r\n\r\n  return (\r\n    <>\r\n      <AppHeader\r\n        title={t('Add Liquidity')}\r\n        subtitle={t('Receive LP tokens and earn 0.17% trading fees')}\r\n        helper={t(\r\n          'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\r\n        )}\r\n        backTo=\"/liquidity\"\r\n      />\r\n      <CardBody>\r\n        <Box>\r\n          <Text textTransform=\"uppercase\" color=\"secondary\" bold small pb=\"24px\">\r\n            {t('Choose a valid pair')}\r\n          </Text>\r\n          <FlexGap gap=\"4px\">\r\n            <CurrencySelect\r\n              id=\"add-liquidity-select-tokena\"\r\n              selectedCurrency={currencyA}\r\n              onCurrencySelect={handleCurrencyASelect}\r\n              showCommonBases\r\n            />\r\n            <AddIcon color=\"textSubtle\" />\r\n            <CurrencySelect\r\n              id=\"add-liquidity-select-tokenb\"\r\n              selectedCurrency={currencyB}\r\n              onCurrencySelect={handleCurrencyBSelect}\r\n              showCommonBases\r\n            />\r\n          </FlexGap>\r\n        </Box>\r\n      </CardBody>\r\n      <CardFooter>\r\n        {!account ? (\r\n          <ConnectWalletButton width=\"100%\" />\r\n        ) : (\r\n          <Button\r\n            data-test=\"choose-pair-next\"\r\n            width=\"100%\"\r\n            variant={!isValid ? 'danger' : 'primary'}\r\n            onClick={onNext}\r\n            disabled={!isValid}\r\n          >\r\n            {error ?? t('Add Liquidity')}\r\n          </Button>\r\n        )}\r\n      </CardFooter>\r\n    </>\r\n  )\r\n}\r\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { BigNumber, BigNumberish } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { currencyEquals, ETHER, JSBI, TokenAmount, WNATIVE, MINIMUM_LIQUIDITY } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  AddIcon,\n  CardBody,\n  Message,\n  useModal,\n  TooltipText,\n  useTooltip,\n  MessageText,\n} from '@pancakeswap/uikit'\nimport { logError } from 'utils/sentry'\nimport { useIsTransactionUnsupported, useIsTransactionWarning } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useZapContract } from 'hooks/useContract'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getZapAddress } from 'utils/addressHelpers'\nimport { getLPSymbol } from 'utils/getLpSymbol'\nimport { useRouter } from 'next/router'\nimport { callWithEstimateGas } from 'utils/calls'\nimport { ContractMethodName } from 'utils/types'\nimport { transactionErrorToUserReadableMessage } from 'utils/transactionErrorToUserReadableMessage'\nimport { useLPApr } from 'state/swap/hooks'\nimport { ROUTER_ADDRESS } from 'config/constants/exchange'\nimport { BEGO } from 'config/constants/tokens'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field, resetMintState } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState, useZapIn } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance, useZapModeManager } from '../../state/user/hooks'\nimport { calculateGasMargin } from '../../utils'\nimport { getRouterContract, calculateSlippageAmount } from '../../utils/exchange'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\nimport ConfirmAddLiquidityModal from './components/ConfirmAddLiquidityModal'\nimport ConfirmZapInModal from './components/ConfirmZapInModal'\nimport { ChoosePair } from './ChoosePair'\nimport { ZapCheckbox } from '../../components/CurrencyInputPanel/ZapCheckbox'\nimport { formatAmount } from '../../utils/formatInfoNumbers'\nimport { useCurrencySelectRoute } from './useCurrencySelectRoute'\nimport { useAppDispatch } from '../../state'\n\nenum Steps {\n  Choose,\n  Add,\n}\n\nconst zapAddress = getZapAddress()\n\nexport default function AddLiquidity() {\n  const router = useRouter()\n  const { account, chainId, library } = useActiveWeb3React()\n  const expertMode = useIsExpertMode()\n\n  const [zapMode] = useZapModeManager()\n  const [temporarilyZapMode, setTemporarilyZapMode] = useState(true)\n  const [currencyIdA, currencyIdB] = router.query.currency || ['MOVO', BEGO[chainId]?.address]\n  const [steps, setSteps] = useState(Steps.Choose)\n\n  const dispatch = useAppDispatch()\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  useEffect(() => {\n    if (!currencyIdA && !currencyIdB) {\n      dispatch(resetMintState())\n    }\n  }, [dispatch, currencyIdA, currencyIdB])\n\n  useEffect(() => {\n    if (router.query.step === '1') {\n      setSteps(Steps.Add)\n    }\n  }, [router.query])\n\n  const zapModeStatus = useMemo(() => !!zapMode && temporarilyZapMode, [zapMode, temporarilyZapMode])\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts: mintParsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n    addError,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const poolData = useLPApr(pair)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(`Based on last 7 days' performance. Does not account for impermanent loss`),\n    {\n      placement: 'bottom',\n    },\n  )\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  // modal and loading\n  const [{ attemptingTxn, liquidityErrorMessage, txHash }, setLiquidityState] = useState<{\n    attemptingTxn: boolean\n    liquidityErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    attemptingTxn: false,\n    liquidityErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  // Zap state\n  const [zapTokenToggleA, setZapTokenToggleA] = useState(true)\n  const [zapTokenToggleB, setZapTokenToggleB] = useState(true)\n  const zapTokenCheckedA = zapTokenToggleA && currencyBalances?.[Field.CURRENCY_A]?.greaterThan(0)\n  const zapTokenCheckedB = zapTokenToggleB && currencyBalances?.[Field.CURRENCY_B]?.greaterThan(0)\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const canZap = useMemo(\n    () =>\n      !!zapModeStatus &&\n      !noLiquidity &&\n      !(\n        (pair && JSBI.lessThan(pair.reserve0.raw, MINIMUM_LIQUIDITY)) ||\n        (pair && JSBI.lessThan(pair.reserve1.raw, MINIMUM_LIQUIDITY))\n      ),\n    [noLiquidity, pair, zapModeStatus],\n  )\n\n  const { handleCurrencyASelect, handleCurrencyBSelect } = useCurrencySelectRoute()\n\n  const { zapInEstimating, rebalancing, ...zapIn } = useZapIn({\n    pair,\n    canZap,\n    currencyA,\n    currencyB,\n    currencyBalances,\n    zapTokenCheckedA,\n    zapTokenCheckedB,\n    maxAmounts,\n  })\n\n  const parsedAmounts = canZap ? zapIn.parsedAmounts : mintParsedAmounts\n\n  const preferZapInstead = canZap && !zapIn.noNeedZap\n\n  // get formatted amounts\n  const formattedAmounts = useMemo(\n    () => ({\n      [independentField]:\n        canZap &&\n        ((independentField === Field.CURRENCY_A && !zapTokenCheckedA) ||\n          (independentField === Field.CURRENCY_B && !zapTokenCheckedB))\n          ? ''\n          : typedValue,\n      [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n    }),\n    [\n      canZap,\n      dependentField,\n      independentField,\n      noLiquidity,\n      otherTypedValue,\n      parsedAmounts,\n      typedValue,\n      zapTokenCheckedA,\n      zapTokenCheckedB,\n    ],\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(\n    parsedAmounts[Field.CURRENCY_A],\n    preferZapInstead ? zapAddress : ROUTER_ADDRESS[chainId],\n  )\n  const [approvalB, approveBCallback] = useApproveCallback(\n    parsedAmounts[Field.CURRENCY_B],\n    preferZapInstead ? zapAddress : ROUTER_ADDRESS[chainId],\n  )\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const routerContract = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = mintParsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsBNB = currencyB === ETHER\n      estimate = routerContract.estimateGas.addLiquidityETH\n      method = routerContract.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsBNB ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsBNB ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsBNB ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsBNB ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsBNB ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = routerContract.estimateGas.addLiquidity\n      method = routerContract.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        Number(deadline.toHexString()) + 10000,\n      ]\n      value = null\n    }\n\n    setLiquidityState({ attemptingTxn: true, liquidityErrorMessage: undefined, txHash: undefined })\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n          gasPrice,\n        }).then((response) => {\n          setLiquidityState({ attemptingTxn: false, liquidityErrorMessage: undefined, txHash: response.hash })\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n            type: 'add-liquidity',\n          })\n        }),\n      )\n      .catch((err) => {\n        if (err && err.code !== 4001) {\n          logError(err)\n          console.error(`Add Liquidity failed`, err, args, value)\n        }\n        setLiquidityState({\n          attemptingTxn: false,\n          liquidityErrorMessage:\n            err && err.code !== 4001\n              ? t('Add liquidity failed: %message%', { message: transactionErrorToUserReadableMessage(err, t) })\n              : undefined,\n          txHash: undefined,\n        })\n      })\n  }\n\n  const pendingText = preferZapInstead\n    ? t('Zapping %amountA% %symbolA% and %amountB% %symbolB%', {\n        amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '0',\n        symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n        amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '0',\n        symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n      })\n    : t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n        amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n        symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n        amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n        symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n      })\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n  const addIsWarning = useIsTransactionWarning(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const zapContract = useZapContract(true)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <ConfirmAddLiquidityModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n      allowedSlippage={allowedSlippage}\n      onAdd={onAdd}\n      parsedAmounts={parsedAmounts}\n      currencies={currencies}\n      liquidityErrorMessage={liquidityErrorMessage}\n      price={price}\n      noLiquidity={noLiquidity}\n      poolTokenPercentage={poolTokenPercentage}\n      liquidityMinted={liquidityMinted}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  async function onZapIn() {\n    if (!canZap || !parsedAmounts || !zapIn.zapInEstimated || !library || !chainId) {\n      return\n    }\n\n    let method: ContractMethodName<typeof zapContract>\n    let args\n    let value: BigNumberish | null\n    let summary: string\n    const minAmountOut = zapIn.zapInEstimated.swapAmountOut.mul(10000 - allowedSlippage).div(10000)\n    if (rebalancing) {\n      const maxAmountIn = zapIn.zapInEstimated.swapAmountIn.mul(10000 + allowedSlippage).div(10000)\n      summary = `Zap ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n        currencies[Field.CURRENCY_A]?.symbol\n      } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`\n      if (currencyA === ETHER || currencyB === ETHER) {\n        const tokenBIsBNB = currencyB === ETHER\n        method = 'zapInBNBRebalancing'\n        args = [\n          wrappedCurrency(currencies[tokenBIsBNB ? Field.CURRENCY_A : Field.CURRENCY_B], chainId).address, // token1\n          parsedAmounts[tokenBIsBNB ? Field.CURRENCY_A : Field.CURRENCY_B].raw.toString(), // token1AmountIn\n          pair.liquidityToken.address, // lp\n          maxAmountIn, // tokenAmountInMax\n          minAmountOut, // tokenAmountOutMin\n          zapIn.zapInEstimated.isToken0Sold && !tokenBIsBNB, // isToken0Sold\n        ]\n        value = parsedAmounts[tokenBIsBNB ? Field.CURRENCY_B : Field.CURRENCY_A].raw.toString()\n      } else {\n        method = 'zapInTokenRebalancing'\n        args = [\n          wrappedCurrency(currencies[Field.CURRENCY_A], chainId).address, // token0\n          wrappedCurrency(currencies[Field.CURRENCY_B], chainId).address, // token1\n          parsedAmounts[Field.CURRENCY_A].raw.toString(), // token0AmountIn\n          parsedAmounts[Field.CURRENCY_B].raw.toString(), // token1AmountIn\n          pair.liquidityToken.address, // lp\n          maxAmountIn, // tokenAmountInMax\n          minAmountOut, // tokenAmountOutMin\n          zapIn.zapInEstimated.isToken0Sold, // isToken0Sold\n        ]\n      }\n    } else if (currencies[zapIn.swapTokenField] === ETHER) {\n      method = 'zapInBNB'\n      args = [pair.liquidityToken.address, minAmountOut]\n      summary = `Zap in ${parsedAmounts[zapIn.swapTokenField]?.toSignificant(3)} MOVO for ${getLPSymbol(\n        pair.token0.symbol,\n        pair.token1.symbol,\n      )}`\n      value = parsedAmounts[zapIn.swapTokenField].raw.toString()\n    } else {\n      method = 'zapInToken'\n      args = [\n        wrappedCurrency(currencies[zapIn.swapTokenField], chainId).address,\n        parsedAmounts[zapIn.swapTokenField].raw.toString(),\n        pair.liquidityToken.address,\n        minAmountOut,\n      ]\n      summary = `Zap in ${parsedAmounts[zapIn.swapTokenField]?.toSignificant(3)} ${\n        currencies[zapIn.swapTokenField].symbol\n      } for ${getLPSymbol(pair.token0.symbol, pair.token1.symbol)}`\n    }\n\n    setLiquidityState({ attemptingTxn: true, liquidityErrorMessage: undefined, txHash: undefined })\n\n    callWithEstimateGas(zapContract, method, args, value ? { value, gasPrice } : { gasPrice })\n      .then((response) => {\n        setLiquidityState({ attemptingTxn: false, liquidityErrorMessage: undefined, txHash: response.hash })\n\n        addTransaction(response, {\n          summary,\n          type: 'add-liquidity',\n        })\n      })\n      .catch((err) => {\n        if (err && err.code !== 4001) {\n          logError(err)\n          console.error(`Add Liquidity failed`, err, args, value)\n        }\n        setLiquidityState({\n          attemptingTxn: false,\n          liquidityErrorMessage: err && err.code !== 4001 ? `Add Liquidity failed: ${err.message}` : undefined,\n          txHash: undefined,\n        })\n      })\n  }\n\n  const [onPresentZapInModal] = useModal(\n    <ConfirmZapInModal\n      title={t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      pendingText={pendingText}\n      pair={pair}\n      allowedSlippage={allowedSlippage}\n      onAdd={onZapIn}\n      parsedAmounts={parsedAmounts}\n      currencies={currencies}\n      liquidityErrorMessage={liquidityErrorMessage}\n      price={price}\n      poolTokenPercentage={zapIn.poolTokenPercentage}\n      liquidityMinted={zapIn.liquidityMinted}\n      zapSwapTokenField={zapIn.swapTokenField}\n      zapSwapOutTokenField={zapIn.swapOutTokenField}\n      zapInEstimated={zapIn.zapInEstimated}\n      rebalancing={rebalancing}\n      zapMode={zapModeStatus}\n      toggleZapMode={setTemporarilyZapMode}\n    />,\n    true,\n    true,\n    'zapInModal',\n  )\n\n  const handleEnableZap = () => {\n    if (!zapMode) {\n      setTemporarilyZapMode(!zapMode)\n    }\n  }\n\n  let isValid = !error\n  let errorText = error\n\n  if (preferZapInstead) {\n    isValid = !error && !zapIn.error\n    errorText = error ?? zapIn.error\n  } else {\n    isValid = !error && !addError\n    errorText = error ?? addError\n  }\n\n  const buttonDisabled =\n    !isValid ||\n    ((zapIn.parsedAmounts[Field.CURRENCY_A] || (!preferZapInstead && zapTokenCheckedA)) &&\n      approvalA !== ApprovalState.APPROVED) ||\n    ((zapIn.parsedAmounts[Field.CURRENCY_B] || (!preferZapInstead && zapTokenCheckedB)) &&\n      approvalB !== ApprovalState.APPROVED) ||\n    (zapIn.priceSeverity > 3 && preferZapInstead)\n\n  const showFieldAApproval =\n    (zapTokenCheckedA || !preferZapInstead) &&\n    (approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING)\n  const showFieldBApproval =\n    (zapTokenCheckedB || !preferZapInstead) &&\n    (approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING)\n\n  const shouldShowApprovalGroup = (showFieldAApproval || showFieldBApproval) && isValid\n\n  const oneCurrencyIsWPLS = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WNATIVE[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WNATIVE[chainId]))),\n  )\n\n  const noAnyInputAmount = !parsedAmounts[Field.CURRENCY_A] && !parsedAmounts[Field.CURRENCY_B]\n\n  const showAddLiquidity =\n    (!!currencies[Field.CURRENCY_A] && !!currencies[Field.CURRENCY_B] && steps === Steps.Add) || !canZap\n\n  const showZapWarning =\n    preferZapInstead &&\n    !noAnyInputAmount &&\n    ((!rebalancing && !(!zapTokenCheckedA && !zapTokenCheckedB)) || (rebalancing && zapIn.priceSeverity > 3))\n\n  const showReduceZapTokenButton =\n    preferZapInstead && (zapIn.priceSeverity > 3 || zapIn.zapInEstimatedError) && maxAmounts[zapIn.swapTokenField]\n\n  const showRebalancingConvert =\n    !showZapWarning &&\n    !noAnyInputAmount &&\n    !showReduceZapTokenButton &&\n    preferZapInstead &&\n    zapIn.isDependentAmountGreaterThanMaxAmount &&\n    rebalancing\n\n  const showZapIsAvailable =\n    !zapMode &&\n    !showZapWarning &&\n    !noAnyInputAmount &&\n    (!zapTokenCheckedA || !zapTokenCheckedB) &&\n    !noLiquidity &&\n    !(\n      (pair && JSBI.lessThan(pair.reserve0.raw, MINIMUM_LIQUIDITY)) ||\n      (pair && JSBI.lessThan(pair.reserve1.raw, MINIMUM_LIQUIDITY))\n    )\n\n  return (\n    <Page>\n      <AppBody>\n        {!showAddLiquidity && (\n          <ChoosePair\n            error={error}\n            currencyA={currencies[Field.CURRENCY_A]}\n            currencyB={currencies[Field.CURRENCY_B]}\n            onNext={() => setSteps(Steps.Add)}\n          />\n        )}\n        {showAddLiquidity && (\n          <>\n            <AppHeader\n              title={\n                currencies[Field.CURRENCY_A]?.symbol && currencies[Field.CURRENCY_B]?.symbol\n                  ? `${getLPSymbol(currencies[Field.CURRENCY_A].symbol, currencies[Field.CURRENCY_B].symbol)}`\n                  : t('Add Liquidity')\n              }\n              subtitle={t('Receive LP tokens and earn 0.17% trading fees')}\n              helper={t(\n                'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n              )}\n              backTo={canZap ? () => setSteps(Steps.Choose) : '/liquidity'}\n            />\n            <CardBody>\n              <AutoColumn gap=\"20px\">\n                {noLiquidity && (\n                  <ColumnCenter>\n                    <Message variant=\"warning\">\n                      <div>\n                        <Text bold mb=\"8px\">\n                          {t('You are the first liquidity provider.')}\n                        </Text>\n                        <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                        <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                      </div>\n                    </Message>\n                  </ColumnCenter>\n                )}\n                <CurrencyInputPanel\n                  disableCurrencySelect={canZap}\n                  showBUSD\n                  onInputBlur={zapIn.onInputBlurOnce}\n                  error={zapIn.priceSeverity > 3 && zapIn.swapTokenField === Field.CURRENCY_A}\n                  disabled={canZap && !zapTokenCheckedA}\n                  beforeButton={\n                    canZap && (\n                      <ZapCheckbox\n                        disabled={currencyBalances?.[Field.CURRENCY_A]?.equalTo(0)}\n                        checked={zapTokenCheckedA}\n                        onChange={(e) => {\n                          setZapTokenToggleA(e.target.checked)\n                        }}\n                      />\n                    )\n                  }\n                  onCurrencySelect={handleCurrencyASelect}\n                  zapStyle={canZap ? 'zap' : 'noZap'}\n                  value={formattedAmounts[Field.CURRENCY_A]}\n                  onUserInput={onFieldAInput}\n                  onMax={() => {\n                    onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                  }}\n                  showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                  currency={currencies[Field.CURRENCY_A]}\n                  id=\"add-liquidity-input-tokena\"\n                  showCommonBases\n                />\n                <ColumnCenter>\n                  <AddIcon width=\"16px\" />\n                </ColumnCenter>\n                <CurrencyInputPanel\n                  showBUSD\n                  onInputBlur={zapIn.onInputBlurOnce}\n                  disabled={canZap && !zapTokenCheckedB}\n                  error={zapIn.priceSeverity > 3 && zapIn.swapTokenField === Field.CURRENCY_B}\n                  beforeButton={\n                    canZap && (\n                      <ZapCheckbox\n                        disabled={currencyBalances?.[Field.CURRENCY_B]?.equalTo(0)}\n                        checked={zapTokenCheckedB}\n                        onChange={(e) => {\n                          setZapTokenToggleB(e.target.checked)\n                        }}\n                      />\n                    )\n                  }\n                  onCurrencySelect={handleCurrencyBSelect}\n                  disableCurrencySelect={canZap}\n                  zapStyle={canZap ? 'zap' : 'noZap'}\n                  value={formattedAmounts[Field.CURRENCY_B]}\n                  onUserInput={onFieldBInput}\n                  onMax={() => {\n                    onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                  }}\n                  showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                  currency={currencies[Field.CURRENCY_B]}\n                  id=\"add-liquidity-input-tokenb\"\n                />\n\n                {showZapWarning && (\n                  <Message variant={zapIn.priceSeverity > 3 ? 'danger' : 'warning'}>\n                    {zapIn.priceSeverity > 3 ? (\n                      <MessageText>\n                        {t('Price Impact Too Hight.')}{' '}\n                        <strong>\n                          {t('Reduce amount of %token% to maximum limit', {\n                            token: currencies[zapIn.swapTokenField]?.symbol,\n                          })}\n                        </strong>\n                      </MessageText>\n                    ) : (\n                      <MessageText>\n                        <strong>\n                          {t('No %token% input.', { token: currencies[zapIn.swapOutTokenField]?.symbol })}\n                        </strong>{' '}\n                        {t('Some of your %token0% will be converted to %token1%.', {\n                          token0: currencies[zapIn.swapTokenField]?.symbol,\n                          token1: currencies[zapIn.swapOutTokenField]?.symbol,\n                        })}\n                      </MessageText>\n                    )}\n                  </Message>\n                )}\n\n                {showReduceZapTokenButton && (\n                  <RowFixed style={{ margin: 'auto' }} onClick={() => zapIn.convertToMaxZappable()}>\n                    <Button variant=\"secondary\" scale=\"sm\">\n                      {t('Reduce %token%', { token: currencies[zapIn.swapTokenField]?.symbol })}\n                    </Button>\n                  </RowFixed>\n                )}\n\n                {showZapIsAvailable && (\n                  <Message variant=\"warning\">\n                    <MessageText>\n                      {t('Zap allows you to add liquidity with only 1 single token. Click')}\n                      <Button p=\"0 4px\" scale=\"sm\" variant=\"text\" height=\"auto\" onClick={handleEnableZap}>\n                        {t('here')}\n                      </Button>\n                      {t('to try.')}\n                    </MessageText>\n                  </Message>\n                )}\n\n                {showRebalancingConvert && (\n                  <Message variant=\"warning\">\n                    <AutoColumn>\n                      <MessageText>\n                        <strong>\n                          {t('Not enough %token%.', { token: currencies[zapIn.swapOutTokenField]?.symbol })}\n                        </strong>{' '}\n                        {zapIn.gasOverhead\n                          ? t(\n                              'Some of your %token0% will be converted to %token1% before adding liquidity, but this may cause higher gas fees.',\n                              {\n                                token0: currencies[zapIn.swapTokenField]?.symbol,\n                                token1: currencies[zapIn.swapOutTokenField]?.symbol,\n                              },\n                            )\n                          : t('Some of your %token0% will be converted to %token1%.', {\n                              token0: currencies[zapIn.swapTokenField]?.symbol,\n                              token1: currencies[zapIn.swapOutTokenField]?.symbol,\n                            })}\n                      </MessageText>\n                    </AutoColumn>\n                  </Message>\n                )}\n\n                {showRebalancingConvert && (\n                  <RowFixed\n                    style={{ margin: 'auto' }}\n                    onClick={() => {\n                      if (dependentField === Field.CURRENCY_A) {\n                        onFieldAInput(maxAmounts[dependentField]?.toExact() ?? '')\n                      } else {\n                        onFieldBInput(maxAmounts[dependentField]?.toExact() ?? '')\n                      }\n                    }}\n                  >\n                    <Button variant=\"secondary\" scale=\"sm\">\n                      {t('Don’t convert')}\n                    </Button>\n                  </RowFixed>\n                )}\n\n                {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n                  <>\n                    <LightCard padding=\"0px\" borderRadius=\"20px\">\n                      <RowBetween padding=\"1rem\">\n                        <Text fontSize=\"14px\">\n                          {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                        </Text>\n                      </RowBetween>{' '}\n                      <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                        <PoolPriceBar\n                          currencies={currencies}\n                          poolTokenPercentage={preferZapInstead ? zapIn.poolTokenPercentage : poolTokenPercentage}\n                          noLiquidity={noLiquidity}\n                          price={price}\n                        />\n                      </LightCard>\n                    </LightCard>\n                  </>\n                )}\n\n                <RowBetween>\n                  <Text bold fontSize=\"12px\" color=\"secondary\">\n                    {t('Slippage Tolerance')}\n                  </Text>\n                  <Text bold color=\"primary\">\n                    {allowedSlippage / 100}%\n                  </Text>\n                </RowBetween>\n\n                {pair && poolData && (\n                  <RowBetween>\n                    <TooltipText ref={targetRef} bold fontSize=\"12px\" color=\"secondary\">\n                      {t('LP reward APR')}\n                    </TooltipText>\n                    {tooltipVisible && tooltip}\n                    <Text bold color=\"primary\">\n                      {formatAmount(poolData.lpApr7d)}%\n                    </Text>\n                  </RowBetween>\n                )}\n\n                {addIsUnsupported || addIsWarning ? (\n                  <Button disabled mb=\"4px\">\n                    {t('Unsupported Asset')}\n                  </Button>\n                ) : !account ? (\n                  <ConnectWalletButton />\n                ) : (\n                  <AutoColumn gap=\"md\">\n                    {shouldShowApprovalGroup && (\n                      <RowBetween style={{ gap: '8px' }}>\n                        {showFieldAApproval && (\n                          <Button\n                            onClick={approveACallback}\n                            disabled={approvalA === ApprovalState.PENDING}\n                            width=\"100%\"\n                          >\n                            {approvalA === ApprovalState.PENDING ? (\n                              <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                            ) : (\n                              t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                            )}\n                          </Button>\n                        )}\n                        {showFieldBApproval && (\n                          <Button\n                            onClick={approveBCallback}\n                            disabled={approvalB === ApprovalState.PENDING}\n                            width=\"100%\"\n                          >\n                            {approvalB === ApprovalState.PENDING ? (\n                              <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                            ) : (\n                              t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                            )}\n                          </Button>\n                        )}\n                      </RowBetween>\n                    )}\n                    <Button\n                      isLoading={preferZapInstead && zapInEstimating}\n                      variant={!isValid || zapIn.priceSeverity > 2 ? 'danger' : 'primary'}\n                      onClick={() => {\n                        if (preferZapInstead) {\n                          setLiquidityState({\n                            attemptingTxn: false,\n                            liquidityErrorMessage: undefined,\n                            txHash: undefined,\n                          })\n                          onPresentZapInModal()\n                          return\n                        }\n                        if (expertMode) {\n                          onAdd()\n                        } else {\n                          setLiquidityState({\n                            attemptingTxn: false,\n                            liquidityErrorMessage: undefined,\n                            txHash: undefined,\n                          })\n                          onPresentAddLiquidityModal()\n                        }\n                      }}\n                      disabled={buttonDisabled}\n                    >\n                      {errorText || t('Supply')}\n                    </Button>\n                  </AutoColumn>\n                )}\n              </AutoColumn>\n            </CardBody>\n          </>\n        )}\n      </AppBody>\n      {!(addIsUnsupported || addIsWarning) ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWPLS} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { GetStaticPaths, GetStaticProps } from 'next'\r\nimport AddLiquidity from 'views/AddLiquidity'\r\n\r\nexport default AddLiquidity\r\n\r\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|MOVO)-(0x[a-fA-F0-9]{40}|MOVO)$/\r\n\r\nexport const getStaticPaths: GetStaticPaths = () => {\r\n  return {\r\n    paths: [{ params: { currency: [] } }],\r\n    fallback: true,\r\n  }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\r\n  const { currency = [] } = params\r\n  const [currencyIdA, currencyIdB] = currency\r\n  const match = currencyIdA?.match(OLD_PATH_STRUCTURE)\r\n\r\n  if (match?.length) {\r\n    return {\r\n      redirect: {\r\n        statusCode: 301,\r\n        destination: `/add/${match[1]}/${match[2]}`,\r\n      },\r\n    }\r\n  }\r\n\r\n  if (currencyIdA && currencyIdB && currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\r\n    return {\r\n      redirect: {\r\n        statusCode: 303,\r\n        destination: `/add/${currencyIdA}`,\r\n      },\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: {},\r\n  }\r\n}\r\n","import { Contract, PayableOverrides } from '@ethersproject/contracts'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { calculateGasMargin } from 'utils'\r\nimport { ContractMethodName, MaybeContract, ContractMethodParams } from 'utils/types'\r\n\r\n/**\r\n * Estimate the gas needed to call a function, and add a 10% margin\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\r\n * @param args An array of arguments to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const estimateGas = async <C extends Contract = Contract, N extends ContractMethodName<C> = any>(\r\n  contract: MaybeContract<C>,\r\n  methodName: N,\r\n  methodArgs: ContractMethodParams<C, N>,\r\n  overrides: PayableOverrides = {},\r\n  gasMarginPer10000: number,\r\n) => {\r\n  if (!contract[methodName]) {\r\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\r\n  }\r\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs, overrides)\r\n  // By convention, BigNumber values are multiplied by 1000 to avoid dealing with real numbers\r\n  const gasEstimation = calculateGasMargin(rawGasEstimation, gasMarginPer10000)\r\n  return gasEstimation\r\n}\r\n\r\n/**\r\n * Perform a contract call with a gas value returned from estimateGas\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param methodArgs An array of arguments to pass to the method\r\n * @param overrides An overrides object to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const callWithEstimateGas = async <C extends Contract = Contract, N extends ContractMethodName<C> = any>(\r\n  contract: MaybeContract<C>,\r\n  methodName: N,\r\n  methodArgs: ContractMethodParams<C, N>,\r\n  overrides: PayableOverrides = {},\r\n  gasMarginPer10000 = 1000,\r\n): Promise<TransactionResponse> => {\r\n  const gasEstimation = await estimateGas(contract, methodName, methodArgs, overrides, gasMarginPer10000)\r\n  const tx = await contract[methodName](...methodArgs, {\r\n    gasLimit: gasEstimation,\r\n    ...overrides,\r\n  })\r\n  return tx\r\n}\r\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  const ref = '0x0000000000000000000000000000000000000000'\n\n  return masterChefContract.deposit(pid, value)\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n\n  return masterChefContract.withdraw(pid, value)\n  // , { ...options, gasPrice }\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  const gasPrice = getGasPrice()\n  const ref = '0x0000000000000000000000000000000000000000'\n\n  return masterChefContract.deposit(pid, '0')\n  // , { ...options, gasPrice }\n}\n","/* eslint-disable import/prefer-default-export */\r\nimport BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport multicall from '../multicall'\r\nimport { movoRpcProvider } from '../providers'\r\nimport { getAddress } from '../addressHelpers'\r\n\r\n/**\r\n * Returns the total number of pools that were active at a given block\r\n */\r\nexport const getActivePools = async (block?: number) => {\r\n  const eligiblePools = poolsConfig\r\n    .filter((pool) => pool.sousId !== 0)\r\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\r\n  const blockNumber = block || (await movoRpcProvider.getBlockNumber())\r\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress, 2049),\r\n    name: 'startBlock',\r\n  }))\r\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress, 2049),\r\n    name: 'bonusEndBlock',\r\n  }))\r\n  const [startBlocks, endBlocks] = await Promise.all([\r\n    multicall(sousChefV2, startBlockCalls),\r\n    multicall(sousChefV2, endBlockCalls),\r\n  ])\r\n\r\n  return eligiblePools.reduce((accum, poolCheck, index) => {\r\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\r\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\r\n\r\n    if (!startBlock || !endBlock) {\r\n      return accum\r\n    }\r\n\r\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\r\n      return accum\r\n    }\r\n\r\n    return [...accum, poolCheck]\r\n  }, [])\r\n}\r\n","export * from './estimateGas'\r\nexport * from './farms'\r\nexport * from './pools'\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport store from 'state'\r\nimport { GAS_PRICE_GWEI } from 'state/types'\r\n\r\n/**\r\n * @deprecated not recommend to get state out of redux hook\r\n * Function to return gasPrice outwith a react component\r\n */\r\nconst getGasPrice = (chainId = ChainId.MOVO): string => {\r\n  const state = store.getState()\r\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\r\n  return chainId === ChainId.MOVO ? userGas : GAS_PRICE_GWEI.testnet\r\n}\r\n\r\nexport default getGasPrice\r\n","export const getLPSymbol = (token0Symbol: string, token1Symbol: string) => {\r\n  if (token0Symbol === 'WMOVO') {\r\n    return `MOVO-${token1Symbol} LP`\r\n  }\r\n  if (token1Symbol === 'WMOVO') {\r\n    return `${token0Symbol}-MOVO LP`\r\n  }\r\n  return `${token0Symbol}-${token1Symbol} LP`\r\n}\r\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\r\nimport { MIN_BNB, BIG_INT_ZERO } from 'config/constants/exchange'\r\n\r\n/**\r\n * Given some token amount, return the max that can be spent of it\r\n * @param currencyAmount to return max of\r\n */\r\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\r\n  if (!currencyAmount) return undefined\r\n  if (currencyAmount.currency === ETHER) {\r\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\r\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\r\n    }\r\n    return CurrencyAmount.ether(BIG_INT_ZERO)\r\n  }\r\n  return currencyAmount\r\n}\r\n","import { TranslateFunction } from 'contexts/Localization'\r\n\r\n/**\r\n * This is hacking out the revert reason from the ethers provider thrown error however it can.\r\n * This object seems to be undocumented by ethers.\r\n * @param error an error from the ethers provider\r\n * @param t Translation function\r\n */\r\nexport function transactionErrorToUserReadableMessage(error: any, t: TranslateFunction) {\r\n  let reason: string | undefined\r\n  while (error) {\r\n    reason = error.reason ?? error.data?.message ?? error.message ?? reason\r\n    // eslint-disable-next-line no-param-reassign\r\n    error = error.error ?? error.data?.originalError\r\n  }\r\n\r\n  if (reason?.indexOf('execution reverted: ') === 0) reason = reason.substring('execution reverted: '.length)\r\n\r\n  switch (reason) {\r\n    case 'PancakeRouter: EXPIRED':\r\n      return t(\r\n        'The transaction could not be sent because the deadline has passed. Please check that your transaction deadline is not too low.',\r\n      )\r\n    case 'PancakeRouter: INSUFFICIENT_OUTPUT_AMOUNT':\r\n    case 'PancakeRouter: EXCESSIVE_INPUT_AMOUNT':\r\n    case 'PancakeRouter: INSUFFICIENT_A_AMOUNT':\r\n    case 'PancakeRouter: INSUFFICIENT_B_AMOUNT':\r\n      return t(\r\n        'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.',\r\n      )\r\n    case 'TransferHelper: TRANSFER_FROM_FAILED':\r\n      return t('The input token cannot be transferred. There may be an issue with the input token.')\r\n    case 'Pancake: TRANSFER_FAILED':\r\n      return t('The output token cannot be transferred. There may be an issue with the output token.')\r\n    default:\r\n      if (reason?.indexOf('undefined is not an object') !== -1) {\r\n        console.error(error, reason)\r\n        return t(\r\n          'An error occurred when trying to execute this operation. You may need to increase your slippage tolerance. If that does not work, there may be an incompatibility with the token you are trading.',\r\n        )\r\n      }\r\n      return t('Unknown error%reason%. Try increasing your slippage tolerance.', {\r\n        reason: reason ? `: \"${reason}\"` : '',\r\n      })\r\n  }\r\n}\r\n","import { memo } from 'react'\r\nimport { Message, MessageText, Button, Box, Flex } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useToast from 'hooks/useToast'\r\n\r\ninterface ZapErrorMessagesProps {\r\n  isSingleToken: boolean\r\n  zapMode: boolean\r\n  toggleZapMode: (zapMode: boolean) => void\r\n  onModalDismiss: () => void\r\n}\r\n\r\nexport const ZapErrorMessages: React.FC<ZapErrorMessagesProps> = memo(\r\n  ({ isSingleToken, zapMode, toggleZapMode, onModalDismiss }) => {\r\n    const { t } = useTranslation()\r\n    const { toastInfo } = useToast()\r\n\r\n    const handleCloseButton = () => {\r\n      onModalDismiss()\r\n\r\n      if (zapMode) {\r\n        toggleZapMode(!zapMode)\r\n        toastInfo(t('Info'), t('Temporarily disabled Zap'))\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Box width={['100%', '100%', '380px']}>\r\n        <Message variant=\"warning\" mb=\"16px\">\r\n          <Flex flexDirection=\"column\">\r\n            <MessageText bold>{t('Currently using Zap for liquidity provisions.')}</MessageText>\r\n            <MessageText small>\r\n              {isSingleToken\r\n                ? t('Zap does NOT support tokens with fees on transfers. If you experience any issues, click')\r\n                : t(\r\n                    `Zap does NOT support tokens with fees on transfers. Please choose ’Don't convert’ and retry. If you experience any further issues, click`,\r\n                  )}\r\n              <Button p=\"0 4px\" scale=\"sm\" variant=\"text\" height=\"auto\" onClick={handleCloseButton}>\r\n                {t('here')}\r\n              </Button>\r\n              {t('to disable Zap temporarily.')}\r\n            </MessageText>\r\n          </Flex>\r\n        </Message>\r\n      </Box>\r\n    )\r\n  },\r\n)\r\n","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[6619],{\n\n/***/ 32990:\n/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {\n\n\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/add/[[...currency]]\",\n      function () {\n        return __webpack_require__(39623);\n      }\n    ]);\n    if(false) {}\n  \n\n/***/ }),\n\n/***/ 95596:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7297);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(87379);\n/* harmony import */ var styled_system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57247);\n\n\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)([\n        \"\\n  border-top: 1px solid \",\n        \";\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nvar CardFooter = styled_components__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"].div.withConfig */ .ZP.div.withConfig({\n    componentId: \"sc-11aac870-0\"\n}).withConfig({\n    componentId: \"sc-91048a19-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.cardBorder;\n}, styled_system__WEBPACK_IMPORTED_MODULE_0__/* .space */ .Dh);\nCardFooter.defaultProps = {\n    p: \"24px\"\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (CardFooter);\n\n\n/***/ }),\n\n/***/ 97810:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(26042);\n/* harmony import */ var _swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(69396);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85893);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);\n/* harmony import */ var _Svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(17058);\n\n\n\n\n\nvar Icon = function Icon(props) {\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Svg__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z, (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z)((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)({\n        viewBox: \"0 0 24 24\"\n    }, props), {\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", {\n            d: \"M8.71005 11.71L11.3001 14.3C11.6901 14.69 12.3201 14.69 12.7101 14.3L15.3001 11.71C15.9301 11.08 15.4801 10 14.5901 10H9.41005C8.52005 10 8.08005 11.08 8.71005 11.71Z\"\n        })\n    }));\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (Icon);\n\n\n/***/ }),\n\n/***/ 14984:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"y\": function() { return /* binding */ ZapCheckbox; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(26042);\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7297);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(19731);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(87379);\n\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  display: grid;\\n  place-content: center;\\n  background: \",\n        \";\\n  border-radius: 8px 0px 0px 0px;\\n  border: 1px solid \",\n        \";\\n  border-right: none;\\n  width: 40px;\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\nvar ZapCheckBoxWrapper = styled_components__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"].label.withConfig */ .ZP.label.withConfig({\n    componentId: \"sc-97743dbc-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.background;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.cardBorder;\n});\nvar ZapCheckbox = function(props) {\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ZapCheckBoxWrapper, {\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z, (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z)({\n            scale: \"sm\"\n        }, props))\n    });\n};\n\n\n/***/ }),\n\n/***/ 40508:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"O\": function() { return /* binding */ FlexGap; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7297);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4318);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(87379);\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  display: flex;\\n  justify-content: center;\\n  flex-wrap: wrap;\\n  & > * {\\n    min-width: 280px;\\n    max-width: 31.5%;\\n    width: 100%;\\n    margin: 0 8px;\\n    margin-bottom: 32px;\\n  }\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  gap: \",\n        \";\\n  row-gap: \",\n        \";\\n  column-gap: \",\n        \";\\n\"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\n\n\nvar FlexLayout = styled_components__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"].div.withConfig */ .ZP.div.withConfig({\n    componentId: \"sc-6b0fce6b-0\"\n})(_templateObject());\nvar FlexGap = (0,styled_components__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .ZP)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z).withConfig({\n    componentId: \"sc-6b0fce6b-1\"\n})(_templateObject1(), function(param) {\n    var gap = param.gap;\n    return gap;\n}, function(param) {\n    var rowGap = param.rowGap;\n    return rowGap;\n}, function(param) {\n    var columnGap = param.columnGap;\n    return columnGap;\n});\n/* harmony default export */ __webpack_exports__[\"Z\"] = (FlexLayout);\n\n\n/***/ }),\n\n/***/ 49704:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ UnsupportedCurrencyFooter; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(10253);\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7297);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(90452);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(97114);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(80421);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(65528);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(96293);\n/* harmony import */ var contexts_Localization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(99150);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(87379);\n/* harmony import */ var components_Layout_Row__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(39475);\n/* harmony import */ var components_Layout_Column__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(41914);\n/* harmony import */ var components_Logo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(74314);\n/* harmony import */ var hooks_useActiveWeb3React__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(64011);\n/* harmony import */ var utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(93293);\n/* harmony import */ var utils_wrappedCurrency__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(53854);\n/* harmony import */ var _hooks_Tokens__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(86435);\n\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  padding: 8px 0;\\n  width: 100%;\\n  max-width: 430px;\\n  border-bottom-left-radius: 20px;\\n  border-bottom-right-radius: 20px;\\n  color: \",\n        \";\\n  background-color: \",\n        \";\\n  text-align: center;\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\nvar DetailsFooter = styled_components__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"].div.withConfig */ .ZP.div.withConfig({\n    componentId: \"sc-28577cd9-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.text;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.invertedContrast;\n});\nvar UnsupportedModal = function(param) {\n    var currencies = param.currencies, onDismiss = param.onDismiss;\n    var chainId = (0,hooks_useActiveWeb3React__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z)().chainId;\n    var t = (0,contexts_Localization__WEBPACK_IMPORTED_MODULE_2__/* .useTranslation */ .$G)().t;\n    var tokens = chainId && currencies ? currencies.map(function(currency) {\n        return (0,utils_wrappedCurrency__WEBPACK_IMPORTED_MODULE_8__/* .wrappedCurrency */ .pu)(currency, chainId);\n    }) : [];\n    var unsupportedTokens = (0,_hooks_Tokens__WEBPACK_IMPORTED_MODULE_9__/* .useUnsupportedTokens */ .l6)();\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_11__/* [\"default\"] */ .Z, {\n        title: t(\"Unsupported Assets\"),\n        maxWidth: \"420px\",\n        onDismiss: onDismiss,\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(components_Layout_Column__WEBPACK_IMPORTED_MODULE_4__/* .AutoColumn */ .Tz, {\n            gap: \"lg\",\n            children: [\n                tokens.map(function(token) {\n                    var ref;\n                    return token && unsupportedTokens && Object.keys(unsupportedTokens).includes(token.address) && /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(components_Layout_Column__WEBPACK_IMPORTED_MODULE_4__/* .AutoColumn */ .Tz, {\n                        gap: \"10px\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(components_Layout_Row__WEBPACK_IMPORTED_MODULE_3__/* .AutoRow */ .BA, {\n                                gap: \"5px\",\n                                align: \"center\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components_Logo__WEBPACK_IMPORTED_MODULE_5__/* .CurrencyLogo */ .Xw, {\n                                        currency: token,\n                                        size: \"24px\"\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_12__/* [\"default\"] */ .Z, {\n                                        children: token.symbol\n                                    })\n                                ]\n                            }),\n                            chainId && /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_13__/* [\"default\"] */ .Z, {\n                                external: true,\n                                small: true,\n                                color: \"primaryDark\",\n                                href: (0,utils__WEBPACK_IMPORTED_MODULE_7__/* .getMovoScanLink */ .Ms)(token.address, \"address\", chainId),\n                                children: token.address\n                            })\n                        ]\n                    }, (ref = token.address) === null || ref === void 0 ? void 0 : ref.concat(\"not-supported\"));\n                }),\n                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components_Layout_Column__WEBPACK_IMPORTED_MODULE_4__/* .AutoColumn */ .Tz, {\n                    gap: \"lg\",\n                    children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_12__/* [\"default\"] */ .Z, {\n                        children: t(\"Some assets are not available through this interface because they may not work well with our smart contract or we are unable to allow trading for legal reasons.\")\n                    })\n                })\n            ]\n        })\n    });\n};\nfunction UnsupportedCurrencyFooter(param) {\n    var currencies = param.currencies;\n    var t = (0,contexts_Localization__WEBPACK_IMPORTED_MODULE_2__/* .useTranslation */ .$G)().t;\n    var ref = (0,_swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_14__/* [\"default\"] */ .Z)((0,_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_15__/* [\"default\"] */ .Z)(/*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(UnsupportedModal, {\n        currencies: currencies\n    })), 1), onPresentModal = ref[0];\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DetailsFooter, {\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_16__/* [\"default\"] */ .Z, {\n            variant: \"text\",\n            onClick: onPresentModal,\n            children: t(\"Read more about unsupported assets\")\n        })\n    });\n};\n\n\n/***/ }),\n\n/***/ 7694:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ useCurrentBlockTimestamp; }\n/* harmony export */ });\n/* harmony import */ var _state_multicall_hooks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(91001);\n/* harmony import */ var _useContract__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5039);\n\n\n// gets the current timestamp from the blockchain\nfunction useCurrentBlockTimestamp() {\n    var ref, ref1;\n    var multicall = (0,_useContract__WEBPACK_IMPORTED_MODULE_1__/* .useMulticallContract */ .gq)();\n    return (ref = (0,_state_multicall_hooks__WEBPACK_IMPORTED_MODULE_0__/* .useSingleCallResult */ .Wk)(multicall, \"getCurrentBlockTimestamp\")) === null || ref === void 0 ? void 0 : (ref1 = ref.result) === null || ref1 === void 0 ? void 0 : ref1[0];\n};\n\n\n/***/ }),\n\n/***/ 81748:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ useTransactionDeadline; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9473);\n/* harmony import */ var _useCurrentBlockTimestamp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7694);\n\n\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nfunction useTransactionDeadline() {\n    var ttl = (0,react_redux__WEBPACK_IMPORTED_MODULE_1__/* .useSelector */ .v9)(function(state) {\n        return state.user.userDeadline;\n    });\n    var blockTimestamp = (0,_useCurrentBlockTimestamp__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z)();\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n        if (blockTimestamp && ttl) return blockTimestamp.add(ttl);\n        return undefined;\n    }, [\n        blockTimestamp,\n        ttl\n    ]);\n};\n\n\n/***/ }),\n\n/***/ 39623:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"__N_SSG\": function() { return /* binding */ __N_SSG; },\n  \"default\": function() { return /* binding */ _currency_; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_async_to_generator.mjs\nvar _async_to_generator = __webpack_require__(47568);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_define_property.mjs\nvar _define_property = __webpack_require__(14924);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_object_spread.mjs\nvar _object_spread = __webpack_require__(26042);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_object_spread_props.mjs\nvar _object_spread_props = __webpack_require__(69396);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_object_without_properties.mjs + 1 modules\nvar _object_without_properties = __webpack_require__(99534);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(10253);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_to_consumable_array.mjs + 2 modules\nvar _to_consumable_array = __webpack_require__(29815);\n// EXTERNAL MODULE: ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\nvar runtime = __webpack_require__(34051);\nvar runtime_default = /*#__PURE__*/__webpack_require__.n(runtime);\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(85893);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\nvar bignumber = __webpack_require__(2593);\n// EXTERNAL MODULE: ./packages/swap-sdk/src/index.ts + 32 modules\nvar src = __webpack_require__(54346);\n// EXTERNAL MODULE: ./packages/uikit/src/hooks/useTooltip/useTooltip.tsx + 1 modules\nvar useTooltip = __webpack_require__(36544);\n// EXTERNAL MODULE: ./packages/uikit/src/widgets/Modal/useModal.ts\nvar useModal = __webpack_require__(65528);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Card/CardBody.tsx\nvar CardBody = __webpack_require__(23774);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Message/Message.tsx + 1 modules\nvar Message = __webpack_require__(67334);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Text/Text.tsx\nvar Text = __webpack_require__(97114);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/Add.tsx\nvar Add = __webpack_require__(543);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Button/Button.tsx + 2 modules\nvar Button = __webpack_require__(96293);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Text/TooltipText.tsx\nvar TooltipText = __webpack_require__(17634);\n// EXTERNAL MODULE: ./src/utils/sentry.ts\nvar sentry = __webpack_require__(17226);\n// EXTERNAL MODULE: ./src/hooks/Trades.ts + 1 modules\nvar Trades = __webpack_require__(23715);\n// EXTERNAL MODULE: ./src/contexts/Localization/index.tsx + 3 modules\nvar Localization = __webpack_require__(99150);\n// EXTERNAL MODULE: ./src/components/UnsupportedCurrencyFooter.tsx\nvar UnsupportedCurrencyFooter = __webpack_require__(49704);\n// EXTERNAL MODULE: ./src/hooks/useContract.ts + 1 modules\nvar useContract = __webpack_require__(5039);\n// EXTERNAL MODULE: ./src/hooks/useActiveWeb3React.ts\nvar useActiveWeb3React = __webpack_require__(64011);\n// EXTERNAL MODULE: ./src/utils/addressHelpers.ts\nvar addressHelpers = __webpack_require__(96273);\n// EXTERNAL MODULE: ./src/utils/getLpSymbol.ts\nvar getLpSymbol = __webpack_require__(63119);\n// EXTERNAL MODULE: ./node_modules/next/router.js\nvar next_router = __webpack_require__(11163);\n// EXTERNAL MODULE: ./src/utils/calls/index.ts + 3 modules\nvar calls = __webpack_require__(16519);\n// EXTERNAL MODULE: ./src/utils/transactionErrorToUserReadableMessage.ts\nvar transactionErrorToUserReadableMessage = __webpack_require__(42808);\n// EXTERNAL MODULE: ./src/state/swap/hooks.ts + 13 modules\nvar hooks = __webpack_require__(81081);\n// EXTERNAL MODULE: ./src/config/constants/exchange.ts\nvar exchange = __webpack_require__(19838);\n// EXTERNAL MODULE: ./src/config/constants/tokens.ts\nvar tokens = __webpack_require__(29748);\n// EXTERNAL MODULE: ./src/components/Card/index.tsx\nvar Card = __webpack_require__(36261);\n// EXTERNAL MODULE: ./src/components/Layout/Column.tsx\nvar Column = __webpack_require__(41914);\n// EXTERNAL MODULE: ./src/components/CurrencyInputPanel/index.tsx + 1 modules\nvar CurrencyInputPanel = __webpack_require__(19527);\n// EXTERNAL MODULE: ./src/components/App/index.tsx + 3 modules\nvar App = __webpack_require__(45460);\n// EXTERNAL MODULE: ./src/components/PositionCard/index.tsx\nvar PositionCard = __webpack_require__(86323);\n// EXTERNAL MODULE: ./src/components/Layout/Row.tsx\nvar Row = __webpack_require__(39475);\n// EXTERNAL MODULE: ./src/components/ConnectWalletButton.tsx\nvar ConnectWalletButton = __webpack_require__(30621);\n// EXTERNAL MODULE: ./src/hooks/usePairs.ts\nvar usePairs = __webpack_require__(84915);\n// EXTERNAL MODULE: ./src/hooks/Tokens.ts\nvar Tokens = __webpack_require__(86435);\n// EXTERNAL MODULE: ./src/hooks/useApproveCallback.ts + 1 modules\nvar useApproveCallback = __webpack_require__(50165);\n// EXTERNAL MODULE: ./src/hooks/useTransactionDeadline.ts\nvar useTransactionDeadline = __webpack_require__(81748);\n// EXTERNAL MODULE: ./src/state/mint/actions.ts\nvar actions = __webpack_require__(60650);\n// EXTERNAL MODULE: ./node_modules/@ethersproject/units/lib.esm/index.js + 1 modules\nvar lib_esm = __webpack_require__(61744);\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 13 modules\nvar es = __webpack_require__(9473);\n// EXTERNAL MODULE: ./src/hooks/useTotalSupply.ts\nvar useTotalSupply = __webpack_require__(23552);\n// EXTERNAL MODULE: ./src/state/user/hooks/index.tsx\nvar user_hooks = __webpack_require__(68605);\n// EXTERNAL MODULE: ./src/utils/prices.ts\nvar prices = __webpack_require__(7879);\n// EXTERNAL MODULE: ./src/utils/exchange.ts + 1 modules\nvar utils_exchange = __webpack_require__(60872);\n// EXTERNAL MODULE: ./src/utils/wrappedCurrency.ts\nvar wrappedCurrency = __webpack_require__(53854);\n// EXTERNAL MODULE: ./src/hooks/useSWRContract.ts\nvar useSWRContract = __webpack_require__(38472);\n// EXTERNAL MODULE: ./src/config/constants/types.ts\nvar types = __webpack_require__(97971);\n// EXTERNAL MODULE: ./src/hooks/usePreviousValue.ts\nvar usePreviousValue = __webpack_require__(6199);\n// EXTERNAL MODULE: ./src/utils/tryParseAmount.ts\nvar tryParseAmount = __webpack_require__(97938);\n// EXTERNAL MODULE: ./src/state/index.ts + 19 modules\nvar state = __webpack_require__(31318);\n// EXTERNAL MODULE: ./src/state/wallet/hooks.ts\nvar wallet_hooks = __webpack_require__(71900);\n;// CONCATENATED MODULE: ./src/state/mint/hooks.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction useMintState() {\n    return (0,es/* useSelector */.v9)(function(state) {\n        return state.mint;\n    });\n}\nfunction useMintActionHandlers(noLiquidity) {\n    var dispatch = (0,state/* useAppDispatch */.TL)();\n    var onFieldAInput = (0,react.useCallback)(function(typedValue) {\n        dispatch((0,actions/* typeInput */.LC)({\n            field: actions/* Field.CURRENCY_A */.gN.CURRENCY_A,\n            typedValue: typedValue,\n            noLiquidity: noLiquidity === true\n        }));\n    }, [\n        dispatch,\n        noLiquidity\n    ]);\n    var onFieldBInput = (0,react.useCallback)(function(typedValue) {\n        dispatch((0,actions/* typeInput */.LC)({\n            field: actions/* Field.CURRENCY_B */.gN.CURRENCY_B,\n            typedValue: typedValue,\n            noLiquidity: noLiquidity === true\n        }));\n    }, [\n        dispatch,\n        noLiquidity\n    ]);\n    return {\n        onFieldAInput: onFieldAInput,\n        onFieldBInput: onFieldBInput\n    };\n}\nfunction useDerivedMintInfo(currencyA, currencyB) {\n    var ref, ref1, ref2, ref3;\n    var ref4 = (0,useActiveWeb3React/* default */.Z)(), account = ref4.account, chainId = ref4.chainId;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var ref5 = useMintState(), independentField = ref5.independentField, typedValue = ref5.typedValue, otherTypedValue = ref5.otherTypedValue;\n    var dependentField = independentField === actions/* Field.CURRENCY_A */.gN.CURRENCY_A ? actions/* Field.CURRENCY_B */.gN.CURRENCY_B : actions/* Field.CURRENCY_A */.gN.CURRENCY_A;\n    // tokens\n    var currencies = (0,react.useMemo)(function() {\n        var _obj;\n        return _obj = {}, (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_A */.gN.CURRENCY_A, currencyA !== null && currencyA !== void 0 ? currencyA : undefined), (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_B */.gN.CURRENCY_B, currencyB !== null && currencyB !== void 0 ? currencyB : undefined), _obj;\n    }, [\n        currencyA,\n        currencyB\n    ]);\n    // pair\n    var ref6 = (0,_sliced_to_array/* default */.Z)((0,usePairs/* usePair */.yX)(currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A], currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]), 2), pairState = ref6[0], pair = ref6[1];\n    var totalSupply = (0,useTotalSupply/* default */.Z)(pair === null || pair === void 0 ? void 0 : pair.liquidityToken);\n    var noLiquidity = pairState === usePairs/* PairState.NOT_EXISTS */._G.NOT_EXISTS || Boolean(totalSupply && src/* JSBI.equal */.QA.equal(totalSupply.raw, exchange/* BIG_INT_ZERO */.iV));\n    // balances\n    var balances = (0,wallet_hooks/* useCurrencyBalances */.K5)(account !== null && account !== void 0 ? account : undefined, [\n        currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A],\n        currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B], \n    ]);\n    var _obj;\n    var currencyBalances = (_obj = {}, (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_A */.gN.CURRENCY_A, balances[0]), (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_B */.gN.CURRENCY_B, balances[1]), _obj);\n    // amounts\n    var independentAmount = (0,tryParseAmount/* default */.Z)(typedValue, currencies[independentField]);\n    var dependentAmount = (0,react.useMemo)(function() {\n        if (noLiquidity) {\n            if (otherTypedValue && currencies[dependentField]) {\n                return (0,tryParseAmount/* default */.Z)(otherTypedValue, currencies[dependentField]);\n            }\n            return undefined;\n        }\n        if (independentAmount) {\n            // we wrap the currencies just to get the price in terms of the other token\n            var wrappedIndependentAmount = (0,wrappedCurrency/* wrappedCurrencyAmount */.N)(independentAmount, chainId);\n            var ref = [\n                (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyA, chainId),\n                (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyB, chainId)\n            ], tokenA = ref[0], tokenB = ref[1];\n            if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n                var dependentCurrency = dependentField === actions/* Field.CURRENCY_B */.gN.CURRENCY_B ? currencyB : currencyA;\n                var dependentTokenAmount = dependentField === actions/* Field.CURRENCY_B */.gN.CURRENCY_B ? pair.priceOf(tokenA).quote(wrappedIndependentAmount) : pair.priceOf(tokenB).quote(wrappedIndependentAmount);\n                return dependentCurrency === src/* ETHER */.c0 ? src/* CurrencyAmount.ether */.ih.ether(dependentTokenAmount.raw) : dependentTokenAmount;\n            }\n            return undefined;\n        }\n        return undefined;\n    }, [\n        noLiquidity,\n        otherTypedValue,\n        currencies,\n        dependentField,\n        independentAmount,\n        currencyA,\n        chainId,\n        currencyB,\n        pair\n    ]);\n    var parsedAmounts = (0,react.useMemo)(function() {\n        var _obj;\n        return _obj = {}, (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_A */.gN.CURRENCY_A, independentField === actions/* Field.CURRENCY_A */.gN.CURRENCY_A ? independentAmount : dependentAmount), (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_B */.gN.CURRENCY_B, independentField === actions/* Field.CURRENCY_A */.gN.CURRENCY_A ? dependentAmount : independentAmount), _obj;\n    }, [\n        dependentAmount,\n        independentAmount,\n        independentField\n    ]);\n    var price = (0,react.useMemo)(function() {\n        if (noLiquidity) {\n            var currencyAAmount = parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A], currencyBAmount = parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B];\n            if (currencyAAmount && currencyBAmount) {\n                return new src/* Price */.tA(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw);\n            }\n            return undefined;\n        }\n        var wrappedCurrencyA = (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyA, chainId);\n        return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined;\n    }, [\n        chainId,\n        currencyA,\n        noLiquidity,\n        pair,\n        parsedAmounts\n    ]);\n    // liquidity minted\n    var liquidityMinted = (0,react.useMemo)(function() {\n        var currencyAAmount = parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A], currencyBAmount = parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B];\n        var ref = [\n            (0,wrappedCurrency/* wrappedCurrencyAmount */.N)(currencyAAmount, chainId),\n            (0,wrappedCurrency/* wrappedCurrencyAmount */.N)(currencyBAmount, chainId), \n        ], tokenAmountA = ref[0], tokenAmountB = ref[1];\n        if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n            try {\n                return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB);\n            } catch (error) {\n                console.error(error);\n                return undefined;\n            }\n        }\n        return undefined;\n    }, [\n        parsedAmounts,\n        chainId,\n        pair,\n        totalSupply\n    ]);\n    var poolTokenPercentage = (0,react.useMemo)(function() {\n        if (liquidityMinted && totalSupply) {\n            return new src/* Percent */.gG(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw);\n        }\n        return undefined;\n    }, [\n        liquidityMinted,\n        totalSupply\n    ]);\n    var error;\n    var addError;\n    if (!account) {\n        error = t(\"Connect Wallet\");\n    }\n    if (pairState === usePairs/* PairState.INVALID */._G.INVALID) {\n        error = error !== null && error !== void 0 ? error : t(\"Choose a valid pair\");\n    }\n    var currencyAAmount = parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A], currencyBAmount = parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B];\n    if (currencyAAmount && currencyBAmount && (currencyBalances === null || currencyBalances === void 0 ? void 0 : (ref = currencyBalances[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref === void 0 ? void 0 : ref.equalTo(0)) && (currencyBalances === null || currencyBalances === void 0 ? void 0 : (ref1 = currencyBalances[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref1 === void 0 ? void 0 : ref1.equalTo(0))) {\n        error = error !== null && error !== void 0 ? error : t(\"No token balance\");\n    }\n    if (!parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A] || !parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) {\n        addError = t(\"Enter an amount\");\n    }\n    if (currencyAAmount && (currencyBalances === null || currencyBalances === void 0 ? void 0 : (ref2 = currencyBalances[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref2 === void 0 ? void 0 : ref2.lessThan(currencyAAmount))) {\n        var ref7;\n        addError = t(\"Insufficient %symbol% balance\", {\n            symbol: (ref7 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref7 === void 0 ? void 0 : ref7.symbol\n        });\n    }\n    if (currencyBAmount && (currencyBalances === null || currencyBalances === void 0 ? void 0 : (ref3 = currencyBalances[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref3 === void 0 ? void 0 : ref3.lessThan(currencyBAmount))) {\n        var ref8;\n        addError = t(\"Insufficient %symbol% balance\", {\n            symbol: (ref8 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref8 === void 0 ? void 0 : ref8.symbol\n        });\n    }\n    return {\n        dependentField: dependentField,\n        currencies: currencies,\n        pair: pair,\n        pairState: pairState,\n        currencyBalances: currencyBalances,\n        parsedAmounts: parsedAmounts,\n        price: price,\n        noLiquidity: noLiquidity,\n        liquidityMinted: liquidityMinted,\n        poolTokenPercentage: poolTokenPercentage,\n        error: error,\n        addError: addError\n    };\n}\nvar MAX_ZAP_REVERSE_RATIO = src/* JSBI.BigInt */.QA.BigInt(50);\nvar getMaxZapSwapAmount = function(pair, tokenZap) {\n    return pair && tokenZap && pair.involvesToken(tokenZap) && src/* JSBI.divide */.QA.divide(pair.reserveOf(tokenZap).raw, MAX_ZAP_REVERSE_RATIO);\n};\n// simplify version to guess the zap in amount by swapInAmount from max zap reserves ratio 50\nfunction guessMaxZappableAmount(pair, token0AmountIn, token1AmountIn) {\n    if (!token1AmountIn) {\n        if (token0AmountIn) {\n            var maxSwapAmount = getMaxZapSwapAmount(pair, token0AmountIn.token);\n            return maxSwapAmount && src/* JSBI.multiply */.QA.multiply(maxSwapAmount, src/* JSBI.BigInt */.QA.BigInt(2));\n        }\n        return undefined;\n    }\n    if (token0AmountIn && token1AmountIn) {\n        var maxSwapAmount1 = getMaxZapSwapAmount(pair, token0AmountIn.token);\n        if (!maxSwapAmount1) {\n            return undefined;\n        }\n        var ref = (0,_sliced_to_array/* default */.Z)(pair.getInputAmount(new src/* TokenAmount */.dt(token0AmountIn.token, maxSwapAmount1)), 2), _ = ref[0], newPair = ref[1];\n        return src/* JSBI.add */.QA.add(maxSwapAmount1, src/* JSBI.divide */.QA.divide(src/* JSBI.multiply */.QA.multiply(token1AmountIn.raw, newPair.reserveOf(token0AmountIn.token).raw), newPair.reserveOf(token1AmountIn.token).raw));\n    }\n    return undefined;\n}\n// compare the gas is larger than swap in amount\nfunction useZapInGasOverhead(inputAmount) {\n    var ref;\n    var gasPrice = (0,user_hooks/* useGasPrice */.Fh)();\n    var requiredGas = (0,lib_esm/* formatUnits */.bM)(gasPrice ? bignumber/* BigNumber.from */.O$.from(gasPrice).mul(\"500000\") : \"0\");\n    var requiredGasAsCurrencyAmount = inputAmount ? (0,tryParseAmount/* default */.Z)(requiredGas, src/* ETHER */.c0) : undefined;\n    var inputIsBNB = (inputAmount === null || inputAmount === void 0 ? void 0 : inputAmount.currency.symbol) === \"MOVO\";\n    var gasCostInInputTokens = (0,Trades/* useTradeExactIn */.AU)(requiredGasAsCurrencyAmount, inputIsBNB ? null : inputAmount === null || inputAmount === void 0 ? void 0 : inputAmount.currency);\n    var ref1;\n    return (ref1 = gasCostInInputTokens === null || gasCostInInputTokens === void 0 ? void 0 : (ref = gasCostInInputTokens.outputAmount) === null || ref === void 0 ? void 0 : ref.greaterThan(inputAmount === null || inputAmount === void 0 ? void 0 : inputAmount.raw)) !== null && ref1 !== void 0 ? ref1 : false;\n}\nfunction useZapIn(param) {\n    var canZap = param.canZap, currencyA = param.currencyA, currencyB = param.currencyB, pair = param.pair, currencyBalances = param.currencyBalances, zapTokenCheckedA = param.zapTokenCheckedA, zapTokenCheckedB = param.zapTokenCheckedB, maxAmounts = param.maxAmounts;\n    var ref, ref1, ref2, ref3;\n    var chainId = (0,useActiveWeb3React/* default */.Z)().chainId;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var ref4 = (0,react.useState)(false), inputBlurOnce = ref4[0], setInputBlurOnce = ref4[1];\n    var previousBlur = (0,usePreviousValue/* default */.Z)(inputBlurOnce);\n    var ref5 = (0,react.useState)(false), triedAutoReduce = ref5[0], setTriedAutoReduce = ref5[1];\n    var ref6 = useMintState(), independentField = ref6.independentField, typedValue = ref6.typedValue;\n    var dependentField = independentField === actions/* Field.CURRENCY_A */.gN.CURRENCY_A ? actions/* Field.CURRENCY_B */.gN.CURRENCY_B : actions/* Field.CURRENCY_A */.gN.CURRENCY_A;\n    var currencies = (0,react.useMemo)(function() {\n        var _obj;\n        return _obj = {}, (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_A */.gN.CURRENCY_A, currencyA !== null && currencyA !== void 0 ? currencyA : undefined), (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_B */.gN.CURRENCY_B, currencyB !== null && currencyB !== void 0 ? currencyB : undefined), _obj;\n    }, [\n        currencyA,\n        currencyB\n    ]);\n    var independentAmount = (0,tryParseAmount/* default */.Z)(typedValue, currencies[independentField]);\n    var _dependentAmount = (0,react.useMemo)(function() {\n        if (!canZap) {\n            return undefined;\n        }\n        if (independentAmount) {\n            var wrappedIndependentAmount = (0,wrappedCurrency/* wrappedCurrencyAmount */.N)(independentAmount, chainId);\n            var ref = [\n                (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyA, chainId),\n                (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyB, chainId)\n            ], tokenA = ref[0], tokenB = ref[1];\n            if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n                var dependentCurrency = dependentField === actions/* Field.CURRENCY_B */.gN.CURRENCY_B ? currencyB : currencyA;\n                var dependentTokenAmount = dependentField === actions/* Field.CURRENCY_B */.gN.CURRENCY_B ? pair.priceOf(tokenA).quote(wrappedIndependentAmount) : pair.priceOf(tokenB).quote(wrappedIndependentAmount);\n                return dependentCurrency === src/* ETHER */.c0 ? src/* CurrencyAmount.ether */.ih.ether(dependentTokenAmount.raw) : dependentTokenAmount;\n            }\n            return undefined;\n        }\n        return undefined;\n    }, [\n        canZap,\n        chainId,\n        currencyA,\n        currencyB,\n        dependentField,\n        independentAmount,\n        pair\n    ]);\n    var isDependentAmountGreaterThanMaxAmount = maxAmounts[dependentField] && _dependentAmount && (_dependentAmount === null || _dependentAmount === void 0 ? void 0 : _dependentAmount.greaterThan(maxAmounts[dependentField]));\n    // amounts\n    var dependentAmount = (0,react.useMemo)(function() {\n        return isDependentAmountGreaterThanMaxAmount ? maxAmounts[dependentField] : _dependentAmount;\n    }, [\n        isDependentAmountGreaterThanMaxAmount,\n        maxAmounts,\n        dependentField,\n        _dependentAmount\n    ]);\n    var parsedAmounts = (0,react.useMemo)(function() {\n        var _obj;\n        return _obj = {}, (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_A */.gN.CURRENCY_A, !zapTokenCheckedA ? undefined : independentField === actions/* Field.CURRENCY_A */.gN.CURRENCY_A ? independentAmount : dependentAmount), (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_B */.gN.CURRENCY_B, !zapTokenCheckedB ? undefined : independentField === actions/* Field.CURRENCY_A */.gN.CURRENCY_A ? dependentAmount : independentAmount), _obj;\n    }, [\n        dependentAmount,\n        independentAmount,\n        independentField,\n        zapTokenCheckedA,\n        zapTokenCheckedB\n    ]);\n    var wrappedParsedAmounts = (0,react.useMemo)(function() {\n        var _obj;\n        return _obj = {}, (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_A */.gN.CURRENCY_A, (0,wrappedCurrency/* wrappedCurrencyAmount */.N)(parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A], chainId)), (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_B */.gN.CURRENCY_B, (0,wrappedCurrency/* wrappedCurrencyAmount */.N)(parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B], chainId)), _obj;\n    }, [\n        chainId,\n        parsedAmounts\n    ]);\n    var zapContract = (0,useContract/* useZapContract */.n9)();\n    var rebalancing = !!zapTokenCheckedA && !!zapTokenCheckedB && !!parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A] && !!parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B];\n    var singleTokenToZapField = !rebalancing && zapTokenCheckedB && !!parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B] ? actions/* Field.CURRENCY_B */.gN.CURRENCY_B : actions/* Field.CURRENCY_A */.gN.CURRENCY_A;\n    var singleTokenToZapAmount = (0,react.useMemo)(function() {\n        return wrappedParsedAmounts[singleTokenToZapField];\n    }, [\n        singleTokenToZapField,\n        wrappedParsedAmounts\n    ]);\n    var noNeedZap = (0,react.useMemo)(function() {\n        if (!rebalancing) {\n            return false;\n        }\n        if (!wrappedParsedAmounts[independentField] || !wrappedParsedAmounts[dependentField]) {\n            return undefined;\n        }\n        if (!isDependentAmountGreaterThanMaxAmount) {\n            return true;\n        }\n        var ref = [\n            (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyA, chainId),\n            (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyB, chainId)\n        ], tokenA = ref[0], tokenB = ref[1];\n        if (tokenA && tokenB && wrappedParsedAmounts[independentField] && pair) {\n            return wrappedParsedAmounts[dependentField].equalTo(dependentField === actions/* Field.CURRENCY_B */.gN.CURRENCY_B ? pair.priceOf(tokenA).quote(wrappedParsedAmounts[independentField]) : pair.priceOf(tokenB).quote(wrappedParsedAmounts[independentField]));\n        }\n        return undefined;\n    }, [\n        chainId,\n        currencyA,\n        currencyB,\n        dependentField,\n        independentField,\n        isDependentAmountGreaterThanMaxAmount,\n        pair,\n        rebalancing,\n        wrappedParsedAmounts, \n    ]);\n    var singleZapEstimate = (0,useSWRContract/* useSWRContract */.Av)(canZap && !noNeedZap && zapContract && singleTokenToZapAmount && (singleTokenToZapAmount === null || singleTokenToZapAmount === void 0 ? void 0 : singleTokenToZapAmount.token) && pair && !rebalancing && {\n        contract: zapContract,\n        methodName: \"estimateZapInSwap\",\n        params: [\n            singleTokenToZapAmount.token.address,\n            singleTokenToZapAmount.raw.toString(),\n            pair.liquidityToken.address, \n        ]\n    }, {\n        onError: function onError(err) {\n            console.error(err);\n        }\n    });\n    var rebalancingZapEstimate = (0,useSWRContract/* useSWRContract */.Av)(canZap && zapContract && !noNeedZap && wrappedParsedAmounts && wrappedParsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A] && wrappedParsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B] && pair && rebalancing && {\n        contract: zapContract,\n        methodName: \"estimateZapInRebalancingSwap\",\n        params: [\n            wrappedParsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A].token.address,\n            wrappedParsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B].token.address,\n            wrappedParsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A].raw.toString(),\n            (ref = wrappedParsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref === void 0 ? void 0 : (ref1 = ref.raw) === null || ref1 === void 0 ? void 0 : ref1.toString(),\n            pair.liquidityToken.address, \n        ]\n    }, {\n        onError: function onError(err) {\n            console.error(err);\n        }\n    });\n    var zapInEstimated = (0,react.useMemo)(function() {\n        var ref, ref1, ref2, ref3, ref4, ref5;\n        return ((rebalancingZapEstimate === null || rebalancingZapEstimate === void 0 ? void 0 : rebalancingZapEstimate.data) || (singleZapEstimate === null || singleZapEstimate === void 0 ? void 0 : singleZapEstimate.data)) && {\n            swapAmountIn: rebalancing ? (ref = rebalancingZapEstimate.data) === null || ref === void 0 ? void 0 : ref.swapAmountIn : (ref1 = singleZapEstimate.data) === null || ref1 === void 0 ? void 0 : ref1.swapAmountIn,\n            swapAmountOut: rebalancing ? (ref2 = rebalancingZapEstimate.data) === null || ref2 === void 0 ? void 0 : ref2.swapAmountOut : (ref3 = singleZapEstimate.data) === null || ref3 === void 0 ? void 0 : ref3.swapAmountOut,\n            isToken0Sold: rebalancing ? (ref4 = rebalancingZapEstimate.data) === null || ref4 === void 0 ? void 0 : ref4.sellToken0 : ((ref5 = singleZapEstimate.data) === null || ref5 === void 0 ? void 0 : ref5.swapTokenOut) === (singleTokenToZapAmount === null || singleTokenToZapAmount === void 0 ? void 0 : singleTokenToZapAmount.token.address)\n        };\n    }, [\n        rebalancing,\n        rebalancingZapEstimate.data,\n        singleZapEstimate.data,\n        singleTokenToZapAmount === null || singleTokenToZapAmount === void 0 ? void 0 : singleTokenToZapAmount.token.address\n    ]);\n    var rebalancingSellToken0 = (0,react.useMemo)(function() {\n        if (rebalancingZapEstimate.data) {\n            return rebalancingZapEstimate.data.sellToken0;\n        }\n        if (!pair || !wrappedParsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A] || !wrappedParsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) {\n            return undefined;\n        }\n        var token0toZap = pair.token0.equals(wrappedParsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A].token);\n        if (token0toZap) {\n            return src/* JSBI.greaterThan */.QA.greaterThan(src/* JSBI.multiply */.QA.multiply(wrappedParsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A].raw, pair.reserve1.raw), src/* JSBI.multiply */.QA.multiply(wrappedParsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B].raw, pair.reserve0.raw));\n        }\n        return src/* JSBI.greaterThan */.QA.greaterThan(src/* JSBI.multiply */.QA.multiply(wrappedParsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B].raw, pair.reserve0.raw), src/* JSBI.multiply */.QA.multiply(wrappedParsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A].raw, pair.reserve1.raw));\n    }, [\n        pair,\n        rebalancingZapEstimate.data,\n        wrappedParsedAmounts\n    ]);\n    var swapTokenField = !rebalancing ? singleTokenToZapField : rebalancingSellToken0 ? actions/* Field.CURRENCY_A */.gN.CURRENCY_A : actions/* Field.CURRENCY_B */.gN.CURRENCY_B;\n    var swapOutTokenField = swapTokenField === actions/* Field.CURRENCY_A */.gN.CURRENCY_A ? actions/* Field.CURRENCY_B */.gN.CURRENCY_B : actions/* Field.CURRENCY_A */.gN.CURRENCY_A;\n    var swapTokens = (0,react.useMemo)(function() {\n        var _obj;\n        return _obj = {}, (0,_define_property/* default */.Z)(_obj, swapTokenField, (0,wrappedCurrency/* wrappedCurrency */.pu)(currencies[swapTokenField], chainId)), (0,_define_property/* default */.Z)(_obj, swapOutTokenField, (0,wrappedCurrency/* wrappedCurrency */.pu)(currencies[swapOutTokenField], chainId)), _obj;\n    }, [\n        chainId,\n        currencies,\n        swapOutTokenField,\n        swapTokenField\n    ]);\n    var zapInEstimatedError = (0,react.useMemo)(function() {\n        return rebalancing ? rebalancingZapEstimate.error : singleZapEstimate.error;\n    }, [\n        rebalancing,\n        rebalancingZapEstimate.error,\n        singleZapEstimate.error\n    ]);\n    var zapInEstimatedStatus = (0,react.useMemo)(function() {\n        return rebalancing ? rebalancingZapEstimate.status : singleZapEstimate.status;\n    }, [\n        rebalancing,\n        rebalancingZapEstimate.status,\n        singleZapEstimate.status\n    ]);\n    var priceImpact = (0,react.useMemo)(function() {\n        if (!zapInEstimated) {\n            return undefined;\n        }\n        var tokenAmountIn = new src/* TokenAmount */.dt(swapTokens[swapTokenField], zapInEstimated.swapAmountIn.toString());\n        var tokenAmountOut = new src/* TokenAmount */.dt(swapTokens[swapOutTokenField], zapInEstimated.swapAmountOut.toString());\n        var midPrice = src/* Price.fromRoute */.tA.fromRoute(new src/* Route */.AW([\n            pair\n        ], currencies[swapTokenField]));\n        return (0,prices/* computePriceImpact */.o)(midPrice, tokenAmountIn, tokenAmountOut);\n    }, [\n        currencies,\n        pair,\n        swapOutTokenField,\n        swapTokenField,\n        swapTokens,\n        zapInEstimated\n    ]);\n    var overLimitZapRatio = (0,react.useMemo)(function() {\n        if (!zapInEstimated) {\n            return false;\n        }\n        return src/* JSBI.lessThan */.QA.lessThan(src/* JSBI.divide */.QA.divide(pair.reserveOf(swapTokens[swapTokenField]).raw, src/* JSBI.BigInt */.QA.BigInt(zapInEstimated.swapAmountIn.toString())), MAX_ZAP_REVERSE_RATIO);\n    }, [\n        pair,\n        swapTokens,\n        zapInEstimated,\n        swapTokenField\n    ]);\n    var priceSeverity = overLimitZapRatio || zapInEstimatedError ? 4 : priceImpact ? (0,utils_exchange/* warningSeverity */.oX)(priceImpact) : 0;\n    var ref7 = useMintActionHandlers(false), onFieldAInput = ref7.onFieldAInput, onFieldBInput = ref7.onFieldBInput;\n    var maxZappableAmount = (0,react.useMemo)(function() {\n        return guessMaxZappableAmount(pair, wrappedParsedAmounts[swapTokenField], rebalancing ? wrappedParsedAmounts[swapOutTokenField] : undefined);\n    }, [\n        pair,\n        wrappedParsedAmounts,\n        swapTokenField,\n        rebalancing,\n        swapOutTokenField\n    ]);\n    var convertToMaxZappable = (0,react.useCallback)(function() {\n        if (maxZappableAmount) {\n            if (maxAmounts[swapTokenField]) {\n                var ref;\n                var formatInput = (0,lib_esm/* formatUnits */.bM)(src/* JSBI.greaterThan */.QA.greaterThan(maxAmounts[swapTokenField].raw, maxZappableAmount) ? maxZappableAmount.toString() : maxAmounts[swapTokenField].raw.toString(), (ref = maxAmounts[swapTokenField]) === null || ref === void 0 ? void 0 : ref.currency.decimals);\n                if (swapTokenField === actions/* Field.CURRENCY_A */.gN.CURRENCY_A) {\n                    onFieldAInput(formatInput);\n                } else {\n                    onFieldBInput(formatInput);\n                }\n            }\n        }\n    }, [\n        maxAmounts,\n        maxZappableAmount,\n        onFieldAInput,\n        onFieldBInput,\n        swapTokenField\n    ]);\n    var totalSupply = (0,useTotalSupply/* default */.Z)(pair === null || pair === void 0 ? void 0 : pair.liquidityToken);\n    // liquidity minted\n    var liquidityMinted = (0,react.useMemo)(function() {\n        if (!pair || !swapTokens[swapTokenField] || !swapTokens[swapOutTokenField] || !(zapInEstimated === null || zapInEstimated === void 0 ? void 0 : zapInEstimated.swapAmountIn) || !(zapInEstimated === null || zapInEstimated === void 0 ? void 0 : zapInEstimated.swapAmountOut) || !wrappedParsedAmounts[swapTokenField]) {\n            return undefined;\n        }\n        if (pair && totalSupply) {\n            try {\n                // calc the tokenA amount after swap\n                var zappedTokenAmountA = wrappedParsedAmounts[swapTokenField].greaterThan(zapInEstimated.swapAmountIn.toString()) ? wrappedParsedAmounts[swapTokenField].subtract(new src/* TokenAmount */.dt(swapTokens[swapTokenField], zapInEstimated.swapAmountIn.toString())) : wrappedParsedAmounts[swapTokenField];\n                var zappedTokenAmountB = new src/* TokenAmount */.dt(swapTokens[swapOutTokenField], zapInEstimated.swapAmountOut.toString());\n                if (wrappedParsedAmounts[swapOutTokenField]) {\n                    zappedTokenAmountB = zappedTokenAmountB.add(wrappedParsedAmounts[swapOutTokenField]);\n                }\n                var lpMinted = pair.getLiquidityMinted(totalSupply, zappedTokenAmountA, zappedTokenAmountB);\n                return lpMinted;\n            } catch (error) {\n                console.error(error);\n                return undefined;\n            }\n        }\n        return undefined;\n    }, [\n        pair,\n        swapTokens,\n        swapTokenField,\n        swapOutTokenField,\n        zapInEstimated === null || zapInEstimated === void 0 ? void 0 : zapInEstimated.swapAmountIn,\n        zapInEstimated === null || zapInEstimated === void 0 ? void 0 : zapInEstimated.swapAmountOut,\n        wrappedParsedAmounts,\n        totalSupply, \n    ]);\n    var swapTokenAmountTooLow = (0,react.useMemo)(function() {\n        return wrappedParsedAmounts[swapTokenField] && src/* JSBI.lessThan */.QA.lessThan(wrappedParsedAmounts[swapTokenField].raw, src/* MINIMUM_LIQUIDITY */.Xh);\n    }, [\n        swapTokenField,\n        wrappedParsedAmounts\n    ]);\n    var swapOutAmountTooLow = (0,react.useMemo)(function() {\n        return wrappedParsedAmounts[swapOutTokenField] && src/* JSBI.lessThan */.QA.lessThan(wrappedParsedAmounts[swapOutTokenField].raw, src/* MINIMUM_LIQUIDITY */.Xh);\n    }, [\n        swapOutTokenField,\n        wrappedParsedAmounts\n    ]);\n    var poolTokenPercentage = (0,react.useMemo)(function() {\n        if (liquidityMinted && totalSupply) {\n            return new src/* Percent */.gG(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw);\n        }\n        return undefined;\n    }, [\n        liquidityMinted,\n        totalSupply\n    ]);\n    var gasOverhead = useZapInGasOverhead((0,react.useMemo)(function() {\n        return zapInEstimated ? new src/* TokenAmount */.dt(swapTokens[swapTokenField], zapInEstimated.swapAmountIn.toString()) : null;\n    }, [\n        swapTokenField,\n        swapTokens,\n        zapInEstimated\n    ]));\n    (0,react.useEffect)(function() {\n        if (!triedAutoReduce && parsedAmounts[swapTokenField] && maxZappableAmount && !previousBlur && inputBlurOnce && !rebalancing) {\n            if (src/* JSBI.greaterThan */.QA.greaterThan(parsedAmounts[swapTokenField].raw, maxZappableAmount)) {\n                convertToMaxZappable();\n                setTriedAutoReduce(true);\n            }\n        }\n    }, [\n        convertToMaxZappable,\n        inputBlurOnce,\n        maxZappableAmount,\n        parsedAmounts,\n        previousBlur,\n        rebalancing,\n        singleTokenToZapAmount,\n        swapTokenField,\n        triedAutoReduce, \n    ]);\n    var onInputBlurOnce = (0,react.useCallback)(function() {\n        setInputBlurOnce(true);\n    }, []);\n    var error;\n    if (zapInEstimatedError) {\n        error = t(\"Cannot estimate zap amount\");\n    }\n    if (swapTokenAmountTooLow || rebalancing && swapOutAmountTooLow) {\n        error = t(\"Zap in amount too low\");\n    }\n    if (wrappedParsedAmounts[swapTokenField] && ((ref2 = currencyBalances[swapTokenField]) === null || ref2 === void 0 ? void 0 : ref2.lessThan(wrappedParsedAmounts[swapTokenField]))) {\n        var ref8;\n        var _symbol;\n        error = t(\"Insufficient %token% balance\", {\n            token: (_symbol = (ref8 = wrappedParsedAmounts[swapTokenField]) === null || ref8 === void 0 ? void 0 : ref8.token.symbol) !== null && _symbol !== void 0 ? _symbol : \"\"\n        });\n    }\n    if (wrappedParsedAmounts[swapOutTokenField] && rebalancing && ((ref3 = currencyBalances[swapOutTokenField]) === null || ref3 === void 0 ? void 0 : ref3.lessThan(wrappedParsedAmounts[swapOutTokenField]))) {\n        var ref9;\n        var _symbol1;\n        error = t(\"Insufficient %token% balance\", {\n            token: (_symbol1 = (ref9 = wrappedParsedAmounts[swapOutTokenField]) === null || ref9 === void 0 ? void 0 : ref9.token.symbol) !== null && _symbol1 !== void 0 ? _symbol1 : \"\"\n        });\n    }\n    return {\n        zapInEstimating: zapInEstimatedStatus !== types/* FetchStatus.Fetched */.iF.Fetched,\n        zapInEstimatedError: zapInEstimatedError,\n        zapInEstimated: zapInEstimated,\n        error: error,\n        liquidityMinted: liquidityMinted,\n        poolTokenPercentage: poolTokenPercentage,\n        parsedAmounts: parsedAmounts,\n        swapTokenField: swapTokenField,\n        swapOutTokenField: swapOutTokenField,\n        priceSeverity: priceSeverity,\n        convertToMaxZappable: convertToMaxZappable,\n        rebalancing: rebalancing,\n        noNeedZap: noNeedZap,\n        gasOverhead: gasOverhead,\n        isDependentAmountGreaterThanMaxAmount: isDependentAmountGreaterThanMaxAmount,\n        onInputBlurOnce: onInputBlurOnce\n    };\n}\n\n// EXTERNAL MODULE: ./src/state/transactions/hooks.tsx\nvar transactions_hooks = __webpack_require__(55892);\n// EXTERNAL MODULE: ./src/utils/index.ts\nvar utils = __webpack_require__(93293);\n// EXTERNAL MODULE: ./src/utils/maxAmountSpend.ts\nvar maxAmountSpend = __webpack_require__(45131);\n// EXTERNAL MODULE: ./src/components/Loader/Dots.tsx\nvar Dots = __webpack_require__(48468);\n;// CONCATENATED MODULE: ./src/views/AddLiquidity/PoolPriceBar.tsx\n\n\n\n\n\n\n\nfunction PoolPriceBar(param) {\n    var currencies = param.currencies, noLiquidity = param.noLiquidity, poolTokenPercentage = param.poolTokenPercentage, price = param.price;\n    var ref, ref1, ref2, ref3, ref4;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var ref5, ref6, ref7, ref8, ref9, ref10, ref11;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* AutoColumn */.Tz, {\n        gap: \"md\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* AutoRow */.BA, {\n            justify: \"space-around\",\n            gap: \"4px\",\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                    justify: \"center\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            children: (ref5 = price === null || price === void 0 ? void 0 : price.toSignificant(6)) !== null && ref5 !== void 0 ? ref5 : \"-\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            fontSize: \"14px\",\n                            pt: 1,\n                            children: t(\"%assetA% per %assetB%\", {\n                                assetA: (ref6 = (ref = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref === void 0 ? void 0 : ref.symbol) !== null && ref6 !== void 0 ? ref6 : \"\",\n                                assetB: (ref7 = (ref1 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref1 === void 0 ? void 0 : ref1.symbol) !== null && ref7 !== void 0 ? ref7 : \"\"\n                            })\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                    justify: \"center\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            children: (ref8 = (ref2 = price === null || price === void 0 ? void 0 : price.invert()) === null || ref2 === void 0 ? void 0 : ref2.toSignificant(6)) !== null && ref8 !== void 0 ? ref8 : \"-\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            fontSize: \"14px\",\n                            pt: 1,\n                            children: t(\"%assetA% per %assetB%\", {\n                                assetA: (ref9 = (ref3 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref3 === void 0 ? void 0 : ref3.symbol) !== null && ref9 !== void 0 ? ref9 : \"\",\n                                assetB: (ref10 = (ref4 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref4 === void 0 ? void 0 : ref4.symbol) !== null && ref10 !== void 0 ? ref10 : \"\"\n                            })\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                    justify: \"center\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                            children: [\n                                noLiquidity && price ? \"100\" : (ref11 = (poolTokenPercentage === null || poolTokenPercentage === void 0 ? void 0 : poolTokenPercentage.lessThan(exchange/* ONE_BIPS */.IS)) ? \"<0.01\" : poolTokenPercentage === null || poolTokenPercentage === void 0 ? void 0 : poolTokenPercentage.toFixed(2)) !== null && ref11 !== void 0 ? ref11 : \"0\",\n                                \"%\"\n                            ]\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            fontSize: \"14px\",\n                            pt: 1,\n                            children: t(\"Share of Pool\")\n                        })\n                    ]\n                })\n            ]\n        })\n    });\n}\n/* harmony default export */ var AddLiquidity_PoolPriceBar = (PoolPriceBar);\n\n// EXTERNAL MODULE: ./src/views/Page.tsx\nvar Page = __webpack_require__(49438);\n// EXTERNAL MODULE: ./src/components/TransactionConfirmationModal/index.tsx\nvar TransactionConfirmationModal = __webpack_require__(41228);\n// EXTERNAL MODULE: ./src/state/burn/actions.ts\nvar burn_actions = __webpack_require__(52171);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_tagged_template_literal.mjs\nvar _tagged_template_literal = __webpack_require__(7297);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Box/Box.tsx + 29 modules\nvar Box = __webpack_require__(7180);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Svg.tsx\nvar Svg = __webpack_require__(17058);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Box/Flex.tsx\nvar Flex = __webpack_require__(4318);\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js + 4 modules\nvar styled_components_browser_esm = __webpack_require__(87379);\n// EXTERNAL MODULE: ./src/components/Logo/index.ts + 2 modules\nvar Logo = __webpack_require__(74314);\n;// CONCATENATED MODULE: ./src/views/AddLiquidity/components/common.tsx\n\n\n\n\nfunction _templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  width: 12px;\\n  height: 12px;\\n  border-radius: 50%;\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\nvar Dot = (0,styled_components_browser_esm/* default */.ZP)(Box/* default */.Z).withConfig({\n    componentId: \"sc-32cf1949-0\"\n})(_templateObject());\nvar CircleSvg = function(_param) /*#__PURE__*/ {\n    var _percent = _param.percent, percent = _percent === void 0 ? 1 : _percent, props = (0,_object_without_properties/* default */.Z)(_param, [\n        \"percent\"\n    ]);\n    return (0,jsx_runtime.jsxs)(Svg/* default */.Z, (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({\n        width: \"60px\",\n        height: \"60px\",\n        viewBox: \"0 0 20 20\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\"\n    }, props), {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"g\", {\n                filter: \"url(#filter0_i_1147_113741)\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(\"circle\", {\n                        r: \"10\",\n                        cx: \"10\",\n                        cy: \"10\",\n                        fill: \"#7645D9\"\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(\"circle\", {\n                        r: \"5\",\n                        cx: \"10\",\n                        cy: \"10\",\n                        fill: \"transparent\",\n                        stroke: \"#1FC7D4\",\n                        strokeWidth: \"10\",\n                        strokeDasharray: \"calc(\".concat(percent * 100, \"px * 31.4 / 100) 31.4\"),\n                        transform: \"rotate(-90) translate(-20)\"\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(\"defs\", {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"filter\", {\n                    id: \"filter0_i_1147_113741\",\n                    x: 0,\n                    y: 0,\n                    width: 60,\n                    height: 60,\n                    filterUnits: \"userSpaceOnUse\",\n                    colorInterpolationFilters: \"sRGB\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"feFlood\", {\n                            floodOpacity: 0,\n                            result: \"BackgroundImageFix\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"feBlend\", {\n                            in: \"SourceGraphic\",\n                            in2: \"BackgroundImageFix\",\n                            result: \"shape\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"feColorMatrix\", {\n                            in: \"SourceAlpha\",\n                            values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n                            result: \"hardAlpha\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"feOffset\", {\n                            dy: -2\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"feComposite\", {\n                            in2: \"hardAlpha\",\n                            operator: \"arithmetic\",\n                            k2: -1,\n                            k3: 1\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"feColorMatrix\", {\n                            values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"feBlend\", {\n                            in2: \"shape\",\n                            result: \"effect1_innerShadow_1147_113741\"\n                        })\n                    ]\n                })\n            })\n        ]\n    }));\n};\nvar Subtitle = function(param) {\n    var children = param.children;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n        fontSize: \"12px\",\n        textTransform: \"uppercase\",\n        bold: true,\n        color: \"secondary\",\n        children: children\n    });\n};\nvar PairDistribution = function(param) {\n    var title = param.title, percent = param.percent, currencyA = param.currencyA, currencyB = param.currencyB, currencyAValue = param.currencyAValue, currencyBValue = param.currencyBValue, tooltipTargetRef = param.tooltipTargetRef;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n        gap: \"8px\",\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Subtitle, {\n                children: title\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                children: [\n                    typeof percent !== \"undefined\" && /*#__PURE__*/ (0,jsx_runtime.jsx)(\"div\", {\n                        ref: tooltipTargetRef,\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(CircleSvg, {\n                            percent: percent,\n                            mr: \"34px\"\n                        })\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                        style: {\n                            width: \"100%\"\n                        },\n                        children: [\n                            currencyA && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* AutoRow */.BA, {\n                                        gap: \"4px\",\n                                        children: [\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Dot, {\n                                                bg: \"primary\"\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Logo/* CurrencyLogo */.Xw, {\n                                                currency: currencyA\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                children: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol\n                                            })\n                                        ]\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                        children: currencyAValue\n                                    })\n                                ]\n                            }),\n                            currencyB && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* AutoRow */.BA, {\n                                        gap: \"4px\",\n                                        children: [\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Dot, {\n                                                bg: \"secondary\"\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Logo/* CurrencyLogo */.Xw, {\n                                                currency: currencyB\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                children: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n                                            })\n                                        ]\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                        children: currencyBValue\n                                    })\n                                ]\n                            })\n                        ]\n                    })\n                ]\n            })\n        ]\n    });\n};\nvar AddLiquidityModalHeader = function(param) {\n    var currencies = param.currencies, poolTokenPercentage = param.poolTokenPercentage, liquidityMinted = param.liquidityMinted, price = param.price, allowedSlippage = param.allowedSlippage, noLiquidity = param.noLiquidity, children = param.children;\n    var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var ref8 = (0,useTooltip/* default */.Z)(t(\"Output is estimated. If the price changes by more than %slippage%% your transaction will revert.\", {\n        slippage: allowedSlippage / 100\n    }), {\n        placement: \"auto\"\n    }), tooltip = ref8.tooltip, tooltipVisible = ref8.tooltipVisible, targetRef = ref8.targetRef;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n        gap: \"24px\",\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                gap: \"8px\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Subtitle, {\n                        children: t(\"You will receive\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Card/* GreyCard */.h2, {\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* AutoRow */.BA, {\n                                    gap: \"4px\",\n                                    children: [\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Logo/* DoubleCurrencyLogo */.ge, {\n                                            currency0: currencies[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A],\n                                            currency1: currencies[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B],\n                                            size: 24\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                            color: \"textSubtle\",\n                                            children: ((ref = currencies[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A]) === null || ref === void 0 ? void 0 : ref.symbol) && ((ref1 = currencies[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B]) === null || ref1 === void 0 ? void 0 : ref1.symbol) && (0,getLpSymbol/* getLPSymbol */.z)((ref2 = currencies[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A]) === null || ref2 === void 0 ? void 0 : ref2.symbol, (ref3 = currencies[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B]) === null || ref3 === void 0 ? void 0 : ref3.symbol)\n                                        })\n                                    ]\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    ml: \"8px\",\n                                    children: liquidityMinted === null || liquidityMinted === void 0 ? void 0 : liquidityMinted.toSignificant(6)\n                                })\n                            ]\n                        })\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Subtitle, {\n                        children: t(\"Your pool share\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                        children: [\n                            noLiquidity ? \"100\" : poolTokenPercentage === null || poolTokenPercentage === void 0 ? void 0 : poolTokenPercentage.toSignificant(4),\n                            \"%\"\n                        ]\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* AutoColumn */.Tz, {\n                gap: \"8px\",\n                children: children\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Subtitle, {\n                                children: t(\"Rates\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                children: \"1 \".concat((ref4 = currencies[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A]) === null || ref4 === void 0 ? void 0 : ref4.symbol, \" = \").concat(price === null || price === void 0 ? void 0 : price.toSignificant(4), \" \").concat((ref5 = currencies[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B]) === null || ref5 === void 0 ? void 0 : ref5.symbol)\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Row/* RowBetween */.m0, {\n                        style: {\n                            justifyContent: \"flex-end\"\n                        },\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            children: \"1 \".concat((ref6 = currencies[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B]) === null || ref6 === void 0 ? void 0 : ref6.symbol, \" = \").concat(price === null || price === void 0 ? void 0 : price.invert().toSignificant(4), \" \").concat((ref7 = currencies[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A]) === null || ref7 === void 0 ? void 0 : ref7.symbol)\n                        })\n                    })\n                ]\n            }),\n            !noLiquidity && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Subtitle, {\n                        children: t(\"Slippage Tolerance\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(TooltipText/* default */.Z, {\n                        ref: targetRef,\n                        children: [\n                            allowedSlippage / 100,\n                            \"%\"\n                        ]\n                    }),\n                    tooltipVisible && tooltip\n                ]\n            })\n        ]\n    });\n};\n\n;// CONCATENATED MODULE: ./src/views/AddLiquidity/components/ConfirmAddLiquidityModal.tsx\n\n\n\n\n\n\n\nvar ConfirmAddLiquidityModal = function(param) {\n    var title = param.title, onDismiss = param.onDismiss, customOnDismiss = param.customOnDismiss, attemptingTxn = param.attemptingTxn, hash = param.hash, pendingText = param.pendingText, price = param.price, currencies = param.currencies, noLiquidity = param.noLiquidity, allowedSlippage = param.allowedSlippage, parsedAmounts = param.parsedAmounts, liquidityErrorMessage = param.liquidityErrorMessage, onAdd = param.onAdd, poolTokenPercentage = param.poolTokenPercentage, liquidityMinted = param.liquidityMinted, currencyToAdd = param.currencyToAdd;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var modalHeader = (0,react.useCallback)(function() {\n        var ref, ref1;\n        return /*#__PURE__*/ (0,jsx_runtime.jsx)(AddLiquidityModalHeader, {\n            allowedSlippage: allowedSlippage,\n            currencies: currencies,\n            liquidityMinted: liquidityMinted,\n            poolTokenPercentage: poolTokenPercentage,\n            price: price,\n            noLiquidity: noLiquidity,\n            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(PairDistribution, {\n                title: t(\"Input\"),\n                percent: 0.5,\n                currencyA: currencies[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A],\n                currencyAValue: (ref = parsedAmounts[burn_actions/* Field.CURRENCY_A */.g.CURRENCY_A]) === null || ref === void 0 ? void 0 : ref.toSignificant(6),\n                currencyB: currencies[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B],\n                currencyBValue: (ref1 = parsedAmounts[burn_actions/* Field.CURRENCY_B */.g.CURRENCY_B]) === null || ref1 === void 0 ? void 0 : ref1.toSignificant(6)\n            })\n        });\n    }, [\n        allowedSlippage,\n        currencies,\n        liquidityMinted,\n        noLiquidity,\n        parsedAmounts,\n        poolTokenPercentage,\n        price,\n        t\n    ]);\n    var modalBottom = (0,react.useCallback)(function() {\n        return /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n            width: \"100%\",\n            onClick: onAdd,\n            mt: \"20px\",\n            children: noLiquidity ? t(\"Create Pool & Supply\") : t(\"Confirm Supply\")\n        });\n    }, [\n        noLiquidity,\n        onAdd,\n        t\n    ]);\n    var confirmationContent = (0,react.useCallback)(function() {\n        return liquidityErrorMessage ? /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* TransactionErrorContent */.ht, {\n            onDismiss: onDismiss,\n            message: liquidityErrorMessage\n        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* ConfirmationModalContent */.pM, {\n            topContent: modalHeader,\n            bottomContent: modalBottom\n        });\n    }, [\n        onDismiss,\n        modalBottom,\n        modalHeader,\n        liquidityErrorMessage\n    ]);\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* default */.ZP, {\n        minWidth: [\n            \"100%\",\n            ,\n            \"420px\"\n        ],\n        title: title,\n        onDismiss: onDismiss,\n        customOnDismiss: customOnDismiss,\n        attemptingTxn: attemptingTxn,\n        currencyToAdd: currencyToAdd,\n        hash: hash,\n        content: confirmationContent,\n        pendingText: pendingText\n    });\n};\n/* harmony default export */ var components_ConfirmAddLiquidityModal = (ConfirmAddLiquidityModal);\n\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/ArrowDown.tsx\nvar ArrowDown = __webpack_require__(6372);\n// EXTERNAL MODULE: ./src/views/AddLiquidity/components/ZapErrorMessage.tsx\nvar ZapErrorMessage = __webpack_require__(52631);\n;// CONCATENATED MODULE: ./src/views/AddLiquidity/components/ConfirmZapInModal.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar clamp = function(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n};\nvar ConfirmZapInModal = function(param) {\n    var title = param.title, onDismiss = param.onDismiss, customOnDismiss = param.customOnDismiss, attemptingTxn = param.attemptingTxn, hash = param.hash, pendingText = param.pendingText, price = param.price, currencies = param.currencies, zapSwapTokenField = param.zapSwapTokenField, zapSwapOutTokenField = param.zapSwapOutTokenField, allowedSlippage = param.allowedSlippage, parsedAmounts = param.parsedAmounts, liquidityErrorMessage = param.liquidityErrorMessage, onAdd = param.onAdd, poolTokenPercentage = param.poolTokenPercentage, liquidityMinted = param.liquidityMinted, pair = param.pair, zapInEstimated = param.zapInEstimated, rebalancing = param.rebalancing, zapMode = param.zapMode, toggleZapMode = param.toggleZapMode;\n    var ref, ref1, ref2, ref3;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var chainId = (0,useActiveWeb3React/* default */.Z)().chainId;\n    var totalPoolTokens = (0,useTotalSupply/* default */.Z)(pair.liquidityToken);\n    var swapInCurrencyAmount = parsedAmounts[zapSwapTokenField];\n    var swapOutCurrencyAmount = parsedAmounts[zapSwapOutTokenField];\n    var ref4 = (0,useTooltip/* default */.Z)(swapInCurrencyAmount && !swapOutCurrencyAmount ? t(\"There is no %token1% input. Half of %token0% input is converted into %token1% to add liquidity.\", {\n        token0: (ref = currencies[zapSwapTokenField]) === null || ref === void 0 ? void 0 : ref.symbol,\n        token1: (ref1 = currencies[zapSwapOutTokenField]) === null || ref1 === void 0 ? void 0 : ref1.symbol\n    }) : t(\"There is not enough %token1% input to match 50/50. Some of %token0% will be converted to %token1%\", {\n        token0: (ref2 = currencies[zapSwapTokenField]) === null || ref2 === void 0 ? void 0 : ref2.symbol,\n        token1: (ref3 = currencies[zapSwapOutTokenField]) === null || ref3 === void 0 ? void 0 : ref3.symbol\n    }), {\n        placement: \"auto-start\"\n    }), targetRef = ref4.targetRef, tooltip = ref4.tooltip, tooltipVisible = ref4.tooltipVisible;\n    var ref5 = (0,_sliced_to_array/* default */.Z)(!!pair && !!totalPoolTokens && !!liquidityMinted && // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    src/* JSBI.greaterThanOrEqual */.QA.greaterThanOrEqual(totalPoolTokens.raw, liquidityMinted.raw) ? [\n        pair.getLiquidityValue(pair.token0, totalPoolTokens, liquidityMinted, false),\n        pair.getLiquidityValue(pair.token1, totalPoolTokens, liquidityMinted, false), \n    ] : [\n        undefined,\n        undefined\n    ], 2), token0Deposited = ref5[0], token1Deposited = ref5[1];\n    var swapInTokenAmount = (0,react.useMemo)(function() {\n        return zapInEstimated && new src/* TokenAmount */.dt((0,wrappedCurrency/* wrappedCurrency */.pu)(currencies[zapSwapTokenField], chainId), zapInEstimated.swapAmountIn.toString());\n    }, [\n        chainId,\n        currencies,\n        zapInEstimated,\n        zapSwapTokenField\n    ]);\n    var swapOutTokenAmount = (0,react.useMemo)(function() {\n        return (zapInEstimated === null || zapInEstimated === void 0 ? void 0 : zapInEstimated.swapAmountOut) && new src/* TokenAmount */.dt((0,wrappedCurrency/* wrappedCurrency */.pu)(currencies[zapSwapOutTokenField], chainId), zapInEstimated.swapAmountOut.toString());\n    }, [\n        chainId,\n        currencies,\n        zapInEstimated === null || zapInEstimated === void 0 ? void 0 : zapInEstimated.swapAmountOut,\n        zapSwapOutTokenField\n    ]);\n    var inputPercent = (0,react.useMemo)(function() {\n        return swapInCurrencyAmount && swapOutCurrencyAmount ? clamp(+pair.priceOf((0,wrappedCurrency/* wrappedCurrency */.pu)(swapOutCurrencyAmount.currency, chainId)).raw.divide(new src/* Price */.tA(swapInCurrencyAmount.currency, swapOutCurrencyAmount.currency, src/* JSBI.add */.QA.add(swapInCurrencyAmount.raw, swapOutCurrencyAmount.raw), swapInCurrencyAmount.raw)).toSignificant(2), 0.05, 0.95) : swapInCurrencyAmount && !swapOutCurrencyAmount ? 1 : undefined;\n    }, [\n        chainId,\n        pair,\n        swapInCurrencyAmount,\n        swapOutCurrencyAmount\n    ]);\n    var tokenDeposited = (0,react.useMemo)(function() {\n        var _obj;\n        return _obj = {}, (0,_define_property/* default */.Z)(_obj, zapSwapTokenField, (swapInTokenAmount === null || swapInTokenAmount === void 0 ? void 0 : swapInTokenAmount.token) && (pair === null || pair === void 0 ? void 0 : pair.token0) ? pair.token0.equals(swapInTokenAmount.token) ? token0Deposited : token1Deposited : undefined), (0,_define_property/* default */.Z)(_obj, zapSwapOutTokenField, (swapOutTokenAmount === null || swapOutTokenAmount === void 0 ? void 0 : swapOutTokenAmount.token) && (pair === null || pair === void 0 ? void 0 : pair.token1) ? pair.token1.equals(swapOutTokenAmount.token) ? token1Deposited : token0Deposited : undefined), _obj;\n    }, [\n        pair.token0,\n        pair.token1,\n        swapInTokenAmount === null || swapInTokenAmount === void 0 ? void 0 : swapInTokenAmount.token,\n        swapOutTokenAmount === null || swapOutTokenAmount === void 0 ? void 0 : swapOutTokenAmount.token,\n        token0Deposited,\n        token1Deposited,\n        zapSwapOutTokenField,\n        zapSwapTokenField, \n    ]);\n    var modalHeader = (0,react.useCallback)(function() {\n        var ref, ref1;\n        return /*#__PURE__*/ (0,jsx_runtime.jsxs)(AddLiquidityModalHeader, {\n            allowedSlippage: allowedSlippage,\n            currencies: currencies,\n            liquidityMinted: liquidityMinted,\n            poolTokenPercentage: poolTokenPercentage,\n            price: price,\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(PairDistribution, {\n                    title: t(\"Input\"),\n                    percent: inputPercent,\n                    currencyA: swapInCurrencyAmount ? currencies[zapSwapTokenField] : undefined,\n                    currencyAValue: swapInCurrencyAmount === null || swapInCurrencyAmount === void 0 ? void 0 : swapInCurrencyAmount.toSignificant(6),\n                    currencyB: swapOutCurrencyAmount ? currencies[zapSwapOutTokenField] : undefined,\n                    currencyBValue: swapOutCurrencyAmount === null || swapOutCurrencyAmount === void 0 ? void 0 : swapOutCurrencyAmount.toSignificant(6)\n                }),\n                swapOutTokenAmount && swapInTokenAmount && currencies[zapSwapTokenField] && currencies[zapSwapOutTokenField] && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                    justify: \"center\",\n                    gap: \"16px\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(ArrowDown/* default */.Z, {\n                            color: \"textSubtle\"\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* AutoRow */.BA, {\n                            gap: \"6px\",\n                            justify: \"center\",\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowFixed */.DA, {\n                                    gap: \"2px\",\n                                    children: [\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                            children: swapInTokenAmount === null || swapInTokenAmount === void 0 ? void 0 : swapInTokenAmount.toSignificant(6)\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Logo/* CurrencyLogo */.Xw, {\n                                            currency: currencies[zapSwapTokenField]\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                            children: currencies[zapSwapTokenField].symbol\n                                        })\n                                    ]\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                    children: t(\"to\")\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowFixed */.DA, {\n                                    gap: \"2px\",\n                                    children: [\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                            children: swapOutTokenAmount === null || swapOutTokenAmount === void 0 ? void 0 : swapOutTokenAmount.toSignificant(6)\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Logo/* CurrencyLogo */.Xw, {\n                                            currency: currencies[zapSwapOutTokenField]\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                            children: currencies[zapSwapOutTokenField].symbol\n                                        })\n                                    ]\n                                })\n                            ]\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(ArrowDown/* default */.Z, {\n                            color: \"textSubtle\"\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                    gap: \"4px\",\n                    children: [\n                        tooltipVisible && tooltip,\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(PairDistribution, {\n                            tooltipTargetRef: targetRef,\n                            title: t(\"Pooled\"),\n                            percent: 0.5,\n                            currencyA: currencies[zapSwapTokenField],\n                            currencyAValue: tokenDeposited === null || tokenDeposited === void 0 ? void 0 : (ref = tokenDeposited[zapSwapTokenField]) === null || ref === void 0 ? void 0 : ref.toSignificant(6),\n                            currencyB: currencies[zapSwapOutTokenField],\n                            currencyBValue: tokenDeposited === null || tokenDeposited === void 0 ? void 0 : (ref1 = tokenDeposited[zapSwapOutTokenField]) === null || ref1 === void 0 ? void 0 : ref1.toSignificant(6)\n                        })\n                    ]\n                })\n            ]\n        });\n    }, [\n        allowedSlippage,\n        currencies,\n        liquidityMinted,\n        poolTokenPercentage,\n        price,\n        t,\n        inputPercent,\n        swapInCurrencyAmount,\n        zapSwapTokenField,\n        swapOutCurrencyAmount,\n        zapSwapOutTokenField,\n        swapOutTokenAmount,\n        swapInTokenAmount,\n        tooltip,\n        tooltipVisible,\n        targetRef,\n        tokenDeposited, \n    ]);\n    var modalBottom = (0,react.useCallback)(function() {\n        return /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n            width: \"100%\",\n            onClick: onAdd,\n            mt: \"20px\",\n            children: t(\"Confirm Supply\")\n        });\n    }, [\n        onAdd,\n        t\n    ]);\n    var confirmationContent = (0,react.useCallback)(function() {\n        return liquidityErrorMessage ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(ZapErrorMessage/* ZapErrorMessages */.p, {\n                    isSingleToken: !rebalancing,\n                    zapMode: zapMode,\n                    toggleZapMode: toggleZapMode,\n                    onModalDismiss: onDismiss\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* TransactionErrorContent */.ht, {\n                    onDismiss: onDismiss,\n                    message: liquidityErrorMessage\n                })\n            ]\n        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* ConfirmationModalContent */.pM, {\n            topContent: modalHeader,\n            bottomContent: modalBottom\n        });\n    }, [\n        liquidityErrorMessage,\n        rebalancing,\n        zapMode,\n        toggleZapMode,\n        onDismiss,\n        modalHeader,\n        modalBottom\n    ]);\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(TransactionConfirmationModal/* default */.ZP, {\n        minWidth: [\n            \"100%\",\n            ,\n            \"420px\"\n        ],\n        title: title,\n        onDismiss: onDismiss,\n        customOnDismiss: customOnDismiss,\n        attemptingTxn: attemptingTxn,\n        currencyToAdd: pair === null || pair === void 0 ? void 0 : pair.liquidityToken,\n        hash: hash,\n        content: confirmationContent,\n        pendingText: pendingText\n    });\n};\n/* harmony default export */ var components_ConfirmZapInModal = (ConfirmZapInModal);\n\n// EXTERNAL MODULE: ./packages/uikit/src/components/Card/CardFooter.tsx\nvar CardFooter = __webpack_require__(95596);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/ArrowDropDown.tsx\nvar ArrowDropDown = __webpack_require__(97810);\n// EXTERNAL MODULE: ./src/components/SearchModal/CurrencySearchModal.tsx + 12 modules\nvar CurrencySearchModal = __webpack_require__(63439);\n// EXTERNAL MODULE: ./src/utils/formatBalance.ts\nvar formatBalance = __webpack_require__(65044);\n// EXTERNAL MODULE: ./src/hooks/useBUSDPrice.ts\nvar useBUSDPrice = __webpack_require__(90834);\n;// CONCATENATED MODULE: ./src/components/CurrencySelect/index.tsx\n\n\n\n\n\nfunction CurrencySelect_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  width: 100%;\\n  height: 40px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 0px 16px;\\n  box-shadow: \",\n        \";\\n  border: 1px solid \",\n        \";\\n  border-radius: 8px;\\n  background: \",\n        \";\\n  transition: border-radius 0.15s;\\n\"\n    ]);\n    CurrencySelect_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  cursor: pointer;\\n  width: 100%;\\n  position: relative;\\n  background: \",\n        \";\\n  border-radius: 16px;\\n  height: 40px;\\n  min-width: 136px;\\n  user-select: none;\\n  z-index: 20;\\n\\n  \",\n        \" {\\n    min-width: 168px;\\n  }\\n\\n  .down-icon {\\n    position: absolute;\\n    right: 16px;\\n    top: 50%;\\n    transform: translateY(-50%);\\n  }\\n\"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\nvar DropDownHeader = styled_components_browser_esm/* default.div.withConfig */.ZP.div.withConfig({\n    componentId: \"sc-e07edd44-0\"\n})(CurrencySelect_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.shadows.inset;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.inputSecondary;\n}, function(param) {\n    var theme = param.theme;\n    return theme.colors.input;\n});\nvar DropDownContainer = (0,styled_components_browser_esm/* default */.ZP)(Button/* default */.Z).withConfig({\n    componentId: \"sc-e07edd44-1\"\n})(_templateObject1(), function(param) {\n    var theme = param.theme;\n    return theme.colors.input;\n}, function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\nvar CurrencySelect = function(_param) {\n    var onCurrencySelect = _param.onCurrencySelect, selectedCurrency = _param.selectedCurrency, otherSelectedCurrency = _param.otherSelectedCurrency, showCommonBases = _param.showCommonBases, hideBalance = _param.hideBalance, props = (0,_object_without_properties/* default */.Z)(_param, [\n        \"onCurrencySelect\",\n        \"selectedCurrency\",\n        \"otherSelectedCurrency\",\n        \"showCommonBases\",\n        \"hideBalance\"\n    ]);\n    var account = (0,useActiveWeb3React/* default */.Z)().account;\n    var selectedCurrencyBalance = (0,wallet_hooks/* useCurrencyBalance */._h)(account !== null && account !== void 0 ? account : undefined, !hideBalance && selectedCurrency ? selectedCurrency : undefined);\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var ref = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(CurrencySearchModal/* default */.Z, {\n        onCurrencySelect: onCurrencySelect,\n        selectedCurrency: selectedCurrency,\n        otherSelectedCurrency: otherSelectedCurrency,\n        showCommonBases: showCommonBases\n    })), 1), onPresentCurrencyModal = ref[0];\n    var price = (0,useBUSDPrice/* default */.ZP)(selectedCurrencyBalance && selectedCurrency ? selectedCurrency : undefined);\n    var quoted = selectedCurrencyBalance && (price === null || price === void 0 ? void 0 : price.quote(selectedCurrencyBalance));\n    var ref1;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({\n        width: \"100%\"\n    }, props), {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(DropDownContainer, {\n                p: 0,\n                onClick: onPresentCurrencyModal,\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(DropDownHeader, {\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            id: \"pair\",\n                            color: !selectedCurrency ? \"text\" : undefined,\n                            children: !selectedCurrency ? /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                                children: t(\"Select\")\n                            }) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                                alignItems: \"center\",\n                                justifyContent: \"space-between\",\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Logo/* CurrencyLogo */.Xw, {\n                                        currency: selectedCurrency,\n                                        size: \"24px\",\n                                        style: {\n                                            marginRight: \"8px\"\n                                        }\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                        id: \"pair\",\n                                        bold: true,\n                                        children: selectedCurrency && selectedCurrency.symbol && selectedCurrency.symbol.length > 20 ? \"\".concat(selectedCurrency.symbol.slice(0, 4), \"...\").concat(selectedCurrency.symbol.slice(selectedCurrency.symbol.length - 5, selectedCurrency.symbol.length)) : selectedCurrency === null || selectedCurrency === void 0 ? void 0 : selectedCurrency.symbol\n                                    })\n                                ]\n                            })\n                        })\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(ArrowDropDown/* default */.Z, {\n                        color: \"text\",\n                        className: \"down-icon\"\n                    })\n                ]\n            }),\n            account && !!selectedCurrency && !hideBalance && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* AutoRow */.BA, {\n                        justify: \"space-between\",\n                        gap: \"2px\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                                color: \"textSubtle\",\n                                fontSize: \"12px\",\n                                children: [\n                                    t(\"Balance\"),\n                                    \":\"\n                                ]\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                fontSize: \"12px\",\n                                children: (ref1 = selectedCurrencyBalance === null || selectedCurrencyBalance === void 0 ? void 0 : selectedCurrencyBalance.toSignificant(6)) !== null && ref1 !== void 0 ? ref1 : t(\"Loading\")\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(\"div\", {}),\n                            Number.isFinite(+(quoted === null || quoted === void 0 ? void 0 : quoted.toExact())) && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                                fontSize: \"12px\",\n                                color: \"textSubtle\",\n                                children: [\n                                    \"~$\",\n                                    (0,formatBalance/* formatNumber */.uf)(+quoted.toExact())\n                                ]\n                            })\n                        ]\n                    })\n                ]\n            })\n        ]\n    }));\n};\n\n\n// EXTERNAL MODULE: ./src/components/Layout/Flex.tsx\nvar Layout_Flex = __webpack_require__(40508);\n// EXTERNAL MODULE: ./src/utils/currencyId.ts\nvar currencyId = __webpack_require__(28996);\n;// CONCATENATED MODULE: ./src/views/AddLiquidity/useCurrencySelectRoute.ts\n\n\n\n\nvar useCurrencySelectRoute = function() {\n    var router = (0,next_router.useRouter)();\n    var ref = (0,_sliced_to_array/* default */.Z)(router.query.currency || [], 2), currencyIdA = ref[0], currencyIdB = ref[1];\n    var handleCurrencyASelect = (0,react.useCallback)(function(currencyA_) {\n        var newCurrencyIdA = (0,currencyId/* default */.Z)(currencyA_);\n        if (newCurrencyIdA === currencyIdB) {\n            router.replace(\"/add/\".concat(currencyIdB, \"/\").concat(currencyIdA), undefined, {\n                shallow: true\n            });\n        } else if (currencyIdB) {\n            router.replace(\"/add/\".concat(newCurrencyIdA, \"/\").concat(currencyIdB), undefined, {\n                shallow: true\n            });\n        } else {\n            router.replace(\"/add/\".concat(newCurrencyIdA), undefined, {\n                shallow: true\n            });\n        }\n    }, [\n        currencyIdB,\n        router,\n        currencyIdA\n    ]);\n    var handleCurrencyBSelect = (0,react.useCallback)(function(currencyB_) {\n        var newCurrencyIdB = (0,currencyId/* default */.Z)(currencyB_);\n        if (currencyIdA === newCurrencyIdB) {\n            if (currencyIdB) {\n                router.replace(\"/add/\".concat(currencyIdB, \"/\").concat(newCurrencyIdB), undefined, {\n                    shallow: true\n                });\n            } else {\n                router.replace(\"/add/\".concat(newCurrencyIdB), undefined, {\n                    shallow: true\n                });\n            }\n        } else {\n            router.replace(\"/add/\".concat(currencyIdA || \"MOVO\", \"/\").concat(newCurrencyIdB), undefined, {\n                shallow: true\n            });\n        }\n    }, [\n        currencyIdA,\n        router,\n        currencyIdB\n    ]);\n    return {\n        handleCurrencyASelect: handleCurrencyASelect,\n        handleCurrencyBSelect: handleCurrencyBSelect\n    };\n};\n\n;// CONCATENATED MODULE: ./src/views/AddLiquidity/ChoosePair.tsx\n\n\n\n\n\n\n\n\n\nfunction ChoosePair(param) {\n    var currencyA = param.currencyA, currencyB = param.currencyB, error = param.error, onNext = param.onNext;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var account = (0,useActiveWeb3React/* default */.Z)().account;\n    var isValid = !error;\n    var ref = useCurrencySelectRoute(), handleCurrencyASelect = ref.handleCurrencyASelect, handleCurrencyBSelect = ref.handleCurrencyBSelect;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(App/* AppHeader */.t, {\n                title: t(\"Add Liquidity\"),\n                subtitle: t(\"Receive LP tokens and earn 0.17% trading fees\"),\n                helper: t(\"Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.\"),\n                backTo: \"/liquidity\"\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(CardBody/* default */.Z, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            textTransform: \"uppercase\",\n                            color: \"secondary\",\n                            bold: true,\n                            small: true,\n                            pb: \"24px\",\n                            children: t(\"Choose a valid pair\")\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(Layout_Flex/* FlexGap */.O, {\n                            gap: \"4px\",\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(CurrencySelect, {\n                                    id: \"add-liquidity-select-tokena\",\n                                    selectedCurrency: currencyA,\n                                    onCurrencySelect: handleCurrencyASelect,\n                                    showCommonBases: true\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Add/* default */.Z, {\n                                    color: \"textSubtle\"\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(CurrencySelect, {\n                                    id: \"add-liquidity-select-tokenb\",\n                                    selectedCurrency: currencyB,\n                                    onCurrencySelect: handleCurrencyBSelect,\n                                    showCommonBases: true\n                                })\n                            ]\n                        })\n                    ]\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(CardFooter/* default */.Z, {\n                children: !account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(ConnectWalletButton/* default */.Z, {\n                    width: \"100%\"\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                    \"data-test\": \"choose-pair-next\",\n                    width: \"100%\",\n                    variant: !isValid ? \"danger\" : \"primary\",\n                    onClick: onNext,\n                    disabled: !isValid,\n                    children: error !== null && error !== void 0 ? error : t(\"Add Liquidity\")\n                })\n            })\n        ]\n    });\n}\n\n// EXTERNAL MODULE: ./src/components/CurrencyInputPanel/ZapCheckbox.tsx\nvar ZapCheckbox = __webpack_require__(14984);\n// EXTERNAL MODULE: ./src/utils/formatInfoNumbers.ts\nvar formatInfoNumbers = __webpack_require__(56245);\n;// CONCATENATED MODULE: ./src/views/AddLiquidity/index.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Steps;\n(function(Steps) {\n    Steps[Steps[\"Choose\"] = 0] = \"Choose\";\n    Steps[Steps[\"Add\"] = 1] = \"Add\";\n})(Steps || (Steps = {}));\nvar zapAddress = (0,addressHelpers/* getZapAddress */._M)();\nfunction AddLiquidity() {\n    var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, ref10, ref11, ref12, ref13, ref14, ref15, ref16, ref17, ref18, ref19, ref20, ref21, ref22, ref23, ref24, ref25, ref26, ref27, ref28;\n    var router = (0,next_router.useRouter)();\n    var ref29 = (0,useActiveWeb3React/* default */.Z)(), account = ref29.account, chainId = ref29.chainId, library = ref29.library;\n    var expertMode = (0,user_hooks/* useIsExpertMode */.LO)();\n    var ref30 = (0,_sliced_to_array/* default */.Z)((0,user_hooks/* useZapModeManager */.$f)(), 1), zapMode = ref30[0];\n    var ref31 = (0,react.useState)(true), temporarilyZapMode = ref31[0], setTemporarilyZapMode = ref31[1];\n    var ref32 = (0,_sliced_to_array/* default */.Z)(router.query.currency || [\n        \"MOVO\",\n        (ref = tokens/* BEGO */.JN[chainId]) === null || ref === void 0 ? void 0 : ref.address\n    ], 2), currencyIdA = ref32[0], currencyIdB = ref32[1];\n    var ref33 = (0,react.useState)(Steps.Choose), steps = ref33[0], setSteps = ref33[1];\n    var dispatch = (0,state/* useAppDispatch */.TL)();\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var gasPrice = (0,user_hooks/* useGasPrice */.Fh)();\n    var currencyA = (0,Tokens/* useCurrency */.U8)(currencyIdA);\n    var currencyB = (0,Tokens/* useCurrency */.U8)(currencyIdB);\n    (0,react.useEffect)(function() {\n        if (!currencyIdA && !currencyIdB) {\n            dispatch((0,actions/* resetMintState */.dA)());\n        }\n    }, [\n        dispatch,\n        currencyIdA,\n        currencyIdB\n    ]);\n    (0,react.useEffect)(function() {\n        if (router.query.step === \"1\") {\n            setSteps(Steps.Add);\n        }\n    }, [\n        router.query\n    ]);\n    var zapModeStatus = (0,react.useMemo)(function() {\n        return !!zapMode && temporarilyZapMode;\n    }, [\n        zapMode,\n        temporarilyZapMode\n    ]);\n    // mint state\n    var ref34 = useMintState(), independentField = ref34.independentField, typedValue = ref34.typedValue, otherTypedValue = ref34.otherTypedValue;\n    var ref35 = useDerivedMintInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined), dependentField = ref35.dependentField, currencies = ref35.currencies, pair = ref35.pair, pairState = ref35.pairState, currencyBalances = ref35.currencyBalances, mintParsedAmounts = ref35.parsedAmounts, price = ref35.price, noLiquidity = ref35.noLiquidity, liquidityMinted = ref35.liquidityMinted, poolTokenPercentage = ref35.poolTokenPercentage, error = ref35.error, addError = ref35.addError;\n    var poolData = (0,hooks/* useLPApr */.aT)(pair);\n    var ref36 = (0,useTooltip/* default */.Z)(t(\"Based on last 7 days' performance. Does not account for impermanent loss\"), {\n        placement: \"bottom\"\n    }), targetRef = ref36.targetRef, tooltip = ref36.tooltip, tooltipVisible = ref36.tooltipVisible;\n    var ref37 = useMintActionHandlers(noLiquidity), onFieldAInput = ref37.onFieldAInput, onFieldBInput = ref37.onFieldBInput;\n    // modal and loading\n    var ref38 = (0,react.useState)({\n        attemptingTxn: false,\n        liquidityErrorMessage: undefined,\n        txHash: undefined\n    }), ref39 = ref38[0], attemptingTxn = ref39.attemptingTxn, liquidityErrorMessage = ref39.liquidityErrorMessage, txHash = ref39.txHash, setLiquidityState = ref38[1];\n    // Zap state\n    var ref40 = (0,react.useState)(true), zapTokenToggleA = ref40[0], setZapTokenToggleA = ref40[1];\n    var ref41 = (0,react.useState)(true), zapTokenToggleB = ref41[0], setZapTokenToggleB = ref41[1];\n    var zapTokenCheckedA = zapTokenToggleA && (currencyBalances === null || currencyBalances === void 0 ? void 0 : (ref1 = currencyBalances[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref1 === void 0 ? void 0 : ref1.greaterThan(0));\n    var zapTokenCheckedB = zapTokenToggleB && (currencyBalances === null || currencyBalances === void 0 ? void 0 : (ref2 = currencyBalances[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref2 === void 0 ? void 0 : ref2.greaterThan(0));\n    // txn values\n    var deadline = (0,useTransactionDeadline/* default */.Z)() // custom from users settings\n    ;\n    var ref42 // custom from users\n     = (0,_sliced_to_array/* default */.Z)((0,user_hooks/* useUserSlippageTolerance */.$2)(), 1), allowedSlippage = ref42[0];\n    // get the max amounts user can add\n    var maxAmounts = [\n        actions/* Field.CURRENCY_A */.gN.CURRENCY_A,\n        actions/* Field.CURRENCY_B */.gN.CURRENCY_B\n    ].reduce(function(accumulator, field) {\n        return (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, accumulator), (0,_define_property/* default */.Z)({}, field, (0,maxAmountSpend/* maxAmountSpend */.i)(currencyBalances[field])));\n    }, {});\n    var canZap = (0,react.useMemo)(function() {\n        return !!zapModeStatus && !noLiquidity && !(pair && src/* JSBI.lessThan */.QA.lessThan(pair.reserve0.raw, src/* MINIMUM_LIQUIDITY */.Xh) || pair && src/* JSBI.lessThan */.QA.lessThan(pair.reserve1.raw, src/* MINIMUM_LIQUIDITY */.Xh));\n    }, [\n        noLiquidity,\n        pair,\n        zapModeStatus\n    ]);\n    var ref43 = useCurrencySelectRoute(), handleCurrencyASelect = ref43.handleCurrencyASelect, handleCurrencyBSelect = ref43.handleCurrencyBSelect;\n    var _ref = useZapIn({\n        pair: pair,\n        canZap: canZap,\n        currencyA: currencyA,\n        currencyB: currencyB,\n        currencyBalances: currencyBalances,\n        zapTokenCheckedA: zapTokenCheckedA,\n        zapTokenCheckedB: zapTokenCheckedB,\n        maxAmounts: maxAmounts\n    }), zapInEstimating = _ref.zapInEstimating, rebalancing = _ref.rebalancing, zapIn = (0,_object_without_properties/* default */.Z)(_ref, [\n        \"zapInEstimating\",\n        \"rebalancing\"\n    ]);\n    var parsedAmounts = canZap ? zapIn.parsedAmounts : mintParsedAmounts;\n    var preferZapInstead = canZap && !zapIn.noNeedZap;\n    var ref44;\n    // get formatted amounts\n    var formattedAmounts = (0,react.useMemo)(function() {\n        var ref;\n        var _obj;\n        return _obj = {}, (0,_define_property/* default */.Z)(_obj, independentField, canZap && (independentField === actions/* Field.CURRENCY_A */.gN.CURRENCY_A && !zapTokenCheckedA || independentField === actions/* Field.CURRENCY_B */.gN.CURRENCY_B && !zapTokenCheckedB) ? \"\" : typedValue), (0,_define_property/* default */.Z)(_obj, dependentField, noLiquidity ? otherTypedValue : (ref44 = (ref = parsedAmounts[dependentField]) === null || ref === void 0 ? void 0 : ref.toSignificant(6)) !== null && ref44 !== void 0 ? ref44 : \"\"), _obj;\n    }, [\n        canZap,\n        dependentField,\n        independentField,\n        noLiquidity,\n        otherTypedValue,\n        parsedAmounts,\n        typedValue,\n        zapTokenCheckedA,\n        zapTokenCheckedB, \n    ]);\n    var atMaxAmounts = [\n        actions/* Field.CURRENCY_A */.gN.CURRENCY_A,\n        actions/* Field.CURRENCY_B */.gN.CURRENCY_B\n    ].reduce(function(accumulator, field) {\n        var ref;\n        var _field;\n        return (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, accumulator), (0,_define_property/* default */.Z)({}, field, (ref = maxAmounts[field]) === null || ref === void 0 ? void 0 : ref.equalTo((_field = parsedAmounts[field]) !== null && _field !== void 0 ? _field : \"0\")));\n    }, {});\n    // check whether the user has approved the router on the tokens\n    var ref45 = (0,_sliced_to_array/* default */.Z)((0,useApproveCallback/* useApproveCallback */.qL)(parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A], preferZapInstead ? zapAddress : exchange/* ROUTER_ADDRESS */.bR[chainId]), 2), approvalA = ref45[0], approveACallback = ref45[1];\n    var ref46 = (0,_sliced_to_array/* default */.Z)((0,useApproveCallback/* useApproveCallback */.qL)(parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B], preferZapInstead ? zapAddress : exchange/* ROUTER_ADDRESS */.bR[chainId]), 2), approvalB = ref46[0], approveBCallback = ref46[1];\n    var addTransaction = (0,transactions_hooks/* useTransactionAdder */.h7)();\n    function onAdd() {\n        return _onAdd.apply(this, arguments);\n    }\n    function _onAdd() {\n        _onAdd = (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee() {\n            var routerContract, parsedAmountA, parsedAmountB, _obj, amountsMin, estimate, method, args, value, ref, tokenBIsBNB, ref1, ref2, ref3, ref4, ref5;\n            return runtime_default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        if (!(!chainId || !library || !account)) {\n                            _ctx.next = 2;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 2:\n                        routerContract = (0,utils_exchange/* getRouterContract */.iY)(chainId, library, account);\n                        parsedAmountA = mintParsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A], parsedAmountB = mintParsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B];\n                        if (!(!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline)) {\n                            _ctx.next = 6;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 6:\n                        ;\n                        amountsMin = (_obj = {}, (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_A */.gN.CURRENCY_A, (0,utils_exchange/* calculateSlippageAmount */.uc)(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0]), (0,_define_property/* default */.Z)(_obj, actions/* Field.CURRENCY_B */.gN.CURRENCY_B, (0,utils_exchange/* calculateSlippageAmount */.uc)(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0]), _obj);\n                        ;\n                        ;\n                        ;\n                        ;\n                        if (currencyA === src/* ETHER */.c0 || currencyB === src/* ETHER */.c0) {\n                            ;\n                            tokenBIsBNB = currencyB === src/* ETHER */.c0;\n                            estimate = routerContract.estimateGas.addLiquidityETH;\n                            method = routerContract.addLiquidityETH;\n                            ;\n                            args = [\n                                (ref1 = (ref = (0,wrappedCurrency/* wrappedCurrency */.pu)(tokenBIsBNB ? currencyA : currencyB, chainId)) === null || ref === void 0 ? void 0 : ref.address) !== null && ref1 !== void 0 ? ref1 : \"\",\n                                (tokenBIsBNB ? parsedAmountA : parsedAmountB).raw.toString(),\n                                amountsMin[tokenBIsBNB ? actions/* Field.CURRENCY_A */.gN.CURRENCY_A : actions/* Field.CURRENCY_B */.gN.CURRENCY_B].toString(),\n                                amountsMin[tokenBIsBNB ? actions/* Field.CURRENCY_B */.gN.CURRENCY_B : actions/* Field.CURRENCY_A */.gN.CURRENCY_A].toString(),\n                                account,\n                                deadline.toHexString(), \n                            ];\n                            value = bignumber/* BigNumber.from */.O$.from((tokenBIsBNB ? parsedAmountB : parsedAmountA).raw.toString());\n                        } else {\n                            ;\n                            estimate = routerContract.estimateGas.addLiquidity;\n                            method = routerContract.addLiquidity;\n                            ;\n                            args = [\n                                (ref4 = (ref2 = (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyA, chainId)) === null || ref2 === void 0 ? void 0 : ref2.address) !== null && ref4 !== void 0 ? ref4 : \"\",\n                                (ref5 = (ref3 = (0,wrappedCurrency/* wrappedCurrency */.pu)(currencyB, chainId)) === null || ref3 === void 0 ? void 0 : ref3.address) !== null && ref5 !== void 0 ? ref5 : \"\",\n                                parsedAmountA.raw.toString(),\n                                parsedAmountB.raw.toString(),\n                                amountsMin[actions/* Field.CURRENCY_A */.gN.CURRENCY_A].toString(),\n                                amountsMin[actions/* Field.CURRENCY_B */.gN.CURRENCY_B].toString(),\n                                account,\n                                Number(deadline.toHexString()) + 10000, \n                            ];\n                            value = null;\n                        }\n                        setLiquidityState({\n                            attemptingTxn: true,\n                            liquidityErrorMessage: undefined,\n                            txHash: undefined\n                        });\n                        _ctx.next = 16;\n                        return estimate.apply(void 0, (0,_to_consumable_array/* default */.Z)(args).concat([\n                            value ? {\n                                value: value\n                            } : {}\n                        ])).then(function(estimatedGasLimit) {\n                            return method.apply(void 0, (0,_to_consumable_array/* default */.Z)(args).concat([\n                                (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, value ? {\n                                    value: value\n                                } : {}), {\n                                    gasLimit: (0,utils/* calculateGasMargin */.yC)(estimatedGasLimit),\n                                    gasPrice: gasPrice\n                                })\n                            ])).then(function(response) {\n                                var ref, ref1, ref2, ref3;\n                                setLiquidityState({\n                                    attemptingTxn: false,\n                                    liquidityErrorMessage: undefined,\n                                    txHash: response.hash\n                                });\n                                addTransaction(response, {\n                                    summary: \"Add \".concat((ref = parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref === void 0 ? void 0 : ref.toSignificant(3), \" \").concat((ref1 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref1 === void 0 ? void 0 : ref1.symbol, \" and \").concat((ref2 = parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref2 === void 0 ? void 0 : ref2.toSignificant(3), \" \").concat((ref3 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref3 === void 0 ? void 0 : ref3.symbol),\n                                    type: \"add-liquidity\"\n                                });\n                            });\n                        }).catch(function(err) {\n                            if (err && err.code !== 4001) {\n                                (0,sentry/* logError */.H)(err);\n                                console.error(\"Add Liquidity failed\", err, args, value);\n                            }\n                            setLiquidityState({\n                                attemptingTxn: false,\n                                liquidityErrorMessage: err && err.code !== 4001 ? t(\"Add liquidity failed: %message%\", {\n                                    message: (0,transactionErrorToUserReadableMessage/* transactionErrorToUserReadableMessage */.e)(err, t)\n                                }) : undefined,\n                                txHash: undefined\n                            });\n                        });\n                    case 16:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return _onAdd.apply(this, arguments);\n    }\n    var ref47, ref48, ref49, ref50, ref51, ref52, ref53, ref54;\n    var pendingText = preferZapInstead ? t(\"Zapping %amountA% %symbolA% and %amountB% %symbolB%\", {\n        amountA: (ref47 = (ref3 = parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref3 === void 0 ? void 0 : ref3.toSignificant(6)) !== null && ref47 !== void 0 ? ref47 : \"0\",\n        symbolA: (ref48 = (ref4 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref4 === void 0 ? void 0 : ref4.symbol) !== null && ref48 !== void 0 ? ref48 : \"\",\n        amountB: (ref49 = (ref5 = parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref5 === void 0 ? void 0 : ref5.toSignificant(6)) !== null && ref49 !== void 0 ? ref49 : \"0\",\n        symbolB: (ref50 = (ref6 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref6 === void 0 ? void 0 : ref6.symbol) !== null && ref50 !== void 0 ? ref50 : \"\"\n    }) : t(\"Supplying %amountA% %symbolA% and %amountB% %symbolB%\", {\n        amountA: (ref51 = (ref7 = parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref7 === void 0 ? void 0 : ref7.toSignificant(6)) !== null && ref51 !== void 0 ? ref51 : \"\",\n        symbolA: (ref52 = (ref8 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref8 === void 0 ? void 0 : ref8.symbol) !== null && ref52 !== void 0 ? ref52 : \"\",\n        amountB: (ref53 = (ref9 = parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref9 === void 0 ? void 0 : ref9.toSignificant(6)) !== null && ref53 !== void 0 ? ref53 : \"\",\n        symbolB: (ref54 = (ref10 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref10 === void 0 ? void 0 : ref10.symbol) !== null && ref54 !== void 0 ? ref54 : \"\"\n    });\n    var handleDismissConfirmation = (0,react.useCallback)(function() {\n        // if there was a tx hash, we want to clear the input\n        if (txHash) {\n            onFieldAInput(\"\");\n        }\n    }, [\n        onFieldAInput,\n        txHash\n    ]);\n    var addIsUnsupported = (0,Trades/* useIsTransactionUnsupported */.mP)(currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_A, currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_B);\n    var addIsWarning = (0,Trades/* useIsTransactionWarning */.uK)(currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_A, currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_B);\n    var zapContract = (0,useContract/* useZapContract */.n9)(true);\n    var ref55 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(components_ConfirmAddLiquidityModal, {\n        title: noLiquidity ? t(\"You are creating a pool\") : t(\"You will receive\"),\n        customOnDismiss: handleDismissConfirmation,\n        attemptingTxn: attemptingTxn,\n        hash: txHash,\n        pendingText: pendingText,\n        currencyToAdd: pair === null || pair === void 0 ? void 0 : pair.liquidityToken,\n        allowedSlippage: allowedSlippage,\n        onAdd: onAdd,\n        parsedAmounts: parsedAmounts,\n        currencies: currencies,\n        liquidityErrorMessage: liquidityErrorMessage,\n        price: price,\n        noLiquidity: noLiquidity,\n        poolTokenPercentage: poolTokenPercentage,\n        liquidityMinted: liquidityMinted\n    }), true, true, \"addLiquidityModal\"), 1), onPresentAddLiquidityModal = ref55[0];\n    function onZapIn() {\n        return _onZapIn.apply(this, arguments);\n    }\n    function _onZapIn() {\n        _onZapIn = (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee() {\n            var method, args, value, summary, minAmountOut, ref, ref1, ref2, ref3, maxAmountIn, tokenBIsBNB, ref4, ref5;\n            return runtime_default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        if (!(!canZap || !parsedAmounts || !zapIn.zapInEstimated || !library || !chainId)) {\n                            _ctx.next = 2;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\");\n                    case 2:\n                        ;\n                        ;\n                        ;\n                        ;\n                        minAmountOut = zapIn.zapInEstimated.swapAmountOut.mul(10000 - allowedSlippage).div(10000);\n                        if (rebalancing) {\n                            ;\n                            maxAmountIn = zapIn.zapInEstimated.swapAmountIn.mul(10000 + allowedSlippage).div(10000);\n                            summary = \"Zap \".concat((ref = parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref === void 0 ? void 0 : ref.toSignificant(3), \" \").concat((ref1 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref1 === void 0 ? void 0 : ref1.symbol, \" and \").concat((ref2 = parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref2 === void 0 ? void 0 : ref2.toSignificant(3), \" \").concat((ref3 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref3 === void 0 ? void 0 : ref3.symbol);\n                            if (currencyA === src/* ETHER */.c0 || currencyB === src/* ETHER */.c0) {\n                                tokenBIsBNB = currencyB === src/* ETHER */.c0;\n                                method = \"zapInBNBRebalancing\";\n                                args = [\n                                    (0,wrappedCurrency/* wrappedCurrency */.pu)(currencies[tokenBIsBNB ? actions/* Field.CURRENCY_A */.gN.CURRENCY_A : actions/* Field.CURRENCY_B */.gN.CURRENCY_B], chainId).address,\n                                    parsedAmounts[tokenBIsBNB ? actions/* Field.CURRENCY_A */.gN.CURRENCY_A : actions/* Field.CURRENCY_B */.gN.CURRENCY_B].raw.toString(),\n                                    pair.liquidityToken.address,\n                                    maxAmountIn,\n                                    minAmountOut,\n                                    zapIn.zapInEstimated.isToken0Sold && !tokenBIsBNB\n                                ];\n                                value = parsedAmounts[tokenBIsBNB ? actions/* Field.CURRENCY_B */.gN.CURRENCY_B : actions/* Field.CURRENCY_A */.gN.CURRENCY_A].raw.toString();\n                            } else {\n                                method = \"zapInTokenRebalancing\";\n                                args = [\n                                    (0,wrappedCurrency/* wrappedCurrency */.pu)(currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A], chainId).address,\n                                    (0,wrappedCurrency/* wrappedCurrency */.pu)(currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B], chainId).address,\n                                    parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A].raw.toString(),\n                                    parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B].raw.toString(),\n                                    pair.liquidityToken.address,\n                                    maxAmountIn,\n                                    minAmountOut,\n                                    zapIn.zapInEstimated.isToken0Sold\n                                ];\n                            }\n                        } else if (currencies[zapIn.swapTokenField] === src/* ETHER */.c0) {\n                            ;\n                            method = \"zapInBNB\";\n                            args = [\n                                pair.liquidityToken.address,\n                                minAmountOut\n                            ];\n                            summary = \"Zap in \".concat((ref4 = parsedAmounts[zapIn.swapTokenField]) === null || ref4 === void 0 ? void 0 : ref4.toSignificant(3), \" MOVO for \").concat((0,getLpSymbol/* getLPSymbol */.z)(pair.token0.symbol, pair.token1.symbol));\n                            value = parsedAmounts[zapIn.swapTokenField].raw.toString();\n                        } else {\n                            ;\n                            method = \"zapInToken\";\n                            args = [\n                                (0,wrappedCurrency/* wrappedCurrency */.pu)(currencies[zapIn.swapTokenField], chainId).address,\n                                parsedAmounts[zapIn.swapTokenField].raw.toString(),\n                                pair.liquidityToken.address,\n                                minAmountOut, \n                            ];\n                            summary = \"Zap in \".concat((ref5 = parsedAmounts[zapIn.swapTokenField]) === null || ref5 === void 0 ? void 0 : ref5.toSignificant(3), \" \").concat(currencies[zapIn.swapTokenField].symbol, \" for \").concat((0,getLpSymbol/* getLPSymbol */.z)(pair.token0.symbol, pair.token1.symbol));\n                        }\n                        setLiquidityState({\n                            attemptingTxn: true,\n                            liquidityErrorMessage: undefined,\n                            txHash: undefined\n                        });\n                        (0,calls/* callWithEstimateGas */.Zj)(zapContract, method, args, value ? {\n                            value: value,\n                            gasPrice: gasPrice\n                        } : {\n                            gasPrice: gasPrice\n                        }).then(function(response) {\n                            setLiquidityState({\n                                attemptingTxn: false,\n                                liquidityErrorMessage: undefined,\n                                txHash: response.hash\n                            });\n                            addTransaction(response, {\n                                summary: summary,\n                                type: \"add-liquidity\"\n                            });\n                        }).catch(function(err) {\n                            if (err && err.code !== 4001) {\n                                (0,sentry/* logError */.H)(err);\n                                console.error(\"Add Liquidity failed\", err, args, value);\n                            }\n                            setLiquidityState({\n                                attemptingTxn: false,\n                                liquidityErrorMessage: err && err.code !== 4001 ? \"Add Liquidity failed: \".concat(err.message) : undefined,\n                                txHash: undefined\n                            });\n                        });\n                    case 10:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return _onZapIn.apply(this, arguments);\n    }\n    var ref56 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(components_ConfirmZapInModal, {\n        title: t(\"You will receive\"),\n        customOnDismiss: handleDismissConfirmation,\n        attemptingTxn: attemptingTxn,\n        hash: txHash,\n        pendingText: pendingText,\n        pair: pair,\n        allowedSlippage: allowedSlippage,\n        onAdd: onZapIn,\n        parsedAmounts: parsedAmounts,\n        currencies: currencies,\n        liquidityErrorMessage: liquidityErrorMessage,\n        price: price,\n        poolTokenPercentage: zapIn.poolTokenPercentage,\n        liquidityMinted: zapIn.liquidityMinted,\n        zapSwapTokenField: zapIn.swapTokenField,\n        zapSwapOutTokenField: zapIn.swapOutTokenField,\n        zapInEstimated: zapIn.zapInEstimated,\n        rebalancing: rebalancing,\n        zapMode: zapModeStatus,\n        toggleZapMode: setTemporarilyZapMode\n    }), true, true, \"zapInModal\"), 1), onPresentZapInModal = ref56[0];\n    var handleEnableZap = function() {\n        if (!zapMode) {\n            setTemporarilyZapMode(!zapMode);\n        }\n    };\n    var isValid = !error;\n    var errorText = error;\n    if (preferZapInstead) {\n        isValid = !error && !zapIn.error;\n        errorText = error !== null && error !== void 0 ? error : zapIn.error;\n    } else {\n        isValid = !error && !addError;\n        errorText = error !== null && error !== void 0 ? error : addError;\n    }\n    var buttonDisabled = !isValid || (zapIn.parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A] || !preferZapInstead && zapTokenCheckedA) && approvalA !== useApproveCallback/* ApprovalState.APPROVED */.UK.APPROVED || (zapIn.parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B] || !preferZapInstead && zapTokenCheckedB) && approvalB !== useApproveCallback/* ApprovalState.APPROVED */.UK.APPROVED || zapIn.priceSeverity > 3 && preferZapInstead;\n    var showFieldAApproval = (zapTokenCheckedA || !preferZapInstead) && (approvalA === useApproveCallback/* ApprovalState.NOT_APPROVED */.UK.NOT_APPROVED || approvalA === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING);\n    var showFieldBApproval = (zapTokenCheckedB || !preferZapInstead) && (approvalB === useApproveCallback/* ApprovalState.NOT_APPROVED */.UK.NOT_APPROVED || approvalB === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING);\n    var shouldShowApprovalGroup = (showFieldAApproval || showFieldBApproval) && isValid;\n    var oneCurrencyIsWPLS = Boolean(chainId && (currencyA && (0,src/* currencyEquals */.KA)(currencyA, src/* WNATIVE */.FX[chainId]) || currencyB && (0,src/* currencyEquals */.KA)(currencyB, src/* WNATIVE */.FX[chainId])));\n    var noAnyInputAmount = !parsedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A] && !parsedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B];\n    var showAddLiquidity = !!currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A] && !!currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B] && steps === Steps.Add || !canZap;\n    var showZapWarning = preferZapInstead && !noAnyInputAmount && (!rebalancing && !(!zapTokenCheckedA && !zapTokenCheckedB) || rebalancing && zapIn.priceSeverity > 3);\n    var showReduceZapTokenButton = preferZapInstead && (zapIn.priceSeverity > 3 || zapIn.zapInEstimatedError) && maxAmounts[zapIn.swapTokenField];\n    var showRebalancingConvert = !showZapWarning && !noAnyInputAmount && !showReduceZapTokenButton && preferZapInstead && zapIn.isDependentAmountGreaterThanMaxAmount && rebalancing;\n    var showZapIsAvailable = !zapMode && !showZapWarning && !noAnyInputAmount && (!zapTokenCheckedA || !zapTokenCheckedB) && !noLiquidity && !(pair && src/* JSBI.lessThan */.QA.lessThan(pair.reserve0.raw, src/* MINIMUM_LIQUIDITY */.Xh) || pair && src/* JSBI.lessThan */.QA.lessThan(pair.reserve1.raw, src/* MINIMUM_LIQUIDITY */.Xh));\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Page/* default */.Z, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(App/* AppBody */.j, {\n                children: [\n                    !showAddLiquidity && /*#__PURE__*/ (0,jsx_runtime.jsx)(ChoosePair, {\n                        error: error,\n                        currencyA: currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A],\n                        currencyB: currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B],\n                        onNext: function() {\n                            return setSteps(Steps.Add);\n                        }\n                    }),\n                    showAddLiquidity && /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(App/* AppHeader */.t, {\n                                title: ((ref11 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref11 === void 0 ? void 0 : ref11.symbol) && ((ref12 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref12 === void 0 ? void 0 : ref12.symbol) ? \"\".concat((0,getLpSymbol/* getLPSymbol */.z)(currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A].symbol, currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B].symbol)) : t(\"Add Liquidity\"),\n                                subtitle: t(\"Receive LP tokens and earn 0.17% trading fees\"),\n                                helper: t(\"Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.\"),\n                                backTo: canZap ? function() {\n                                    return setSteps(Steps.Choose);\n                                } : \"/liquidity\"\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(CardBody/* default */.Z, {\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                                    gap: \"20px\",\n                                    children: [\n                                        noLiquidity && /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* ColumnCenter */.lg, {\n                                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Message/* default */.Z, {\n                                                variant: \"warning\",\n                                                children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"div\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                            bold: true,\n                                                            mb: \"8px\",\n                                                            children: t(\"You are the first liquidity provider.\")\n                                                        }),\n                                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                            mb: \"8px\",\n                                                            children: t(\"The ratio of tokens you add will set the price of this pool.\")\n                                                        }),\n                                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                            children: t(\"Once you are happy with the rate click supply to review.\")\n                                                        })\n                                                    ]\n                                                })\n                                            })\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(CurrencyInputPanel/* default */.Z, {\n                                            disableCurrencySelect: canZap,\n                                            showBUSD: true,\n                                            onInputBlur: zapIn.onInputBlurOnce,\n                                            error: zapIn.priceSeverity > 3 && zapIn.swapTokenField === actions/* Field.CURRENCY_A */.gN.CURRENCY_A,\n                                            disabled: canZap && !zapTokenCheckedA,\n                                            beforeButton: canZap && /*#__PURE__*/ (0,jsx_runtime.jsx)(ZapCheckbox/* ZapCheckbox */.y, {\n                                                disabled: currencyBalances === null || currencyBalances === void 0 ? void 0 : (ref13 = currencyBalances[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref13 === void 0 ? void 0 : ref13.equalTo(0),\n                                                checked: zapTokenCheckedA,\n                                                onChange: function(e) {\n                                                    setZapTokenToggleA(e.target.checked);\n                                                }\n                                            }),\n                                            onCurrencySelect: handleCurrencyASelect,\n                                            zapStyle: canZap ? \"zap\" : \"noZap\",\n                                            value: formattedAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A],\n                                            onUserInput: onFieldAInput,\n                                            onMax: function() {\n                                                var ref;\n                                                var ref1;\n                                                onFieldAInput((ref1 = (ref = maxAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref === void 0 ? void 0 : ref.toExact()) !== null && ref1 !== void 0 ? ref1 : \"\");\n                                            },\n                                            showMaxButton: !atMaxAmounts[actions/* Field.CURRENCY_A */.gN.CURRENCY_A],\n                                            currency: currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A],\n                                            id: \"add-liquidity-input-tokena\",\n                                            showCommonBases: true\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* ColumnCenter */.lg, {\n                                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Add/* default */.Z, {\n                                                width: \"16px\"\n                                            })\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(CurrencyInputPanel/* default */.Z, {\n                                            showBUSD: true,\n                                            onInputBlur: zapIn.onInputBlurOnce,\n                                            disabled: canZap && !zapTokenCheckedB,\n                                            error: zapIn.priceSeverity > 3 && zapIn.swapTokenField === actions/* Field.CURRENCY_B */.gN.CURRENCY_B,\n                                            beforeButton: canZap && /*#__PURE__*/ (0,jsx_runtime.jsx)(ZapCheckbox/* ZapCheckbox */.y, {\n                                                disabled: currencyBalances === null || currencyBalances === void 0 ? void 0 : (ref14 = currencyBalances[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref14 === void 0 ? void 0 : ref14.equalTo(0),\n                                                checked: zapTokenCheckedB,\n                                                onChange: function(e) {\n                                                    setZapTokenToggleB(e.target.checked);\n                                                }\n                                            }),\n                                            onCurrencySelect: handleCurrencyBSelect,\n                                            disableCurrencySelect: canZap,\n                                            zapStyle: canZap ? \"zap\" : \"noZap\",\n                                            value: formattedAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B],\n                                            onUserInput: onFieldBInput,\n                                            onMax: function() {\n                                                var ref;\n                                                var ref1;\n                                                onFieldBInput((ref1 = (ref = maxAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref === void 0 ? void 0 : ref.toExact()) !== null && ref1 !== void 0 ? ref1 : \"\");\n                                            },\n                                            showMaxButton: !atMaxAmounts[actions/* Field.CURRENCY_B */.gN.CURRENCY_B],\n                                            currency: currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B],\n                                            id: \"add-liquidity-input-tokenb\"\n                                        }),\n                                        showZapWarning && /*#__PURE__*/ (0,jsx_runtime.jsx)(Message/* default */.Z, {\n                                            variant: zapIn.priceSeverity > 3 ? \"danger\" : \"warning\",\n                                            children: zapIn.priceSeverity > 3 ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(Message/* MessageText */.Y, {\n                                                children: [\n                                                    t(\"Price Impact Too Hight.\"),\n                                                    \" \",\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(\"strong\", {\n                                                        children: t(\"Reduce amount of %token% to maximum limit\", {\n                                                            token: (ref15 = currencies[zapIn.swapTokenField]) === null || ref15 === void 0 ? void 0 : ref15.symbol\n                                                        })\n                                                    })\n                                                ]\n                                            }) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(Message/* MessageText */.Y, {\n                                                children: [\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(\"strong\", {\n                                                        children: t(\"No %token% input.\", {\n                                                            token: (ref16 = currencies[zapIn.swapOutTokenField]) === null || ref16 === void 0 ? void 0 : ref16.symbol\n                                                        })\n                                                    }),\n                                                    \" \",\n                                                    t(\"Some of your %token0% will be converted to %token1%.\", {\n                                                        token0: (ref17 = currencies[zapIn.swapTokenField]) === null || ref17 === void 0 ? void 0 : ref17.symbol,\n                                                        token1: (ref18 = currencies[zapIn.swapOutTokenField]) === null || ref18 === void 0 ? void 0 : ref18.symbol\n                                                    })\n                                                ]\n                                            })\n                                        }),\n                                        showReduceZapTokenButton && /*#__PURE__*/ (0,jsx_runtime.jsx)(Row/* RowFixed */.DA, {\n                                            style: {\n                                                margin: \"auto\"\n                                            },\n                                            onClick: function() {\n                                                return zapIn.convertToMaxZappable();\n                                            },\n                                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                                variant: \"secondary\",\n                                                scale: \"sm\",\n                                                children: t(\"Reduce %token%\", {\n                                                    token: (ref19 = currencies[zapIn.swapTokenField]) === null || ref19 === void 0 ? void 0 : ref19.symbol\n                                                })\n                                            })\n                                        }),\n                                        showZapIsAvailable && /*#__PURE__*/ (0,jsx_runtime.jsx)(Message/* default */.Z, {\n                                            variant: \"warning\",\n                                            children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Message/* MessageText */.Y, {\n                                                children: [\n                                                    t(\"Zap allows you to add liquidity with only 1 single token. Click\"),\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                                        p: \"0 4px\",\n                                                        scale: \"sm\",\n                                                        variant: \"text\",\n                                                        height: \"auto\",\n                                                        onClick: handleEnableZap,\n                                                        children: t(\"here\")\n                                                    }),\n                                                    t(\"to try.\")\n                                                ]\n                                            })\n                                        }),\n                                        showRebalancingConvert && /*#__PURE__*/ (0,jsx_runtime.jsx)(Message/* default */.Z, {\n                                            variant: \"warning\",\n                                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* AutoColumn */.Tz, {\n                                                children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Message/* MessageText */.Y, {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"strong\", {\n                                                            children: t(\"Not enough %token%.\", {\n                                                                token: (ref20 = currencies[zapIn.swapOutTokenField]) === null || ref20 === void 0 ? void 0 : ref20.symbol\n                                                            })\n                                                        }),\n                                                        \" \",\n                                                        zapIn.gasOverhead ? t(\"Some of your %token0% will be converted to %token1% before adding liquidity, but this may cause higher gas fees.\", {\n                                                            token0: (ref21 = currencies[zapIn.swapTokenField]) === null || ref21 === void 0 ? void 0 : ref21.symbol,\n                                                            token1: (ref22 = currencies[zapIn.swapOutTokenField]) === null || ref22 === void 0 ? void 0 : ref22.symbol\n                                                        }) : t(\"Some of your %token0% will be converted to %token1%.\", {\n                                                            token0: (ref23 = currencies[zapIn.swapTokenField]) === null || ref23 === void 0 ? void 0 : ref23.symbol,\n                                                            token1: (ref24 = currencies[zapIn.swapOutTokenField]) === null || ref24 === void 0 ? void 0 : ref24.symbol\n                                                        })\n                                                    ]\n                                                })\n                                            })\n                                        }),\n                                        showRebalancingConvert && /*#__PURE__*/ (0,jsx_runtime.jsx)(Row/* RowFixed */.DA, {\n                                            style: {\n                                                margin: \"auto\"\n                                            },\n                                            onClick: function() {\n                                                if (dependentField === actions/* Field.CURRENCY_A */.gN.CURRENCY_A) {\n                                                    var ref;\n                                                    var ref1;\n                                                    onFieldAInput((ref1 = (ref = maxAmounts[dependentField]) === null || ref === void 0 ? void 0 : ref.toExact()) !== null && ref1 !== void 0 ? ref1 : \"\");\n                                                } else {\n                                                    var ref2;\n                                                    var ref3;\n                                                    onFieldBInput((ref3 = (ref2 = maxAmounts[dependentField]) === null || ref2 === void 0 ? void 0 : ref2.toExact()) !== null && ref3 !== void 0 ? ref3 : \"\");\n                                                }\n                                            },\n                                            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                                variant: \"secondary\",\n                                                scale: \"sm\",\n                                                children: t(\"Don\\u2019t convert\")\n                                            })\n                                        }),\n                                        currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A] && currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B] && pairState !== usePairs/* PairState.INVALID */._G.INVALID && /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n                                            children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Card/* LightCard */.hl, {\n                                                padding: \"0px\",\n                                                borderRadius: \"20px\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Row/* RowBetween */.m0, {\n                                                        padding: \"1rem\",\n                                                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                            fontSize: \"14px\",\n                                                            children: noLiquidity ? t(\"Initial prices and pool share\") : t(\"Prices and pool share\")\n                                                        })\n                                                    }),\n                                                    \" \",\n                                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Card/* LightCard */.hl, {\n                                                        padding: \"1rem\",\n                                                        borderRadius: \"20px\",\n                                                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(AddLiquidity_PoolPriceBar, {\n                                                            currencies: currencies,\n                                                            poolTokenPercentage: preferZapInstead ? zapIn.poolTokenPercentage : poolTokenPercentage,\n                                                            noLiquidity: noLiquidity,\n                                                            price: price\n                                                        })\n                                                    })\n                                                ]\n                                            })\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                                            children: [\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                    bold: true,\n                                                    fontSize: \"12px\",\n                                                    color: \"secondary\",\n                                                    children: t(\"Slippage Tolerance\")\n                                                }),\n                                                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                                                    bold: true,\n                                                    color: \"primary\",\n                                                    children: [\n                                                        allowedSlippage / 100,\n                                                        \"%\"\n                                                    ]\n                                                })\n                                            ]\n                                        }),\n                                        pair && poolData && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                                            children: [\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(TooltipText/* default */.Z, {\n                                                    ref: targetRef,\n                                                    bold: true,\n                                                    fontSize: \"12px\",\n                                                    color: \"secondary\",\n                                                    children: t(\"LP reward APR\")\n                                                }),\n                                                tooltipVisible && tooltip,\n                                                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                                                    bold: true,\n                                                    color: \"primary\",\n                                                    children: [\n                                                        (0,formatInfoNumbers/* formatAmount */.d)(poolData.lpApr7d),\n                                                        \"%\"\n                                                    ]\n                                                })\n                                            ]\n                                        }),\n                                        addIsUnsupported || addIsWarning ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                            disabled: true,\n                                            mb: \"4px\",\n                                            children: t(\"Unsupported Asset\")\n                                        }) : !account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(ConnectWalletButton/* default */.Z, {}) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(Column/* AutoColumn */.Tz, {\n                                            gap: \"md\",\n                                            children: [\n                                                shouldShowApprovalGroup && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Row/* RowBetween */.m0, {\n                                                    style: {\n                                                        gap: \"8px\"\n                                                    },\n                                                    children: [\n                                                        showFieldAApproval && /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                                            onClick: approveACallback,\n                                                            disabled: approvalA === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING,\n                                                            width: \"100%\",\n                                                            children: approvalA === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Dots/* default */.Z, {\n                                                                children: t(\"Enabling %asset%\", {\n                                                                    asset: (ref25 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref25 === void 0 ? void 0 : ref25.symbol\n                                                                })\n                                                            }) : t(\"Enable %asset%\", {\n                                                                asset: (ref26 = currencies[actions/* Field.CURRENCY_A */.gN.CURRENCY_A]) === null || ref26 === void 0 ? void 0 : ref26.symbol\n                                                            })\n                                                        }),\n                                                        showFieldBApproval && /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                                            onClick: approveBCallback,\n                                                            disabled: approvalB === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING,\n                                                            width: \"100%\",\n                                                            children: approvalB === useApproveCallback/* ApprovalState.PENDING */.UK.PENDING ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Dots/* default */.Z, {\n                                                                children: t(\"Enabling %asset%\", {\n                                                                    asset: (ref27 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref27 === void 0 ? void 0 : ref27.symbol\n                                                                })\n                                                            }) : t(\"Enable %asset%\", {\n                                                                asset: (ref28 = currencies[actions/* Field.CURRENCY_B */.gN.CURRENCY_B]) === null || ref28 === void 0 ? void 0 : ref28.symbol\n                                                            })\n                                                        })\n                                                    ]\n                                                }),\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                                    isLoading: preferZapInstead && zapInEstimating,\n                                                    variant: !isValid || zapIn.priceSeverity > 2 ? \"danger\" : \"primary\",\n                                                    onClick: function() {\n                                                        if (preferZapInstead) {\n                                                            setLiquidityState({\n                                                                attemptingTxn: false,\n                                                                liquidityErrorMessage: undefined,\n                                                                txHash: undefined\n                                                            });\n                                                            onPresentZapInModal();\n                                                            return;\n                                                        }\n                                                        if (expertMode) {\n                                                            onAdd();\n                                                        } else {\n                                                            setLiquidityState({\n                                                                attemptingTxn: false,\n                                                                liquidityErrorMessage: undefined,\n                                                                txHash: undefined\n                                                            });\n                                                            onPresentAddLiquidityModal();\n                                                        }\n                                                    },\n                                                    disabled: buttonDisabled,\n                                                    children: errorText || t(\"Supply\")\n                                                })\n                                            ]\n                                        })\n                                    ]\n                                })\n                            })\n                        ]\n                    })\n                ]\n            }),\n            !(addIsUnsupported || addIsWarning) ? pair && !noLiquidity && pairState !== usePairs/* PairState.INVALID */._G.INVALID ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Column/* AutoColumn */.Tz, {\n                style: {\n                    minWidth: \"20rem\",\n                    width: \"100%\",\n                    maxWidth: \"400px\",\n                    marginTop: \"1rem\"\n                },\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(PositionCard/* MinimalPositionCard */.W, {\n                    showUnwrapped: oneCurrencyIsWPLS,\n                    pair: pair\n                })\n            }) : null : /*#__PURE__*/ (0,jsx_runtime.jsx)(UnsupportedCurrencyFooter/* default */.Z, {\n                currencies: [\n                    currencies.CURRENCY_A,\n                    currencies.CURRENCY_B\n                ]\n            })\n        ]\n    });\n};\n\n;// CONCATENATED MODULE: ./src/pages/add/[[...currency]].tsx\n\nvar __N_SSG = true;\n/* harmony default export */ var _currency_ = (AddLiquidity);\n\n\n/***/ }),\n\n/***/ 16519:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Zj\": function() { return /* reexport */ callWithEstimateGas; },\n  \"yp\": function() { return /* reexport */ getActivePools; },\n  \"sA\": function() { return /* reexport */ harvestFarm; },\n  \"AQ\": function() { return /* reexport */ stakeFarm; },\n  \"dU\": function() { return /* reexport */ unstakeFarm; }\n});\n\n// UNUSED EXPORTS: estimateGas\n\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_async_to_generator.mjs\nvar _async_to_generator = __webpack_require__(47568);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_object_spread.mjs\nvar _object_spread = __webpack_require__(26042);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_to_consumable_array.mjs + 2 modules\nvar _to_consumable_array = __webpack_require__(29815);\n// EXTERNAL MODULE: ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\nvar runtime = __webpack_require__(34051);\nvar runtime_default = /*#__PURE__*/__webpack_require__.n(runtime);\n// EXTERNAL MODULE: ./src/utils/index.ts\nvar utils = __webpack_require__(93293);\n;// CONCATENATED MODULE: ./src/utils/calls/estimateGas.ts\n\n\n\n\n\n/**\r\n * Estimate the gas needed to call a function, and add a 10% margin\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\r\n * @param args An array of arguments to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */ var estimateGas = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee(contract, methodName, methodArgs) {\n        var overrides, gasMarginPer10000, _estimateGas, rawGasEstimation, gasEstimation, _args = arguments;\n        return runtime_default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    overrides = _args.length > 3 && _args[3] !== void 0 ? _args[3] : {}, gasMarginPer10000 = _args.length > 4 ? _args[4] : void 0;\n                    ;\n                    if (contract[methodName]) {\n                        _ctx.next = 4;\n                        break;\n                    }\n                    throw new Error(\"Method \".concat(methodName, \" doesn't exist on \").concat(contract.address));\n                case 4:\n                    _ctx.next = 6;\n                    return (_estimateGas = contract.estimateGas)[methodName].apply(_estimateGas, (0,_to_consumable_array/* default */.Z)(methodArgs).concat([\n                        overrides\n                    ]));\n                case 6:\n                    rawGasEstimation = _ctx.sent;\n                    gasEstimation = (0,utils/* calculateGasMargin */.yC)(rawGasEstimation, gasMarginPer10000);\n                    return _ctx.abrupt(\"return\", gasEstimation);\n                case 9:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function estimateGas(contract, methodName, methodArgs) {\n        return _ref.apply(this, arguments);\n    };\n}();\n/**\r\n * Perform a contract call with a gas value returned from estimateGas\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param methodArgs An array of arguments to pass to the method\r\n * @param overrides An overrides object to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */ var callWithEstimateGas = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee(contract, methodName, methodArgs) {\n        var overrides, gasMarginPer10000, _contract, gasEstimation, tx, _args = arguments;\n        return runtime_default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    overrides = _args.length > 3 && _args[3] !== void 0 ? _args[3] : {}, gasMarginPer10000 = _args.length > 4 && _args[4] !== void 0 ? _args[4] : 1000;\n                    ;\n                    _ctx.next = 4;\n                    return estimateGas(contract, methodName, methodArgs, overrides, gasMarginPer10000);\n                case 4:\n                    gasEstimation = _ctx.sent;\n                    _ctx.next = 7;\n                    return (_contract = contract)[methodName].apply(_contract, (0,_to_consumable_array/* default */.Z)(methodArgs).concat([\n                        (0,_object_spread/* default */.Z)({\n                            gasLimit: gasEstimation\n                        }, overrides)\n                    ]));\n                case 7:\n                    tx = _ctx.sent;\n                    return _ctx.abrupt(\"return\", tx);\n                case 9:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function callWithEstimateGas(contract, methodName, methodArgs) {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n// EXTERNAL MODULE: ./node_modules/bignumber.js/bignumber.js\nvar bignumber = __webpack_require__(44431);\nvar bignumber_default = /*#__PURE__*/__webpack_require__.n(bignumber);\n// EXTERNAL MODULE: ./src/config/index.ts + 1 modules\nvar config = __webpack_require__(37519);\n// EXTERNAL MODULE: ./src/utils/getGasPrice.ts\nvar getGasPrice = __webpack_require__(76582);\n;// CONCATENATED MODULE: ./src/utils/calls/farms.ts\n\n\n\n\n\nvar options = {\n    gasLimit: config/* DEFAULT_GAS_LIMIT */.QL\n};\nvar stakeFarm = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee(masterChefContract, pid, amount) {\n        var gasPrice, value, ref;\n        return runtime_default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    gasPrice = (0,getGasPrice/* default */.Z)();\n                    value = new (bignumber_default())(amount).times(config/* DEFAULT_TOKEN_DECIMAL */.o3).toString();\n                    ref = \"0x0000000000000000000000000000000000000000\";\n                    return _ctx.abrupt(\"return\", masterChefContract.deposit(pid, value));\n                case 4:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function stakeFarm(masterChefContract, pid, amount) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar unstakeFarm = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee(masterChefContract, pid, amount) {\n        var gasPrice, value;\n        return runtime_default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    gasPrice = (0,getGasPrice/* default */.Z)();\n                    value = new (bignumber_default())(amount).times(config/* DEFAULT_TOKEN_DECIMAL */.o3).toString();\n                    return _ctx.abrupt(\"return\", masterChefContract.withdraw(pid, value));\n                case 3:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    // , { ...options, gasPrice }\n    }));\n    return function unstakeFarm(masterChefContract, pid, amount) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar harvestFarm = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee(masterChefContract, pid) {\n        var gasPrice, ref;\n        return runtime_default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    gasPrice = (0,getGasPrice/* default */.Z)();\n                    ref = \"0x0000000000000000000000000000000000000000\";\n                    return _ctx.abrupt(\"return\", masterChefContract.deposit(pid, \"0\"));\n                case 3:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    // , { ...options, gasPrice }\n    }));\n    return function harvestFarm(masterChefContract, pid) {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(10253);\n// EXTERNAL MODULE: ./src/config/constants/pools.tsx\nvar pools = __webpack_require__(9070);\n// EXTERNAL MODULE: ./src/config/abi/sousChefV2.json\nvar sousChefV2 = __webpack_require__(9022);\n// EXTERNAL MODULE: ./src/utils/multicall.ts\nvar multicall = __webpack_require__(41144);\n// EXTERNAL MODULE: ./src/utils/providers.ts + 1 modules\nvar providers = __webpack_require__(65684);\n// EXTERNAL MODULE: ./src/utils/addressHelpers.ts\nvar addressHelpers = __webpack_require__(96273);\n;// CONCATENATED MODULE: ./src/utils/calls/pools.ts\n\n\n\n\n/* eslint-disable import/prefer-default-export */ \n\n\n\n\n\n/**\r\n * Returns the total number of pools that were active at a given block\r\n */ var getActivePools = function() {\n    var _ref = (0,_async_to_generator/* default */.Z)(runtime_default().mark(function _callee(block) {\n        var eligiblePools, blockNumber, startBlockCalls, endBlockCalls, ref, startBlocks, endBlocks;\n        return runtime_default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    eligiblePools = pools/* default.filter */.ZP.filter(function(pool) {\n                        return pool.sousId !== 0;\n                    }).filter(function(pool) {\n                        return pool.isFinished === false || pool.isFinished === undefined;\n                    });\n                    _ctx.t0 = block;\n                    if (_ctx.t0) {\n                        _ctx.next = 6;\n                        break;\n                    }\n                    _ctx.next = 5;\n                    return providers/* movoRpcProvider.getBlockNumber */.U6.getBlockNumber();\n                case 5:\n                    _ctx.t0 = _ctx.sent;\n                case 6:\n                    blockNumber = _ctx.t0;\n                    startBlockCalls = eligiblePools.map(function(param) {\n                        var contractAddress = param.contractAddress;\n                        return {\n                            address: (0,addressHelpers/* getAddress */.Kn)(contractAddress, 2049),\n                            name: \"startBlock\"\n                        };\n                    });\n                    endBlockCalls = eligiblePools.map(function(param) {\n                        var contractAddress = param.contractAddress;\n                        return {\n                            address: (0,addressHelpers/* getAddress */.Kn)(contractAddress, 2049),\n                            name: \"bonusEndBlock\"\n                        };\n                    });\n                    _ctx.t1 = _sliced_to_array/* default */.Z;\n                    _ctx.next = 12;\n                    return Promise.all([\n                        (0,multicall/* default */.Z)(sousChefV2, startBlockCalls),\n                        (0,multicall/* default */.Z)(sousChefV2, endBlockCalls), \n                    ]);\n                case 12:\n                    _ctx.t2 = _ctx.sent;\n                    ref = (0, _ctx.t1)(_ctx.t2, 2);\n                    startBlocks = ref[0];\n                    endBlocks = ref[1];\n                    return _ctx.abrupt(\"return\", eligiblePools.reduce(function(accum, poolCheck, index) {\n                        var startBlock = startBlocks[index] ? new (bignumber_default())(startBlocks[index]) : null;\n                        var endBlock = endBlocks[index] ? new (bignumber_default())(endBlocks[index]) : null;\n                        if (!startBlock || !endBlock) {\n                            return accum;\n                        }\n                        if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n                            return accum;\n                        }\n                        return (0,_to_consumable_array/* default */.Z)(accum).concat([\n                            poolCheck\n                        ]);\n                    }, []));\n                case 17:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function getActivePools(block) {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n;// CONCATENATED MODULE: ./src/utils/calls/index.ts\n\n\n\n\n\n/***/ }),\n\n/***/ 76582:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(54346);\n/* harmony import */ var state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(31318);\n/* harmony import */ var state_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45101);\n\n\n\n/**\r\n * @deprecated not recommend to get state out of redux hook\r\n * Function to return gasPrice outwith a react component\r\n */ var getGasPrice = function() {\n    var chainId = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .ChainId.MOVO */ .a_.MOVO;\n    var state = state__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"].getState */ .ZP.getState();\n    var userGas = state.user.gasPrice || state_types__WEBPACK_IMPORTED_MODULE_2__/* .GAS_PRICE_GWEI[\"default\"] */ .j4[\"default\"];\n    return chainId === _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .ChainId.MOVO */ .a_.MOVO ? userGas : state_types__WEBPACK_IMPORTED_MODULE_2__/* .GAS_PRICE_GWEI.testnet */ .j4.testnet;\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (getGasPrice);\n\n\n/***/ }),\n\n/***/ 63119:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"z\": function() { return /* binding */ getLPSymbol; }\n/* harmony export */ });\nvar getLPSymbol = function(token0Symbol, token1Symbol) {\n    if (token0Symbol === \"WMOVO\") {\n        return \"MOVO-\".concat(token1Symbol, \" LP\");\n    }\n    if (token1Symbol === \"WMOVO\") {\n        return \"\".concat(token0Symbol, \"-MOVO LP\");\n    }\n    return \"\".concat(token0Symbol, \"-\").concat(token1Symbol, \" LP\");\n};\n\n\n/***/ }),\n\n/***/ 45131:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"i\": function() { return /* binding */ maxAmountSpend; }\n/* harmony export */ });\n/* harmony import */ var _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(54346);\n/* harmony import */ var config_constants_exchange__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(19838);\n\n\n/**\r\n * Given some token amount, return the max that can be spent of it\r\n * @param currencyAmount to return max of\r\n */ function maxAmountSpend(currencyAmount) {\n    if (!currencyAmount) return undefined;\n    if (currencyAmount.currency === _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .ETHER */ .c0) {\n        if (_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.greaterThan */ .QA.greaterThan(currencyAmount.raw, config_constants_exchange__WEBPACK_IMPORTED_MODULE_1__/* .MIN_BNB */ .Uz)) {\n            return _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .CurrencyAmount.ether */ .ih.ether(_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .JSBI.subtract */ .QA.subtract(currencyAmount.raw, config_constants_exchange__WEBPACK_IMPORTED_MODULE_1__/* .MIN_BNB */ .Uz));\n        }\n        return _pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__/* .CurrencyAmount.ether */ .ih.ether(config_constants_exchange__WEBPACK_IMPORTED_MODULE_1__/* .BIG_INT_ZERO */ .iV);\n    }\n    return currencyAmount;\n}\n\n\n/***/ }),\n\n/***/ 42808:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"e\": function() { return /* binding */ transactionErrorToUserReadableMessage; }\n/* harmony export */ });\n/**\r\n * This is hacking out the revert reason from the ethers provider thrown error however it can.\r\n * This object seems to be undocumented by ethers.\r\n * @param error an error from the ethers provider\r\n * @param t Translation function\r\n */ function transactionErrorToUserReadableMessage(error, t) {\n    var reason;\n    while(error){\n        var ref, ref1;\n        var _reason, ref2, ref3;\n        reason = (ref3 = (ref2 = (_reason = error.reason) !== null && _reason !== void 0 ? _reason : (ref = error.data) === null || ref === void 0 ? void 0 : ref.message) !== null && ref2 !== void 0 ? ref2 : error.message) !== null && ref3 !== void 0 ? ref3 : reason;\n        var _error;\n        // eslint-disable-next-line no-param-reassign\n        error = (_error = error.error) !== null && _error !== void 0 ? _error : (ref1 = error.data) === null || ref1 === void 0 ? void 0 : ref1.originalError;\n    }\n    if ((reason === null || reason === void 0 ? void 0 : reason.indexOf(\"execution reverted: \")) === 0) reason = reason.substring(\"execution reverted: \".length);\n    switch(reason){\n        case \"PancakeRouter: EXPIRED\":\n            return t(\"The transaction could not be sent because the deadline has passed. Please check that your transaction deadline is not too low.\");\n        case \"PancakeRouter: INSUFFICIENT_OUTPUT_AMOUNT\":\n        case \"PancakeRouter: EXCESSIVE_INPUT_AMOUNT\":\n        case \"PancakeRouter: INSUFFICIENT_A_AMOUNT\":\n        case \"PancakeRouter: INSUFFICIENT_B_AMOUNT\":\n            return t(\"This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.\");\n        case \"TransferHelper: TRANSFER_FROM_FAILED\":\n            return t(\"The input token cannot be transferred. There may be an issue with the input token.\");\n        case \"Pancake: TRANSFER_FAILED\":\n            return t(\"The output token cannot be transferred. There may be an issue with the output token.\");\n        default:\n            if ((reason === null || reason === void 0 ? void 0 : reason.indexOf(\"undefined is not an object\")) !== -1) {\n                console.error(error, reason);\n                return t(\"An error occurred when trying to execute this operation. You may need to increase your slippage tolerance. If that does not work, there may be an incompatibility with the token you are trading.\");\n            }\n            return t(\"Unknown error%reason%. Try increasing your slippage tolerance.\", {\n                reason: reason ? ': \"'.concat(reason, '\"') : \"\"\n            });\n    }\n}\n\n\n/***/ }),\n\n/***/ 52631:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"p\": function() { return /* binding */ ZapErrorMessages; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85893);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7180);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(67334);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4318);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(96293);\n/* harmony import */ var contexts_Localization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(99150);\n/* harmony import */ var hooks_useToast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(789);\n\n\n\n\n\nvar ZapErrorMessages = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(function(param) {\n    var isSingleToken = param.isSingleToken, zapMode = param.zapMode, toggleZapMode = param.toggleZapMode, onModalDismiss = param.onModalDismiss;\n    var t = (0,contexts_Localization__WEBPACK_IMPORTED_MODULE_2__/* .useTranslation */ .$G)().t;\n    var toastInfo = (0,hooks_useToast__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z)().toastInfo;\n    var handleCloseButton = function() {\n        onModalDismiss();\n        if (zapMode) {\n            toggleZapMode(!zapMode);\n            toastInfo(t(\"Info\"), t(\"Temporarily disabled Zap\"));\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z, {\n        width: [\n            \"100%\",\n            \"100%\",\n            \"380px\"\n        ],\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__/* [\"default\"] */ .Z, {\n            variant: \"warning\",\n            mb: \"16px\",\n            children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z, {\n                flexDirection: \"column\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__/* .MessageText */ .Y, {\n                        bold: true,\n                        children: t(\"Currently using Zap for liquidity provisions.\")\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__/* .MessageText */ .Y, {\n                        small: true,\n                        children: [\n                            isSingleToken ? t(\"Zap does NOT support tokens with fees on transfers. If you experience any issues, click\") : t(\"Zap does NOT support tokens with fees on transfers. Please choose \\u2019Don't convert\\u2019 and retry. If you experience any further issues, click\"),\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z, {\n                                p: \"0 4px\",\n                                scale: \"sm\",\n                                variant: \"text\",\n                                height: \"auto\",\n                                onClick: handleCloseButton,\n                                children: t(\"here\")\n                            }),\n                            t(\"to disable Zap temporarily.\")\n                        ]\n                    })\n                ]\n            })\n        })\n    });\n});\n\n\n/***/ })\n\n},\n/******/ function(__webpack_require__) { // webpackRuntimeModules\n/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }\n/******/ __webpack_require__.O(0, [2077,9363,5855,4583,561,5652,3439,7882,6323,9774,2888,179], function() { return __webpack_exec__(32990); });\n/******/ var __webpack_exports__ = __webpack_require__.O();\n/******/ _N_E = __webpack_exports__;\n/******/ }\n]);"],"names":["self","push","__unused_webpack_module","__unused_webpack_exports","__webpack_require__","window","__NEXT_P","__webpack_exports__","_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","styled_system__WEBPACK_IMPORTED_MODULE_0__","_templateObject","data","Z","CardFooter","ZP","div","withConfig","componentId","param","theme","colors","cardBorder","Dh","defaultProps","p","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_3__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","_Svg__WEBPACK_IMPORTED_MODULE_2__","props","jsx","viewBox","children","d","ZapCheckbox","_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_3__","ZapCheckBoxWrapper","label","background","scale","FlexGap","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_1__","_templateObject1","FlexLayout","gap","rowGap","columnGap","UnsupportedCurrencyFooter","_swc_helpers_src_sliced_to_array_mjs__WEBPACK_IMPORTED_MODULE_14__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_11__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_12__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_13__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_15__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_16__","contexts_Localization__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_10__","components_Layout_Row__WEBPACK_IMPORTED_MODULE_3__","components_Layout_Column__WEBPACK_IMPORTED_MODULE_4__","components_Logo__WEBPACK_IMPORTED_MODULE_5__","hooks_useActiveWeb3React__WEBPACK_IMPORTED_MODULE_6__","utils__WEBPACK_IMPORTED_MODULE_7__","utils_wrappedCurrency__WEBPACK_IMPORTED_MODULE_8__","_hooks_Tokens__WEBPACK_IMPORTED_MODULE_9__","DetailsFooter","text","invertedContrast","UnsupportedModal","currencies","onDismiss","chainId","t","$G","tokens","map","currency","pu","unsupportedTokens","l6","title","maxWidth","jsxs","Tz","token","ref","Object","keys","includes","address","BA","align","Xw","size","symbol","external","small","color","href","Ms","concat","onPresentModal","variant","onClick","useCurrentBlockTimestamp","_state_multicall_hooks__WEBPACK_IMPORTED_MODULE_0__","_useContract__WEBPACK_IMPORTED_MODULE_1__","ref1","multicall","gq","Wk","result","useTransactionDeadline","react__WEBPACK_IMPORTED_MODULE_0__","react_redux__WEBPACK_IMPORTED_MODULE_1__","_useCurrentBlockTimestamp__WEBPACK_IMPORTED_MODULE_2__","ttl","v9","state","user","userDeadline","blockTimestamp","useMemo","add","r","__N_SSG","_currency_","Steps","_async_to_generator","_define_property","_object_spread","_object_spread_props","_object_without_properties","_sliced_to_array","_to_consumable_array","runtime","runtime_default","n","jsx_runtime","react","bignumber","src","useTooltip","useModal","CardBody","Message","Text","Add","Button","TooltipText","sentry","Trades","Localization","useContract","useActiveWeb3React","addressHelpers","getLpSymbol","next_router","calls","transactionErrorToUserReadableMessage","hooks","exchange","Card","Column","CurrencyInputPanel","App","PositionCard","Row","ConnectWalletButton","usePairs","Tokens","useApproveCallback","actions","lib_esm","es","useTotalSupply","user_hooks","prices","utils_exchange","wrappedCurrency","useSWRContract","types","usePreviousValue","tryParseAmount","wallet_hooks","useMintState","mint","useMintActionHandlers","noLiquidity","dispatch","TL","onFieldAInput","useCallback","typedValue","LC","field","gN","CURRENCY_A","onFieldBInput","CURRENCY_B","MAX_ZAP_REVERSE_RATIO","QA","BigInt","getMaxZapSwapAmount","pair","tokenZap","involvesToken","divide","reserveOf","raw","transactions_hooks","utils","maxAmountSpend","Dots","AddLiquidity_PoolPriceBar","ref2","ref3","ref4","ref5","ref6","ref7","ref8","ref9","ref10","ref11","poolTokenPercentage","price","justify","toSignificant","fontSize","pt","assetA","assetB","invert","lessThan","IS","toFixed","Page","TransactionConfirmationModal","burn_actions","_tagged_template_literal","Box","Svg","Flex","styled_components_browser_esm","Logo","Dot","CircleSvg","_param","_percent","percent","width","height","fill","xmlns","filter","cx","cy","stroke","strokeWidth","strokeDasharray","transform","id","x","y","filterUnits","colorInterpolationFilters","floodOpacity","in","in2","values","dy","operator","k2","k3","Subtitle","textTransform","bold","PairDistribution","currencyA","currencyB","currencyAValue","currencyBValue","tooltipTargetRef","mr","style","m0","bg","AddLiquidityModalHeader","liquidityMinted","allowedSlippage","slippage","placement","tooltip","tooltipVisible","targetRef","h2","ge","currency0","g","currency1","z","ml","justifyContent","components_ConfirmAddLiquidityModal","customOnDismiss","attemptingTxn","hash","pendingText","parsedAmounts","liquidityErrorMessage","onAdd","currencyToAdd","modalHeader","modalBottom","mt","confirmationContent","ht","message","pM","topContent","bottomContent","minWidth","content","ArrowDown","ZapErrorMessage","components_ConfirmZapInModal","zapSwapTokenField","zapSwapOutTokenField","zapInEstimated","rebalancing","zapMode","toggleZapMode","totalPoolTokens","liquidityToken","swapInCurrencyAmount","swapOutCurrencyAmount","token0","token1","greaterThanOrEqual","getLiquidityValue","undefined","token0Deposited","token1Deposited","swapInTokenAmount","dt","swapAmountIn","toString","swapOutTokenAmount","swapAmountOut","inputPercent","num","min","max","Math","priceOf","tA","tokenDeposited","_obj","equals","DA","Fragment","isSingleToken","onModalDismiss","ArrowDropDown","CurrencySearchModal","formatBalance","useBUSDPrice","CurrencySelect_templateObject","DropDownHeader","shadows","inset","inputSecondary","input","DropDownContainer","mediaQueries","sm","CurrencySelect","onCurrencySelect","selectedCurrency","otherSelectedCurrency","showCommonBases","hideBalance","account","selectedCurrencyBalance","_h","onPresentCurrencyModal","quoted","quote","alignItems","marginRight","length","slice","className","Number","isFinite","toExact","uf","Layout_Flex","currencyId","useCurrencySelectRoute","router","useRouter","query","currencyIdA","currencyIdB","handleCurrencyASelect","currencyA_","newCurrencyIdA","replace","shallow","handleCurrencyBSelect","currencyB_","newCurrencyIdB","ChoosePair","error","onNext","isValid","subtitle","helper","backTo","pb","O","disabled","formatInfoNumbers","zapAddress","_M","ref12","ref13","ref14","ref15","ref16","ref17","ref18","ref19","ref20","ref21","ref22","ref23","ref24","ref25","ref26","ref27","ref28","ref44","ref47","ref48","ref49","ref50","ref51","ref52","ref53","ref54","ref29","library","expertMode","LO","ref30","$f","ref31","useState","temporarilyZapMode","setTemporarilyZapMode","ref32","JN","ref33","Choose","steps","setSteps","gasPrice","Fh","U8","useEffect","dA","step","addError","independentField","otherTypedValue","dependentField","pairState","totalSupply","balances","currencyBalances","independentAmount","dependentAmount","currencyAAmount","currencyBAmount","_symbol","_symbol1","canZap","zapTokenCheckedA","zapTokenCheckedB","maxAmounts","inputBlurOnce","setInputBlurOnce","previousBlur","triedAutoReduce","setTriedAutoReduce","_dependentAmount","isDependentAmountGreaterThanMaxAmount","wrappedParsedAmounts","zapContract","singleTokenToZapField","singleTokenToZapAmount","noNeedZap","singleZapEstimate","rebalancingZapEstimate","rebalancingSellToken0","swapTokenField","swapOutTokenField","swapTokens","zapInEstimatedError","zapInEstimatedStatus","priceImpact","overLimitZapRatio","priceSeverity","maxZappableAmount","convertToMaxZappable","swapTokenAmountTooLow","swapOutAmountTooLow","inputAmount","requiredGas","requiredGasAsCurrencyAmount","inputIsBNB","gasCostInInputTokens","gasOverhead","onInputBlurOnce","zapModeStatus","ref34","ref35","yX","_G","NOT_EXISTS","Boolean","equal","iV","K5","wrappedIndependentAmount","N","tokenA","tokenB","dependentCurrency","dependentTokenAmount","c0","ih","ether","wrappedCurrencyA","tokenAmountA","tokenAmountB","getLiquidityMinted","console","gG","INVALID","equalTo","mintParsedAmounts","poolData","aT","ref36","ref37","ref38","txHash","ref39","setLiquidityState","ref40","zapTokenToggleA","setZapTokenToggleA","ref41","zapTokenToggleB","setZapTokenToggleB","greaterThan","deadline","ref42","$2","reduce","accumulator","i","reserve0","Xh","reserve1","ref43","_ref","n9","Av","contract","methodName","params","onError","err","isToken0Sold","sellToken0","swapTokenOut","multiply","status","tokenAmountIn","tokenAmountOut","midPrice","fromRoute","AW","o","oX","guessMaxZappableAmount","token0AmountIn","token1AmountIn","maxSwapAmount","maxSwapAmount1","getInputAmount","newPair","formatInput","bM","decimals","zappedTokenAmountA","subtract","zappedTokenAmountB","lpMinted","O$","from","mul","AU","outputAmount","zapInEstimating","iF","Fetched","zapIn","preferZapInstead","formattedAmounts","atMaxAmounts","_field","ref45","qL","bR","approvalA","approveACallback","ref46","approvalB","approveBCallback","addTransaction","h7","_onAdd","apply","arguments","mark","_callee","routerContract","parsedAmountA","parsedAmountB","amountsMin","estimate","method","args","value","tokenBIsBNB","wrap","_ctx","prev","next","abrupt","iY","uc","estimateGas","addLiquidityETH","toHexString","addLiquidity","then","estimatedGasLimit","gasLimit","yC","response","summary","type","catch","code","H","e","stop","amountA","symbolA","amountB","symbolB","handleDismissConfirmation","addIsUnsupported","mP","addIsWarning","uK","onPresentAddLiquidityModal","ref55","_onZapIn","minAmountOut","maxAmountIn","Zj","onPresentZapInModal","ref56","errorText","buttonDisabled","UK","APPROVED","showFieldAApproval","NOT_APPROVED","PENDING","showFieldBApproval","shouldShowApprovalGroup","oneCurrencyIsWPLS","KA","FX","noAnyInputAmount","showAddLiquidity","showZapWarning","showReduceZapTokenButton","showRebalancingConvert","showZapIsAvailable","j","lg","mb","disableCurrencySelect","showBUSD","onInputBlur","beforeButton","checked","onChange","target","zapStyle","onUserInput","onMax","showMaxButton","Y","margin","hl","padding","borderRadius","lpApr7d","asset","isLoading","marginTop","W","showUnwrapped","callWithEstimateGas","getActivePools","harvestFarm","stakeFarm","unstakeFarm","methodArgs","overrides","gasMarginPer10000","_estimateGas","rawGasEstimation","gasEstimation","_args","sent","_contract","tx","bignumber_default","config","getGasPrice","QL","masterChefContract","pid","amount","times","o3","deposit","withdraw","pools","sousChefV2","providers","block","eligiblePools","blockNumber","startBlockCalls","endBlockCalls","startBlocks","endBlocks","pool","sousId","isFinished","t0","U6","getBlockNumber","contractAddress","Kn","name","t1","Promise","all","t2","accum","poolCheck","index","startBlock","endBlock","gte","lte","_pancakeswap_sdk__WEBPACK_IMPORTED_MODULE_0__","state__WEBPACK_IMPORTED_MODULE_1__","state_types__WEBPACK_IMPORTED_MODULE_2__","a_","MOVO","userGas","getState","j4","testnet","getLPSymbol","token0Symbol","token1Symbol","config_constants_exchange__WEBPACK_IMPORTED_MODULE_1__","currencyAmount","Uz","reason","_reason","_error","originalError","indexOf","substring","ZapErrorMessages","react__WEBPACK_IMPORTED_MODULE_1__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_4__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_6__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__","hooks_useToast__WEBPACK_IMPORTED_MODULE_3__","memo","toastInfo","flexDirection","moduleId","s","_N_E"],"sourceRoot":""}