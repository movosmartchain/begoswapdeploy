{"version":3,"file":"static/chunks/3444-ad79d736eb4d6ba0.js","mappings":"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","sources":["webpack://_N_E/./packages/uikit/src/components/Card/CardBody.tsx","webpack://_N_E/./packages/uikit/src/components/Card/CardFooter.tsx","webpack://_N_E/./src/views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","webpack://_N_E/./src/views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","webpack://_N_E/./src/views/Pools/components/CakeVaultCard/StakingApy.tsx","webpack://_N_E/./src/views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","webpack://_N_E/./src/views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","webpack://_N_E/./src/views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","webpack://_N_E/./src/views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","webpack://_N_E/./src/views/Pools/components/LockedPool/Common/LockedActions.tsx","webpack://_N_E/./src/views/Pools/components/LockedPool/Common/IfoCakeRow.tsx","webpack://_N_E/./src/views/Pools/components/LockedPool/LockedStakingApy.tsx","webpack://_N_E/./src/views/Pools/components/CakeVaultCard/index.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/CardFooter/index.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/PoolCardHeader.tsx","webpack://_N_E/./src/views/Pools/components/PoolCard/StyledCard.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import _tagged_template_literal from \"@swc/helpers/src/_tagged_template_literal.mjs\";\nfunction _templateObject() {\n    var data = _tagged_template_literal([\n        \"\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nimport styled from \"styled-components\";\nimport { space } from \"styled-system\";\nvar CardBody = styled.div.withConfig({\n    componentId: \"sc-9863c04e-0\"\n})(_templateObject(), space);\nCardBody.defaultProps = {\n    p: \"24px\"\n};\nexport default CardBody;\n","import _tagged_template_literal from \"@swc/helpers/src/_tagged_template_literal.mjs\";\nfunction _templateObject() {\n    var data = _tagged_template_literal([\n        \"\\n  border-top: 1px solid \",\n        \";\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nimport styled from \"styled-components\";\nimport { space } from \"styled-system\";\nvar CardFooter = styled.div.withConfig({\n    componentId: \"sc-11aac870-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.cardBorder;\n}, space);\nCardFooter.defaultProps = {\n    p: \"24px\"\n};\nexport default CardFooter;\n","import { TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport AutoEarningsBreakdown from '../AutoEarningsBreakdown'\r\n\r\ninterface RecentCakeProfitBalanceProps {\r\n  cakeToDisplay: number\r\n  pool: DeserializedPool\r\n  account: string\r\n}\r\n\r\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({ cakeToDisplay, pool, account }) => {\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<AutoEarningsBreakdown pool={pool} account={account} />, {\r\n    placement: 'bottom-end',\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\r\n      </TooltipText>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitBalance\r\n","import { Flex, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useVaultPoolByKey } from 'state/pools/hooks'\r\nimport { DeserializedPool, VaultKey, DeserializedLockedVaultUser } from 'state/types'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\r\n\r\nconst RecentCakeProfitCountdownRow = ({ pool }: { pool: DeserializedPool }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { pricePerFullShare, userData } = useVaultPoolByKey(pool.vaultKey)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const { hasAutoEarnings, autoCakeToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    userData.cakeAtLastUserAction,\r\n    userData.userShares,\r\n    pricePerFullShare,\r\n    cakePriceBusd.toNumber(),\r\n    pool.vaultKey === VaultKey.CakeVault\r\n      ? (userData as DeserializedLockedVaultUser).currentPerformanceFee.plus(\r\n          (userData as DeserializedLockedVaultUser).currentOverdueFee,\r\n        )\r\n      : null,\r\n  )\r\n\r\n  if (!(userData.userShares.gt(0) && account)) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\r\n      {hasAutoEarnings && <RecentCakeProfitBalance cakeToDisplay={autoCakeToDisplay} pool={pool} account={account} />}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitCountdownRow\r\n","import { Flex, Text, Skeleton, useModal, Button, CalculateIcon } from '@pancakeswap/uikit'\r\nimport { LightGreyCard } from 'components/Card'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useVaultApy } from 'hooks/useVaultApy'\r\nimport Balance from 'components/Balance'\r\nimport { memo } from 'react'\r\nimport { FlexGap } from 'components/Layout/Flex'\r\nimport { DeserializedPool, VaultKey } from 'state/types'\r\nimport styled from 'styled-components'\r\nimport { VaultRoiCalculatorModal } from '../Vault/VaultRoiCalculatorModal'\r\n\r\nconst AprLabelContainer = styled(Flex)`\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`\r\n\r\nexport const StakingApy = memo(({ pool }: { pool: DeserializedPool }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { flexibleApy, lockedApy } = useVaultApy()\r\n\r\n  const [onPresentFlexibleApyModal] = useModal(<VaultRoiCalculatorModal pool={pool} />)\r\n\r\n  const [onPresentLockedApyModal] = useModal(<VaultRoiCalculatorModal pool={pool} initialView={1} />)\r\n\r\n  return (\r\n    <LightGreyCard>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Text color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n          {t('Flexible')} APY:\r\n        </Text>\r\n        {flexibleApy ? (\r\n          <AprLabelContainer alignItems=\"center\" justifyContent=\"flex-start\">\r\n            <Balance fontSize=\"16px\" value={parseFloat(flexibleApy)} decimals={2} unit=\"%\" bold />\r\n            <Button\r\n              onClick={(e) => {\r\n                e.stopPropagation()\r\n                onPresentFlexibleApyModal()\r\n              }}\r\n              variant=\"text\"\r\n              width=\"20px\"\r\n              height=\"20px\"\r\n              padding=\"0px\"\r\n              marginLeft=\"4px\"\r\n            >\r\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\r\n            </Button>\r\n          </AprLabelContainer>\r\n        ) : (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        )}\r\n      </Flex>\r\n      {pool.vaultKey === VaultKey.CakeVault && (\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Text color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {t('Locked')} APY:\r\n          </Text>\r\n          {lockedApy ? (\r\n            <FlexGap gap=\"4px\" flexWrap=\"wrap\" justifyContent=\"flex-end\">\r\n              <Text style={{ whiteSpace: 'nowrap' }} bold>\r\n                {t('Up to')}\r\n              </Text>\r\n              <AprLabelContainer alignItems=\"center\">\r\n                <Balance fontSize=\"16px\" value={parseFloat(lockedApy)} decimals={2} unit=\"%\" bold />\r\n                <Button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation()\r\n                    onPresentLockedApyModal()\r\n                  }}\r\n                  variant=\"text\"\r\n                  width=\"20px\"\r\n                  height=\"20px\"\r\n                  padding=\"0px\"\r\n                  marginLeft=\"4px\"\r\n                >\r\n                  <CalculateIcon color=\"textSubtle\" width=\"20px\" />\r\n                </Button>\r\n              </AprLabelContainer>\r\n            </FlexGap>\r\n          ) : (\r\n            <Skeleton width=\"80px\" height=\"16px\" />\r\n          )}\r\n        </Flex>\r\n      )}\r\n    </LightGreyCard>\r\n  )\r\n})\r\n","import { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { VaultKey } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useVaultApprove } from '../../../hooks/useApprove'\r\n\r\ninterface ApprovalActionProps {\r\n  vaultKey: VaultKey\r\n  setLastUpdated: () => void\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ vaultKey, isLoading = false, setLastUpdated }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { handleApprove, pendingTx } = useVaultApprove(vaultKey, setLastUpdated)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={pendingTx}\r\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={pendingTx}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VaultApprovalAction\r\n","import { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton, Box } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { DeserializedPool, VaultKey } from 'state/types'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useVaultPoolByKey } from 'state/pools/hooks'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\nimport ConvertToLock from '../../LockedPool/Common/ConvertToLock'\r\n\r\ninterface HasStakeActionProps {\r\n  pool: DeserializedPool\r\n  stakingTokenBalance: BigNumber\r\n  performanceFee: number\r\n}\r\n\r\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\r\n  const {\r\n    userData: {\r\n      balance: { cakeAsBigNumber, cakeAsNumberBalance },\r\n    },\r\n  } = useVaultPoolByKey(pool.vaultKey)\r\n\r\n  const { stakingToken } = pool\r\n\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const stakedDollarValue = cakePriceBusd.gt(0)\r\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\r\n    : 0\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(\r\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\r\n  )\r\n  const [onPresentUnstake] = useModal(\r\n    <VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />,\r\n    true,\r\n    true,\r\n    'withdraw-vault',\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Flex mb=\"16px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex flexDirection=\"column\">\r\n          <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\r\n          <Text as={Flex} fontSize=\"12px\" color=\"textSubtle\" flexWrap=\"wrap\">\r\n            {cakePriceBusd.gt(0) ? (\r\n              <Balance\r\n                value={stakedDollarValue}\r\n                fontSize=\"12px\"\r\n                color=\"textSubtle\"\r\n                decimals={2}\r\n                prefix=\"~\"\r\n                unit=\" USD\"\r\n              />\r\n            ) : (\r\n              <Skeleton mt=\"1px\" height={16} width={64} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n        <Flex>\r\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n            <MinusIcon color=\"primary\" width=\"24px\" />\r\n          </IconButton>\r\n          <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n            <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n          </IconButton>\r\n        </Flex>\r\n      </Flex>\r\n      {pool.vaultKey === VaultKey.CakeVault && (\r\n        <Box mb=\"16px\">\r\n          <ConvertToLock stakingToken={stakingToken} currentStakedAmount={cakeAsNumberBalance} />\r\n        </Box>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HasSharesActions\r\n","import { Flex, Skeleton, useModal } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { DeserializedPool, VaultKey } from 'state/types'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport { VaultStakeButtonGroup } from '../../Vault/VaultStakeButtonGroup'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\nimport LockedStakeModal from '../../LockedPool/Modals/LockedStakeModal'\r\nimport HasSharesActions from './HasSharesActions'\r\n\r\ninterface VaultStakeActionsProps {\r\n  pool: DeserializedPool\r\n  stakingTokenBalance: BigNumber\r\n  accountHasSharesStaked: boolean\r\n  performanceFee: number\r\n}\r\n\r\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  accountHasSharesStaked,\r\n  performanceFee,\r\n}) => {\r\n  const { stakingToken, userDataLoaded } = pool\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(\r\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\r\n  )\r\n  const [openPresentLockedStakeModal] = useModal(\r\n    <LockedStakeModal\r\n      currentBalance={stakingTokenBalance}\r\n      stakingToken={stakingToken}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n    />,\r\n  )\r\n\r\n  const renderStakeAction = () => {\r\n    return accountHasSharesStaked ? (\r\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\r\n    ) : (\r\n      <VaultStakeButtonGroup\r\n        onFlexibleClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\r\n        onLockedClick={pool.vaultKey === VaultKey.CakeVault ? openPresentLockedStakeModal : null}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">{userDataLoaded ? renderStakeAction() : <Skeleton width=\"100%\" height=\"52px\" />}</Flex>\r\n  )\r\n}\r\n\r\nexport default VaultStakeActions\r\n","import BigNumber from 'bignumber.js'\r\n\r\nimport styled from 'styled-components'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport VaultApprovalAction from './VaultApprovalAction'\r\nimport VaultStakeActions from './VaultStakeActions'\r\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\nconst CakeVaultCardActions: React.FC<{\r\n  pool: DeserializedPool\r\n  accountHasSharesStaked: boolean\r\n  isLoading: boolean\r\n  performanceFee: number\r\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\r\n  const { stakingToken, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus(pool.vaultKey)\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        <Box display=\"inline\">\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? t('Staked') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {isVaultApproved ? (\r\n          <VaultStakeActions\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            accountHasSharesStaked={accountHasSharesStaked}\r\n            performanceFee={performanceFee}\r\n          />\r\n        ) : (\r\n          <VaultApprovalAction vaultKey={pool.vaultKey} isLoading={isLoading} setLastUpdated={setLastUpdated} />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCardActions\r\n","import { useMemo } from 'react'\r\nimport { Flex, Box } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getVaultPosition, VaultPosition } from 'utils/cakePool'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport AddCakeButton from '../Buttons/AddCakeButton'\r\nimport ExtendButton from '../Buttons/ExtendDurationButton'\r\nimport AfterLockedActions from './AfterLockedActions'\r\nimport { LockedActionsPropsType } from '../types'\r\n\r\nconst LockedActions: React.FC<LockedActionsPropsType> = ({\r\n  userShares,\r\n  locked,\r\n  lockEndTime,\r\n  lockStartTime,\r\n  stakingToken,\r\n  stakingTokenBalance,\r\n  lockedAmount,\r\n}) => {\r\n  const position = useMemo(\r\n    () =>\r\n      getVaultPosition({\r\n        userShares,\r\n        locked,\r\n        lockEndTime,\r\n      }),\r\n    [userShares, locked, lockEndTime],\r\n  )\r\n  const { t } = useTranslation()\r\n  const lockedAmountAsNumber = getBalanceNumber(lockedAmount)\r\n\r\n  const currentBalance = useMemo(\r\n    () => (stakingTokenBalance ? new BigNumber(stakingTokenBalance) : BIG_ZERO),\r\n    [stakingTokenBalance],\r\n  )\r\n\r\n  if (position === VaultPosition.Locked) {\r\n    return (\r\n      <Flex>\r\n        <Box width=\"100%\" mr=\"4px\">\r\n          <AddCakeButton\r\n            lockEndTime={lockEndTime}\r\n            lockStartTime={lockStartTime}\r\n            currentLockedAmount={lockedAmount}\r\n            stakingToken={stakingToken}\r\n            currentBalance={currentBalance}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n          />\r\n        </Box>\r\n        <Box width=\"100%\" ml=\"4px\">\r\n          <ExtendButton\r\n            lockEndTime={lockEndTime}\r\n            lockStartTime={lockStartTime}\r\n            stakingToken={stakingToken}\r\n            currentBalance={currentBalance}\r\n            currentLockedAmount={lockedAmountAsNumber}\r\n          >\r\n            {t('Extend')}\r\n          </ExtendButton>\r\n        </Box>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <AfterLockedActions\r\n      lockEndTime={lockEndTime}\r\n      lockStartTime={lockStartTime}\r\n      position={position}\r\n      currentLockedAmount={lockedAmountAsNumber}\r\n      stakingToken={stakingToken}\r\n    />\r\n  )\r\n}\r\n\r\nexport default LockedActions\r\n","import styled from 'styled-components'\r\nimport { Flex, Text, TooltipText, useTooltip, Box, Link } from '@pancakeswap/uikit'\r\n\r\nimport { BalanceWithLoading } from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useIfoCredit, useIfoCeiling } from 'state/pools/hooks'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getICakeWeekDisplay } from 'views/Pools/helpers'\r\n\r\nconst InlineLink = styled(Link)`\r\n  display: inline;\r\n`\r\n\r\nconst IfoCakeRow: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const credit = useIfoCredit()\r\n  const ceiling = useIfoCeiling()\r\n  const weeksDisplay = getICakeWeekDisplay(ceiling)\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <Box>\r\n      <Text>\r\n        {t(\r\n          'The number of iCAKE equals the locked staking amount if the staking duration is longer than %weeks% weeks. If the staking duration is less than %weeks% weeks, it will linearly decrease based on the staking duration.',\r\n          {\r\n            weeks: weeksDisplay,\r\n          },\r\n        )}\r\n      </Text>\r\n      <InlineLink external href=\"https://docs.cloudtx.finance/products/ifo-initial-farm-offering/icake\">\r\n        {t('Learn more about iCAKE')}\r\n      </InlineLink>\r\n    </Box>,\r\n    {\r\n      placement: 'bottom-start',\r\n    },\r\n  )\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText>\r\n        <Text ref={targetRef} color=\"textSubtle\" bold fontSize=\"12px\">\r\n          {t('iCAKE')}\r\n        </Text>\r\n      </TooltipText>\r\n      <BalanceWithLoading color=\"text\" bold fontSize=\"16px\" decimals={3} value={getBalanceNumber(credit)} />\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default IfoCakeRow\r\n","import { useMemo, memo } from 'react'\r\nimport { getVaultPosition, VaultPosition } from 'utils/cakePool'\r\n\r\nimport { Flex, Text, Box, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { LightGreyCard } from 'components/Card'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useVaultApy } from 'hooks/useVaultApy'\r\nimport { BalanceWithLoading } from 'components/Balance'\r\nimport Divider from 'components/Divider'\r\nimport { useBUSDCakeAmount } from 'hooks/useBUSDPrice'\r\nimport isUndefinedOrNull from 'utils/isUndefinedOrNull'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport BurningCountDown from './Common/BurningCountDown'\r\nimport LockedActions from './Common/LockedActions'\r\nimport YieldBoostRow from './Common/YieldBoostRow'\r\nimport LockDurationRow from './Common/LockDurationRow'\r\nimport IfoCakeRow from './Common/IfoCakeRow'\r\nimport useUserDataInVaultPresenter from './hooks/useUserDataInVaultPresenter'\r\nimport { LockedStakingApyPropsType } from './types'\r\n\r\ninterface LockedStakingApyProps extends LockedStakingApyPropsType {\r\n  showICake?: boolean\r\n}\r\n\r\nconst LockedStakingApy: React.FC<LockedStakingApyProps> = ({\r\n  stakingToken,\r\n  stakingTokenBalance,\r\n  userData,\r\n  showICake,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const position = useMemo(\r\n    () =>\r\n      getVaultPosition({\r\n        userShares: userData?.userShares,\r\n        locked: userData?.locked,\r\n        lockEndTime: userData?.lockEndTime,\r\n      }),\r\n    [userData],\r\n  )\r\n\r\n  const currentLockedAmountAsBigNumber = useMemo(() => {\r\n    return userData?.balance?.cakeAsBigNumber\r\n  }, [userData?.balance?.cakeAsBigNumber])\r\n\r\n  const currentLockedAmount = getBalanceNumber(currentLockedAmountAsBigNumber)\r\n\r\n  const usdValueStaked = useBUSDCakeAmount(currentLockedAmount)\r\n\r\n  const { weekDuration, lockEndDate, secondDuration, remainingTime } = useUserDataInVaultPresenter({\r\n    lockStartTime: userData?.lockStartTime,\r\n    lockEndTime: userData?.lockEndTime,\r\n  })\r\n\r\n  const { lockedApy } = useVaultApy({ duration: secondDuration })\r\n\r\n  // earningTokenBalance includes overdue fee if any\r\n  const earningTokenBalance = useMemo(() => {\r\n    return getBalanceNumber(currentLockedAmountAsBigNumber.minus(userData?.cakeAtLastUserAction))\r\n  }, [currentLockedAmountAsBigNumber, userData?.cakeAtLastUserAction])\r\n\r\n  const tooltipContent = t(\r\n    'Calculated based on current rates and subject to change based on pool conditions. It is an estimate provided for your convenience only, and by no means represents guaranteed returns.',\r\n  )\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\r\n\r\n  return (\r\n    <LightGreyCard>\r\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\r\n        <Box>\r\n          <Text color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {t('CAKE locked')}\r\n          </Text>\r\n          <BalanceWithLoading color=\"text\" bold fontSize=\"16px\" value={currentLockedAmount} decimals={5} />\r\n          <BalanceWithLoading\r\n            value={usdValueStaked}\r\n            fontSize=\"12px\"\r\n            color=\"textSubtle\"\r\n            decimals={2}\r\n            prefix=\"~\"\r\n            unit=\" USD\"\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <Text color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {t('Unlocks In')}\r\n          </Text>\r\n          <Text color={position >= VaultPosition.LockedEnd ? '#D67E0A' : 'text'} bold fontSize=\"16px\">\r\n            {position >= VaultPosition.LockedEnd ? t('Unlocked') : remainingTime}\r\n          </Text>\r\n          <Text color={position >= VaultPosition.LockedEnd ? '#D67E0A' : 'text'} fontSize=\"12px\">\r\n            {t('On %date%', { date: lockEndDate })}\r\n          </Text>\r\n        </Box>\r\n      </Flex>\r\n      <Box mb=\"16px\">\r\n        <LockedActions\r\n          userShares={userData?.userShares}\r\n          locked={userData?.locked}\r\n          lockEndTime={userData?.lockEndTime}\r\n          lockStartTime={userData?.lockStartTime}\r\n          stakingToken={stakingToken}\r\n          stakingTokenBalance={stakingTokenBalance}\r\n          lockedAmount={currentLockedAmountAsBigNumber}\r\n        />\r\n      </Box>\r\n      <Divider />\r\n      {![VaultPosition.LockedEnd, VaultPosition.AfterBurning].includes(position) && (\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          {tooltipVisible && tooltip}\r\n          <TooltipText>\r\n            <Text ref={targetRef} color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n              {t('APY')}\r\n            </Text>\r\n          </TooltipText>\r\n          <BalanceWithLoading color=\"text\" bold fontSize=\"16px\" value={parseFloat(lockedApy)} decimals={2} unit=\"%\" />\r\n        </Flex>\r\n      )}\r\n      <LockDurationRow weekDuration={weekDuration} />\r\n      {![VaultPosition.LockedEnd, VaultPosition.AfterBurning].includes(position) && (\r\n        <YieldBoostRow secondDuration={secondDuration} />\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Text color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n          {t('Recent CAKE profit')}\r\n        </Text>\r\n        <BalanceWithLoading color=\"text\" bold fontSize=\"16px\" value={earningTokenBalance} decimals={5} />\r\n      </Flex>\r\n      {position === VaultPosition.LockedEnd && (\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Text color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {t('After Burning In')}\r\n          </Text>\r\n          <Text color=\"failure\" bold>\r\n            <BurningCountDown lockEndTime={userData?.lockEndTime} />\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      {position === VaultPosition.AfterBurning && (\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Text color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {t('After burning')}\r\n          </Text>\r\n          <Text color=\"failure\" bold>\r\n            {isUndefinedOrNull(userData?.currentOverdueFee)\r\n              ? '-'\r\n              : t('%amount% Burned', { amount: getFullDisplayBalance(userData?.currentOverdueFee, 18, 5) })}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      {showICake && <IfoCakeRow />}\r\n    </LightGreyCard>\r\n  )\r\n}\r\n\r\nexport default memo(LockedStakingApy)\r\n","import { Box, CardBody, CardProps, Flex, Text, TokenPairImage } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { FlexGap } from 'components/Layout/Flex'\r\nimport { vaultPoolConfig } from 'config/constants/pools'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useVaultPoolByKey } from 'state/pools/hooks'\r\nimport { DeserializedPool, VaultKey, DeserializedLockedCakeVault, DeserializedCakeVault } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\nimport CardFooter from '../PoolCard/CardFooter'\r\nimport PoolCardHeader, { PoolCardHeaderTitle } from '../PoolCard/PoolCardHeader'\r\nimport { StyledCard } from '../PoolCard/StyledCard'\r\nimport { VaultPositionTagWithLabel } from '../Vault/VaultPositionTag'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\r\nimport { StakingApy } from './StakingApy'\r\nimport VaultCardActions from './VaultCardActions'\r\nimport LockedStakingApy from '../LockedPool/LockedStakingApy'\r\n\r\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\r\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\r\n`\r\n\r\ninterface CakeVaultProps extends CardProps {\r\n  pool: DeserializedPool\r\n  showStakedOnly: boolean\r\n  defaultFooterExpanded?: boolean\r\n  showICake?: boolean\r\n}\r\n\r\ninterface CakeVaultDetailProps {\r\n  isLoading?: boolean\r\n  account: string\r\n  pool: DeserializedPool\r\n  vaultPool: DeserializedCakeVault\r\n  accountHasSharesStaked: boolean\r\n  defaultFooterExpanded?: boolean\r\n  showICake?: boolean\r\n  performanceFeeAsDecimal: number\r\n}\r\n\r\nexport const CakeVaultDetail: React.FC<CakeVaultDetailProps> = ({\r\n  isLoading = false,\r\n  account,\r\n  pool,\r\n  vaultPool,\r\n  accountHasSharesStaked,\r\n  showICake,\r\n  performanceFeeAsDecimal,\r\n  defaultFooterExpanded,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <StyledCardBody isLoading={isLoading}>\r\n        {account && pool.vaultKey === VaultKey.CakeVault && (\r\n          <VaultPositionTagWithLabel userData={(vaultPool as DeserializedLockedCakeVault).userData} />\r\n        )}\r\n        {account &&\r\n        pool.vaultKey === VaultKey.CakeVault &&\r\n        (vaultPool as DeserializedLockedCakeVault).userData.locked ? (\r\n          <LockedStakingApy\r\n            userData={(vaultPool as DeserializedLockedCakeVault).userData}\r\n            stakingToken={pool?.stakingToken}\r\n            stakingTokenBalance={pool?.userData?.stakingTokenBalance}\r\n            showICake={showICake}\r\n          />\r\n        ) : (\r\n          <>\r\n            <StakingApy pool={pool} />\r\n            <FlexGap mt=\"16px\" gap=\"24px\" flexDirection={accountHasSharesStaked ? 'column-reverse' : 'column'}>\r\n              <Box>\r\n                {account && (\r\n                  <Box mb=\"8px\">\r\n                    <UnstakingFeeCountdownRow vaultKey={pool.vaultKey} />\r\n                  </Box>\r\n                )}\r\n                <RecentCakeProfitRow pool={pool} />\r\n              </Box>\r\n              <Flex flexDirection=\"column\">\r\n                {account ? (\r\n                  <VaultCardActions\r\n                    pool={pool}\r\n                    accountHasSharesStaked={accountHasSharesStaked}\r\n                    isLoading={isLoading}\r\n                    performanceFee={performanceFeeAsDecimal}\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                      {t('Start earning')}\r\n                    </Text>\r\n                    <ConnectWalletButton />\r\n                  </>\r\n                )}\r\n              </Flex>\r\n            </FlexGap>\r\n          </>\r\n        )}\r\n      </StyledCardBody>\r\n      <CardFooter defaultExpanded={defaultFooterExpanded} pool={pool} account={account} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({\r\n  pool,\r\n  showStakedOnly,\r\n  defaultFooterExpanded,\r\n  showICake = false,\r\n  ...props\r\n}) => {\r\n  const { account } = useWeb3React()\r\n\r\n  const vaultPool = useVaultPoolByKey(pool.vaultKey)\r\n\r\n  const {\r\n    userData: { userShares, isLoading: isVaultUserDataLoading },\r\n    fees: { performanceFeeAsDecimal },\r\n  } = vaultPool\r\n\r\n  const accountHasSharesStaked = userShares && userShares.gt(0)\r\n  const isLoading = !pool.userData || isVaultUserDataLoading\r\n\r\n  if (showStakedOnly && !accountHasSharesStaked) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <StyledCard isActive {...props}>\r\n      <PoolCardHeader isStaking={accountHasSharesStaked}>\r\n        <PoolCardHeaderTitle\r\n          title={vaultPoolConfig[pool.vaultKey].name}\r\n          subTitle={vaultPoolConfig[pool.vaultKey].description}\r\n        />\r\n        <TokenPairImage {...vaultPoolConfig[pool.vaultKey].tokenImage} width={64} height={64} />\r\n      </PoolCardHeader>\r\n      <CakeVaultDetail\r\n        isLoading={isLoading}\r\n        account={account}\r\n        pool={pool}\r\n        vaultPool={vaultPool}\r\n        accountHasSharesStaked={accountHasSharesStaked}\r\n        showICake={showICake}\r\n        performanceFeeAsDecimal={performanceFeeAsDecimal}\r\n        defaultFooterExpanded={defaultFooterExpanded}\r\n      />\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCard\r\n","import { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport PoolStatsInfo from '../../PoolStatsInfo'\r\n\r\ninterface FooterProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n  totalCakeInVault?: BigNumber\r\n  defaultExpanded?: boolean\r\n}\r\n\r\nconst ExpandableButtonWrapper = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  button {\r\n    padding: 0;\r\n  }\r\n`\r\nconst ExpandedWrapper = styled(Flex)`\r\n  svg {\r\n    height: 14px;\r\n    width: 14px;\r\n  }\r\n`\r\n\r\nconst Footer: React.FC<FooterProps> = ({ pool, account, defaultExpanded, children }) => {\r\n  const { vaultKey } = pool\r\n  const { t } = useTranslation()\r\n  const [isExpanded, setIsExpanded] = useState(defaultExpanded || false)\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Rewards are distributed and included into your staking balance automatically. There’s no need to manually compound your rewards.',\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(vaultKey ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  return (\r\n    <CardFooter>\r\n      <ExpandableButtonWrapper>\r\n        <Flex alignItems=\"center\">\r\n          {vaultKey ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n          {tooltipVisible && tooltip}\r\n          <Flex ref={targetRef}>\r\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n          </Flex>\r\n        </Flex>\r\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n          {isExpanded ? t('Hide') : t('Details')}\r\n        </ExpandableLabel>\r\n      </ExpandableButtonWrapper>\r\n      {isExpanded && (\r\n        <ExpandedWrapper flexDirection=\"column\">\r\n          {children || <PoolStatsInfo pool={pool} account={account} />}\r\n        </ExpandedWrapper>\r\n      )}\r\n    </CardFooter>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { CardHeader, Flex, Heading, Text } from '@pancakeswap/uikit'\r\nimport { ReactNode } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\r\n  background: ${({ isFinished, background, theme }) =>\r\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\r\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\r\n`\r\n\r\nconst PoolCardHeader: React.FC<{\r\n  isFinished?: boolean\r\n  isStaking?: boolean\r\n}> = ({ isFinished = false, isStaking = false, children }) => {\r\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\r\n\r\n  return (\r\n    <Wrapper isFinished={isFinished} background={background}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        {children}\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport const PoolCardHeaderTitle: React.FC<{ isFinished?: boolean; title: ReactNode; subTitle: ReactNode }> = ({\r\n  isFinished,\r\n  title,\r\n  subTitle,\r\n}) => {\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\r\n        {title}\r\n      </Heading>\r\n      <Text fontSize=\"14px\" color={isFinished ? 'textDisabled' : 'textSubtle'}>\r\n        {subTitle}\r\n      </Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default PoolCardHeader\r\n","import styled from 'styled-components'\r\nimport { Card } from '@pancakeswap/uikit'\r\n\r\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\r\n  min-width: 280px;\r\n  max-width: 100%;\r\n  margin: 0 0 24px 0;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-self: baseline;\r\n  position: relative;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-width: 350px;\r\n    margin: 0 12px 46px;\r\n  }\r\n`\r\n\r\nexport default StyledCard\r\n","\"use strict\";\n(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[3444],{\n\n/***/ 23774:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7297);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(87379);\n/* harmony import */ var styled_system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57247);\n\n\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)([\n        \"\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nvar CardBody = styled_components__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"].div.withConfig */ .ZP.div.withConfig({\n    componentId: \"sc-9863c04e-0\"\n}).withConfig({\n    componentId: \"sc-ea05020-0\"\n})(_templateObject(), styled_system__WEBPACK_IMPORTED_MODULE_0__/* .space */ .Dh);\nCardBody.defaultProps = {\n    p: \"24px\"\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (CardBody);\n\n\n/***/ }),\n\n/***/ 95596:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7297);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(87379);\n/* harmony import */ var styled_system__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57247);\n\n\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z)([\n        \"\\n  border-top: 1px solid \",\n        \";\\n  \",\n        \"\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nvar CardFooter = styled_components__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"].div.withConfig */ .ZP.div.withConfig({\n    componentId: \"sc-11aac870-0\"\n}).withConfig({\n    componentId: \"sc-91048a19-0\"\n})(_templateObject(), function(param) {\n    var theme = param.theme;\n    return theme.colors.cardBorder;\n}, styled_system__WEBPACK_IMPORTED_MODULE_0__/* .space */ .Dh);\nCardFooter.defaultProps = {\n    p: \"24px\"\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (CardFooter);\n\n\n/***/ }),\n\n/***/ 43444:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"_\": function() { return /* binding */ CakeVaultDetail; },\n  \"Z\": function() { return /* binding */ components_CakeVaultCard; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_object_spread.mjs\nvar _object_spread = __webpack_require__(26042);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_object_spread_props.mjs\nvar _object_spread_props = __webpack_require__(69396);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_object_without_properties.mjs + 1 modules\nvar _object_without_properties = __webpack_require__(99534);\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_tagged_template_literal.mjs\nvar _tagged_template_literal = __webpack_require__(7297);\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(85893);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Card/CardBody.tsx\nvar CardBody = __webpack_require__(23774);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Box/Box.tsx + 29 modules\nvar Box = __webpack_require__(7180);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Box/Flex.tsx\nvar Flex = __webpack_require__(4318);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Text/Text.tsx\nvar Text = __webpack_require__(97114);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Image/TokenPairImage.tsx + 2 modules\nvar TokenPairImage = __webpack_require__(56503);\n// EXTERNAL MODULE: ./node_modules/@web3-react/core/dist/core.esm.js\nvar core_esm = __webpack_require__(77044);\n// EXTERNAL MODULE: ./src/components/ConnectWalletButton.tsx\nvar ConnectWalletButton = __webpack_require__(30621);\n// EXTERNAL MODULE: ./src/components/Layout/Flex.tsx\nvar Layout_Flex = __webpack_require__(40508);\n// EXTERNAL MODULE: ./src/config/constants/pools.tsx\nvar pools = __webpack_require__(9070);\n// EXTERNAL MODULE: ./src/contexts/Localization/index.tsx + 3 modules\nvar Localization = __webpack_require__(99150);\n// EXTERNAL MODULE: ./src/state/pools/hooks.ts + 1 modules\nvar hooks = __webpack_require__(23637);\n// EXTERNAL MODULE: ./src/state/types.ts\nvar types = __webpack_require__(45101);\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js + 4 modules\nvar styled_components_browser_esm = __webpack_require__(87379);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolCard/CardFooter/index.tsx\nvar CardFooter = __webpack_require__(73322);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolCard/PoolCardHeader.tsx\nvar PoolCardHeader = __webpack_require__(68624);\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolCard/StyledCard.tsx\nvar StyledCard = __webpack_require__(12020);\n// EXTERNAL MODULE: ./src/views/Pools/components/Vault/VaultPositionTag.tsx\nvar VaultPositionTag = __webpack_require__(5619);\n// EXTERNAL MODULE: ./src/views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx + 2 modules\nvar UnstakingFeeCountdownRow = __webpack_require__(21754);\n// EXTERNAL MODULE: ./src/state/farms/hooks.ts + 1 modules\nvar farms_hooks = __webpack_require__(17166);\n// EXTERNAL MODULE: ./src/views/Pools/helpers.tsx\nvar helpers = __webpack_require__(53136);\n// EXTERNAL MODULE: ./packages/uikit/src/hooks/useTooltip/useTooltip.tsx + 1 modules\nvar useTooltip = __webpack_require__(36544);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Text/TooltipText.tsx\nvar TooltipText = __webpack_require__(17634);\n// EXTERNAL MODULE: ./src/components/Balance.tsx\nvar Balance = __webpack_require__(20922);\n// EXTERNAL MODULE: ./src/views/Pools/components/AutoEarningsBreakdown.tsx\nvar AutoEarningsBreakdown = __webpack_require__(37528);\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx\n\n\n\n\nvar RecentCakeProfitBalance = function(param) {\n    var cakeToDisplay = param.cakeToDisplay, pool = param.pool, account = param.account;\n    var ref = (0,useTooltip/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(AutoEarningsBreakdown/* default */.Z, {\n        pool: pool,\n        account: account\n    }), {\n        placement: \"bottom-end\"\n    }), targetRef = ref.targetRef, tooltip = ref.tooltip, tooltipVisible = ref.tooltipVisible;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            tooltipVisible && tooltip,\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(TooltipText/* default */.Z, {\n                ref: targetRef,\n                small: true,\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                    fontSize: \"14px\",\n                    value: cakeToDisplay\n                })\n            })\n        ]\n    });\n};\n/* harmony default export */ var CakeVaultCard_RecentCakeProfitBalance = (RecentCakeProfitBalance);\n\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx\n\n\n\n\n\n\n\n\n\nvar RecentCakeProfitCountdownRow = function(param) {\n    var pool = param.pool;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var account = (0,core_esm/* useWeb3React */.Ge)().account;\n    var ref = (0,hooks/* useVaultPoolByKey */.eB)(pool.vaultKey), pricePerFullShare = ref.pricePerFullShare, userData = ref.userData;\n    var cakePriceBusd = (0,farms_hooks/* usePriceCakeBusd */.Iu)();\n    var ref1 = (0,helpers/* getCakeVaultEarnings */.UN)(account, userData.cakeAtLastUserAction, userData.userShares, pricePerFullShare, cakePriceBusd.toNumber(), pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault ? userData.currentPerformanceFee.plus(userData.currentOverdueFee) : null), hasAutoEarnings = ref1.hasAutoEarnings, autoCakeToDisplay = ref1.autoCakeToDisplay;\n    if (!(userData.userShares.gt(0) && account)) {\n        return null;\n    }\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                fontSize: \"14px\",\n                children: \"\".concat(t(\"Recent CAKE profit\"), \":\")\n            }),\n            hasAutoEarnings && /*#__PURE__*/ (0,jsx_runtime.jsx)(CakeVaultCard_RecentCakeProfitBalance, {\n                cakeToDisplay: autoCakeToDisplay,\n                pool: pool,\n                account: account\n            })\n        ]\n    });\n};\n/* harmony default export */ var RecentCakeProfitRow = (RecentCakeProfitCountdownRow);\n\n// EXTERNAL MODULE: ./node_modules/@swc/helpers/src/_sliced_to_array.mjs\nvar _sliced_to_array = __webpack_require__(10253);\n// EXTERNAL MODULE: ./packages/uikit/src/widgets/Modal/useModal.ts\nvar useModal = __webpack_require__(65528);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Button/Button.tsx + 2 modules\nvar Button = __webpack_require__(96293);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/Calculate.tsx\nvar Calculate = __webpack_require__(47509);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Skeleton/Skeleton.tsx + 1 modules\nvar Skeleton = __webpack_require__(84091);\n// EXTERNAL MODULE: ./src/components/Card/index.tsx\nvar Card = __webpack_require__(36261);\n// EXTERNAL MODULE: ./src/hooks/useVaultApy.ts\nvar useVaultApy = __webpack_require__(41273);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./src/views/Pools/components/Vault/VaultRoiCalculatorModal.tsx\nvar VaultRoiCalculatorModal = __webpack_require__(86082);\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/StakingApy.tsx\n\n\nfunction _templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  &:hover {\\n    opacity: 0.5;\\n  }\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\nvar AprLabelContainer = (0,styled_components_browser_esm/* default */.ZP)(Flex/* default */.Z).withConfig({\n    componentId: \"sc-8e66bdfe-0\"\n})(_templateObject());\nvar StakingApy = /*#__PURE__*/ (0,react.memo)(function(param) {\n    var pool = param.pool;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var ref = (0,useVaultApy/* useVaultApy */.o)(), flexibleApy = ref.flexibleApy, lockedApy = ref.lockedApy;\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(VaultRoiCalculatorModal/* VaultRoiCalculatorModal */.E, {\n        pool: pool\n    })), 1), onPresentFlexibleApyModal = ref1[0];\n    var ref2 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(VaultRoiCalculatorModal/* VaultRoiCalculatorModal */.E, {\n        pool: pool,\n        initialView: 1\n    })), 1), onPresentLockedApyModal = ref2[0];\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Card/* LightGreyCard */.m5, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                        color: \"textSubtle\",\n                        textTransform: \"uppercase\",\n                        bold: true,\n                        fontSize: \"12px\",\n                        children: [\n                            t(\"Flexible\"),\n                            \" APY:\"\n                        ]\n                    }),\n                    flexibleApy ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(AprLabelContainer, {\n                        alignItems: \"center\",\n                        justifyContent: \"flex-start\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                fontSize: \"16px\",\n                                value: parseFloat(flexibleApy),\n                                decimals: 2,\n                                unit: \"%\",\n                                bold: true\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                onClick: function(e) {\n                                    e.stopPropagation();\n                                    onPresentFlexibleApyModal();\n                                },\n                                variant: \"text\",\n                                width: \"20px\",\n                                height: \"20px\",\n                                padding: \"0px\",\n                                marginLeft: \"4px\",\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Calculate/* default */.Z, {\n                                    color: \"textSubtle\",\n                                    width: \"20px\"\n                                })\n                            })\n                        ]\n                    }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                        width: \"80px\",\n                        height: \"16px\"\n                    })\n                ]\n            }),\n            pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Text/* default */.Z, {\n                        color: \"textSubtle\",\n                        textTransform: \"uppercase\",\n                        bold: true,\n                        fontSize: \"12px\",\n                        children: [\n                            t(\"Locked\"),\n                            \" APY:\"\n                        ]\n                    }),\n                    lockedApy ? /*#__PURE__*/ (0,jsx_runtime.jsxs)(Layout_Flex/* FlexGap */.O, {\n                        gap: \"4px\",\n                        flexWrap: \"wrap\",\n                        justifyContent: \"flex-end\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                style: {\n                                    whiteSpace: \"nowrap\"\n                                },\n                                bold: true,\n                                children: t(\"Up to\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(AprLabelContainer, {\n                                alignItems: \"center\",\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                        fontSize: \"16px\",\n                                        value: parseFloat(lockedApy),\n                                        decimals: 2,\n                                        unit: \"%\",\n                                        bold: true\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n                                        onClick: function(e) {\n                                            e.stopPropagation();\n                                            onPresentLockedApyModal();\n                                        },\n                                        variant: \"text\",\n                                        width: \"20px\",\n                                        height: \"20px\",\n                                        padding: \"0px\",\n                                        marginLeft: \"4px\",\n                                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Calculate/* default */.Z, {\n                                            color: \"textSubtle\",\n                                            width: \"20px\"\n                                        })\n                                    })\n                                ]\n                            })\n                        ]\n                    }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                        width: \"80px\",\n                        height: \"16px\"\n                    })\n                ]\n            })\n        ]\n    });\n});\n\n// EXTERNAL MODULE: ./node_modules/bignumber.js/bignumber.js\nvar bignumber = __webpack_require__(44431);\nvar bignumber_default = /*#__PURE__*/__webpack_require__.n(bignumber);\n// EXTERNAL MODULE: ./src/utils/bigNumber.ts\nvar bigNumber = __webpack_require__(35128);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/AutoRenew.tsx\nvar AutoRenew = __webpack_require__(19729);\n// EXTERNAL MODULE: ./src/views/Pools/hooks/useApprove.tsx + 1 modules\nvar useApprove = __webpack_require__(51029);\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx\n\n\n\n\nvar VaultApprovalAction = function(param) {\n    var vaultKey = param.vaultKey, _isLoading = param.isLoading, isLoading = _isLoading === void 0 ? false : _isLoading, setLastUpdated = param.setLastUpdated;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var ref = (0,useApprove/* useVaultApprove */.Le)(vaultKey, setLastUpdated), handleApprove = ref.handleApprove, pendingTx = ref.pendingTx;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n        children: isLoading ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n            width: \"100%\",\n            height: \"52px\"\n        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* default */.Z, {\n            isLoading: pendingTx,\n            endIcon: pendingTx ? /*#__PURE__*/ (0,jsx_runtime.jsx)(AutoRenew/* default */.Z, {\n                spin: true,\n                color: \"currentColor\"\n            }) : null,\n            disabled: pendingTx,\n            onClick: handleApprove,\n            width: \"100%\",\n            children: t(\"Enable\")\n        })\n    });\n};\n/* harmony default export */ var VaultCardActions_VaultApprovalAction = (VaultApprovalAction);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx\nvar NotEnoughTokensModal = __webpack_require__(67576);\n// EXTERNAL MODULE: ./src/views/Pools/components/Vault/VaultStakeButtonGroup.tsx\nvar VaultStakeButtonGroup = __webpack_require__(58427);\n// EXTERNAL MODULE: ./src/views/Pools/components/CakeVaultCard/VaultStakeModal.tsx + 1 modules\nvar VaultStakeModal = __webpack_require__(86487);\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Modals/LockedStakeModal.tsx\nvar LockedStakeModal = __webpack_require__(24237);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Button/IconButton.tsx\nvar IconButton = __webpack_require__(5527);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/Minus.tsx\nvar Minus = __webpack_require__(72943);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Svg/Icons/Add.tsx\nvar Add = __webpack_require__(543);\n// EXTERNAL MODULE: ./src/utils/formatBalance.ts\nvar formatBalance = __webpack_require__(65044);\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Common/ConvertToLock.tsx\nvar ConvertToLock = __webpack_require__(24416);\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx\n\n\n\n\n\n\n\n\n\n\n\nvar HasSharesActions = function(param) {\n    var pool = param.pool, stakingTokenBalance = param.stakingTokenBalance, performanceFee = param.performanceFee;\n    var ref = (0,hooks/* useVaultPoolByKey */.eB)(pool.vaultKey), _userData = ref.userData, _balance = _userData.balance, cakeAsBigNumber = _balance.cakeAsBigNumber, cakeAsNumberBalance = _balance.cakeAsNumberBalance;\n    var stakingToken = pool.stakingToken;\n    var cakePriceBusd = (0,farms_hooks/* usePriceCakeBusd */.Iu)();\n    var stakedDollarValue = cakePriceBusd.gt(0) ? (0,formatBalance/* getBalanceNumber */.mW)(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals) : 0;\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(NotEnoughTokensModal/* default */.Z, {\n        tokenSymbol: stakingToken.symbol\n    })), 1), onPresentTokenRequired = ref1[0];\n    var ref2 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(VaultStakeModal/* default */.Z, {\n        stakingMax: stakingTokenBalance,\n        performanceFee: performanceFee,\n        pool: pool\n    })), 1), onPresentStake = ref2[0];\n    var ref3 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(VaultStakeModal/* default */.Z, {\n        stakingMax: cakeAsBigNumber,\n        pool: pool,\n        isRemovingStake: true\n    }), true, true, \"withdraw-vault\"), 1), onPresentUnstake = ref3[0];\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                mb: \"16px\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                        flexDirection: \"column\",\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                fontSize: \"20px\",\n                                bold: true,\n                                value: cakeAsNumberBalance,\n                                decimals: 5\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                as: Flex/* default */.Z,\n                                fontSize: \"12px\",\n                                color: \"textSubtle\",\n                                flexWrap: \"wrap\",\n                                children: cakePriceBusd.gt(0) ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* default */.Z, {\n                                    value: stakedDollarValue,\n                                    fontSize: \"12px\",\n                                    color: \"textSubtle\",\n                                    decimals: 2,\n                                    prefix: \"~\",\n                                    unit: \" USD\"\n                                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n                                    mt: \"1px\",\n                                    height: 16,\n                                    width: 64\n                                })\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(IconButton/* default */.Z, {\n                                variant: \"secondary\",\n                                onClick: onPresentUnstake,\n                                mr: \"6px\",\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Minus/* default */.Z, {\n                                    color: \"primary\",\n                                    width: \"24px\"\n                                })\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(IconButton/* default */.Z, {\n                                variant: \"secondary\",\n                                onClick: stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired,\n                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Add/* default */.Z, {\n                                    color: \"primary\",\n                                    width: \"24px\",\n                                    height: \"24px\"\n                                })\n                            })\n                        ]\n                    })\n                ]\n            }),\n            pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault && /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                mb: \"16px\",\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(ConvertToLock/* default */.Z, {\n                    stakingToken: stakingToken,\n                    currentStakedAmount: cakeAsNumberBalance\n                })\n            })\n        ]\n    });\n};\n/* harmony default export */ var VaultCardActions_HasSharesActions = (HasSharesActions);\n\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx\n\n\n\n\n\n\n\n\n\nvar VaultStakeActions = function(param) {\n    var pool = param.pool, stakingTokenBalance = param.stakingTokenBalance, accountHasSharesStaked = param.accountHasSharesStaked, performanceFee = param.performanceFee;\n    var stakingToken = pool.stakingToken, userDataLoaded = pool.userDataLoaded;\n    var ref = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(NotEnoughTokensModal/* default */.Z, {\n        tokenSymbol: stakingToken.symbol\n    })), 1), onPresentTokenRequired = ref[0];\n    var ref1 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(VaultStakeModal/* default */.Z, {\n        stakingMax: stakingTokenBalance,\n        pool: pool,\n        performanceFee: performanceFee\n    })), 1), onPresentStake = ref1[0];\n    var ref2 = (0,_sliced_to_array/* default */.Z)((0,useModal/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsx)(LockedStakeModal/* default */.Z, {\n        currentBalance: stakingTokenBalance,\n        stakingToken: stakingToken,\n        stakingTokenBalance: stakingTokenBalance\n    })), 1), openPresentLockedStakeModal = ref2[0];\n    var renderStakeAction = function() {\n        return accountHasSharesStaked ? /*#__PURE__*/ (0,jsx_runtime.jsx)(VaultCardActions_HasSharesActions, {\n            pool: pool,\n            stakingTokenBalance: stakingTokenBalance,\n            performanceFee: performanceFee\n        }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(VaultStakeButtonGroup/* VaultStakeButtonGroup */.w, {\n            onFlexibleClick: stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired,\n            onLockedClick: pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault ? openPresentLockedStakeModal : null\n        });\n    };\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n        flexDirection: \"column\",\n        children: userDataLoaded ? renderStakeAction() : /*#__PURE__*/ (0,jsx_runtime.jsx)(Skeleton/* default */.Z, {\n            width: \"100%\",\n            height: \"52px\"\n        })\n    });\n};\n/* harmony default export */ var VaultCardActions_VaultStakeActions = (VaultStakeActions);\n\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx\n\nfunction VaultCardActions_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: inline;\\n\"\n    ]);\n    VaultCardActions_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\nvar InlineText = (0,styled_components_browser_esm/* default */.ZP)(Text/* default */.Z).withConfig({\n    componentId: \"sc-59cf5d31-0\"\n})(VaultCardActions_templateObject());\nvar CakeVaultCardActions = function(param) {\n    var pool = param.pool, accountHasSharesStaked = param.accountHasSharesStaked, isLoading = param.isLoading, performanceFee = param.performanceFee;\n    var stakingToken = pool.stakingToken, userData = pool.userData;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var stakingTokenBalance = (userData === null || userData === void 0 ? void 0 : userData.stakingTokenBalance) ? new (bignumber_default())(userData.stakingTokenBalance) : bigNumber/* BIG_ZERO */.HW;\n    var ref = (0,useApprove/* useCheckVaultApprovalStatus */.dI)(pool.vaultKey), isVaultApproved = ref.isVaultApproved, setLastUpdated = ref.setLastUpdated;\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n        flexDirection: \"column\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n            flexDirection: \"column\",\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                    display: \"inline\",\n                    children: [\n                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(InlineText, {\n                            color: accountHasSharesStaked ? \"secondary\" : \"textSubtle\",\n                            textTransform: \"uppercase\",\n                            bold: true,\n                            fontSize: \"12px\",\n                            children: [\n                                accountHasSharesStaked ? stakingToken.symbol : t(\"Stake\"),\n                                \" \"\n                            ]\n                        }),\n                        /*#__PURE__*/ (0,jsx_runtime.jsx)(InlineText, {\n                            color: accountHasSharesStaked ? \"textSubtle\" : \"secondary\",\n                            textTransform: \"uppercase\",\n                            bold: true,\n                            fontSize: \"12px\",\n                            children: accountHasSharesStaked ? t(\"Staked\") : \"\".concat(stakingToken.symbol)\n                        })\n                    ]\n                }),\n                isVaultApproved ? /*#__PURE__*/ (0,jsx_runtime.jsx)(VaultCardActions_VaultStakeActions, {\n                    pool: pool,\n                    stakingTokenBalance: stakingTokenBalance,\n                    accountHasSharesStaked: accountHasSharesStaked,\n                    performanceFee: performanceFee\n                }) : /*#__PURE__*/ (0,jsx_runtime.jsx)(VaultCardActions_VaultApprovalAction, {\n                    vaultKey: pool.vaultKey,\n                    isLoading: isLoading,\n                    setLastUpdated: setLastUpdated\n                })\n            ]\n        })\n    });\n};\n/* harmony default export */ var VaultCardActions = (CakeVaultCardActions);\n\n// EXTERNAL MODULE: ./src/utils/cakePool.ts\nvar cakePool = __webpack_require__(17101);\n// EXTERNAL MODULE: ./src/components/Divider/index.tsx\nvar Divider = __webpack_require__(14275);\n// EXTERNAL MODULE: ./src/hooks/useBUSDPrice.ts\nvar useBUSDPrice = __webpack_require__(90834);\n// EXTERNAL MODULE: ./src/utils/isUndefinedOrNull.ts\nvar isUndefinedOrNull = __webpack_require__(12157);\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Common/BurningCountDown.tsx\nvar BurningCountDown = __webpack_require__(88028);\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Buttons/AddCakeButton.tsx + 1 modules\nvar AddCakeButton = __webpack_require__(90706);\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Buttons/ExtendDurationButton.tsx + 2 modules\nvar ExtendDurationButton = __webpack_require__(28353);\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Common/AfterLockedActions.tsx + 1 modules\nvar AfterLockedActions = __webpack_require__(39421);\n;// CONCATENATED MODULE: ./src/views/Pools/components/LockedPool/Common/LockedActions.tsx\n\n\n\n\n\n\n\n\n\n\n\nvar LockedActions = function(param) {\n    var userShares = param.userShares, locked = param.locked, lockEndTime = param.lockEndTime, lockStartTime = param.lockStartTime, stakingToken = param.stakingToken, stakingTokenBalance = param.stakingTokenBalance, lockedAmount = param.lockedAmount;\n    var position = (0,react.useMemo)(function() {\n        return (0,cakePool/* getVaultPosition */.cP)({\n            userShares: userShares,\n            locked: locked,\n            lockEndTime: lockEndTime\n        });\n    }, [\n        userShares,\n        locked,\n        lockEndTime\n    ]);\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var lockedAmountAsNumber = (0,formatBalance/* getBalanceNumber */.mW)(lockedAmount);\n    var currentBalance = (0,react.useMemo)(function() {\n        return stakingTokenBalance ? new (bignumber_default())(stakingTokenBalance) : bigNumber/* BIG_ZERO */.HW;\n    }, [\n        stakingTokenBalance\n    ]);\n    if (position === cakePool/* VaultPosition.Locked */.PS.Locked) {\n        return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n            children: [\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                    width: \"100%\",\n                    mr: \"4px\",\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(AddCakeButton/* default */.Z, {\n                        lockEndTime: lockEndTime,\n                        lockStartTime: lockStartTime,\n                        currentLockedAmount: lockedAmount,\n                        stakingToken: stakingToken,\n                        currentBalance: currentBalance,\n                        stakingTokenBalance: stakingTokenBalance\n                    })\n                }),\n                /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                    width: \"100%\",\n                    ml: \"4px\",\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(ExtendDurationButton/* default */.Z, {\n                        lockEndTime: lockEndTime,\n                        lockStartTime: lockStartTime,\n                        stakingToken: stakingToken,\n                        currentBalance: currentBalance,\n                        currentLockedAmount: lockedAmountAsNumber,\n                        children: t(\"Extend\")\n                    })\n                })\n            ]\n        });\n    }\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(AfterLockedActions/* default */.Z, {\n        lockEndTime: lockEndTime,\n        lockStartTime: lockStartTime,\n        position: position,\n        currentLockedAmount: lockedAmountAsNumber,\n        stakingToken: stakingToken\n    });\n};\n/* harmony default export */ var Common_LockedActions = (LockedActions);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Common/YieldBoostRow.tsx\nvar YieldBoostRow = __webpack_require__(96635);\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/Common/LockDurationRow.tsx\nvar LockDurationRow = __webpack_require__(5450);\n// EXTERNAL MODULE: ./packages/uikit/src/components/Link/Link.tsx\nvar Link = __webpack_require__(80421);\n;// CONCATENATED MODULE: ./src/views/Pools/components/LockedPool/Common/IfoCakeRow.tsx\n\nfunction IfoCakeRow_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  display: inline;\\n\"\n    ]);\n    IfoCakeRow_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\nvar InlineLink = (0,styled_components_browser_esm/* default */.ZP)(Link/* default */.Z).withConfig({\n    componentId: \"sc-ee830edb-0\"\n})(IfoCakeRow_templateObject());\nvar IfoCakeRow = function() {\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var credit = (0,hooks/* useIfoCredit */.cq)();\n    var ceiling = (0,hooks/* useIfoCeiling */.dd)();\n    var weeksDisplay = (0,helpers/* getICakeWeekDisplay */.XW)(ceiling);\n    var ref = (0,useTooltip/* default */.Z)(/*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                children: t(\"The number of iCAKE equals the locked staking amount if the staking duration is longer than %weeks% weeks. If the staking duration is less than %weeks% weeks, it will linearly decrease based on the staking duration.\", {\n                    weeks: weeksDisplay\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(InlineLink, {\n                external: true,\n                href: \"https://docs.cloudtx.finance/products/ifo-initial-farm-offering/icake\",\n                children: t(\"Learn more about iCAKE\")\n            })\n        ]\n    }), {\n        placement: \"bottom-start\"\n    }), targetRef = ref.targetRef, tooltip = ref.tooltip, tooltipVisible = ref.tooltipVisible;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [\n            tooltipVisible && tooltip,\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(TooltipText/* default */.Z, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                    ref: targetRef,\n                    color: \"textSubtle\",\n                    bold: true,\n                    fontSize: \"12px\",\n                    children: t(\"iCAKE\")\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* BalanceWithLoading */.s, {\n                color: \"text\",\n                bold: true,\n                fontSize: \"16px\",\n                decimals: 3,\n                value: (0,formatBalance/* getBalanceNumber */.mW)(credit)\n            })\n        ]\n    });\n};\n/* harmony default export */ var Common_IfoCakeRow = (IfoCakeRow);\n\n// EXTERNAL MODULE: ./src/views/Pools/components/LockedPool/hooks/useUserDataInVaultPresenter.ts\nvar useUserDataInVaultPresenter = __webpack_require__(51553);\n;// CONCATENATED MODULE: ./src/views/Pools/components/LockedPool/LockedStakingApy.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar LockedStakingApy = function(param) {\n    var stakingToken = param.stakingToken, stakingTokenBalance = param.stakingTokenBalance, userData = param.userData, showICake = param.showICake;\n    var ref;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    var position = (0,react.useMemo)(function() {\n        return (0,cakePool/* getVaultPosition */.cP)({\n            userShares: userData === null || userData === void 0 ? void 0 : userData.userShares,\n            locked: userData === null || userData === void 0 ? void 0 : userData.locked,\n            lockEndTime: userData === null || userData === void 0 ? void 0 : userData.lockEndTime\n        });\n    }, [\n        userData\n    ]);\n    var currentLockedAmountAsBigNumber = (0,react.useMemo)(function() {\n        var ref;\n        return userData === null || userData === void 0 ? void 0 : (ref = userData.balance) === null || ref === void 0 ? void 0 : ref.cakeAsBigNumber;\n    }, [\n        userData === null || userData === void 0 ? void 0 : (ref = userData.balance) === null || ref === void 0 ? void 0 : ref.cakeAsBigNumber\n    ]);\n    var currentLockedAmount = (0,formatBalance/* getBalanceNumber */.mW)(currentLockedAmountAsBigNumber);\n    var usdValueStaked = (0,useBUSDPrice/* useBUSDCakeAmount */.Tx)(currentLockedAmount);\n    var ref1 = (0,useUserDataInVaultPresenter/* default */.Z)({\n        lockStartTime: userData === null || userData === void 0 ? void 0 : userData.lockStartTime,\n        lockEndTime: userData === null || userData === void 0 ? void 0 : userData.lockEndTime\n    }), weekDuration = ref1.weekDuration, lockEndDate = ref1.lockEndDate, secondDuration = ref1.secondDuration, remainingTime = ref1.remainingTime;\n    var lockedApy = (0,useVaultApy/* useVaultApy */.o)({\n        duration: secondDuration\n    }).lockedApy;\n    // earningTokenBalance includes overdue fee if any\n    var earningTokenBalance = (0,react.useMemo)(function() {\n        return (0,formatBalance/* getBalanceNumber */.mW)(currentLockedAmountAsBigNumber.minus(userData === null || userData === void 0 ? void 0 : userData.cakeAtLastUserAction));\n    }, [\n        currentLockedAmountAsBigNumber,\n        userData === null || userData === void 0 ? void 0 : userData.cakeAtLastUserAction\n    ]);\n    var tooltipContent = t(\"Calculated based on current rates and subject to change based on pool conditions. It is an estimate provided for your convenience only, and by no means represents guaranteed returns.\");\n    var ref2 = (0,useTooltip/* default */.Z)(tooltipContent, {\n        placement: \"bottom-start\"\n    }), targetRef = ref2.targetRef, tooltip = ref2.tooltip, tooltipVisible = ref2.tooltipVisible;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Card/* LightGreyCard */.m5, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                justifyContent: \"space-between\",\n                mb: \"16px\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                color: \"textSubtle\",\n                                textTransform: \"uppercase\",\n                                bold: true,\n                                fontSize: \"12px\",\n                                children: t(\"CAKE locked\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* BalanceWithLoading */.s, {\n                                color: \"text\",\n                                bold: true,\n                                fontSize: \"16px\",\n                                value: currentLockedAmount,\n                                decimals: 5\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* BalanceWithLoading */.s, {\n                                value: usdValueStaked,\n                                fontSize: \"12px\",\n                                color: \"textSubtle\",\n                                decimals: 2,\n                                prefix: \"~\",\n                                unit: \" USD\"\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                color: \"textSubtle\",\n                                textTransform: \"uppercase\",\n                                bold: true,\n                                fontSize: \"12px\",\n                                children: t(\"Unlocks In\")\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                color: position >= cakePool/* VaultPosition.LockedEnd */.PS.LockedEnd ? \"#D67E0A\" : \"text\",\n                                bold: true,\n                                fontSize: \"16px\",\n                                children: position >= cakePool/* VaultPosition.LockedEnd */.PS.LockedEnd ? t(\"Unlocked\") : remainingTime\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                color: position >= cakePool/* VaultPosition.LockedEnd */.PS.LockedEnd ? \"#D67E0A\" : \"text\",\n                                fontSize: \"12px\",\n                                children: t(\"On %date%\", {\n                                    date: lockEndDate\n                                })\n                            })\n                        ]\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                mb: \"16px\",\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Common_LockedActions, {\n                    userShares: userData === null || userData === void 0 ? void 0 : userData.userShares,\n                    locked: userData === null || userData === void 0 ? void 0 : userData.locked,\n                    lockEndTime: userData === null || userData === void 0 ? void 0 : userData.lockEndTime,\n                    lockStartTime: userData === null || userData === void 0 ? void 0 : userData.lockStartTime,\n                    stakingToken: stakingToken,\n                    stakingTokenBalance: stakingTokenBalance,\n                    lockedAmount: currentLockedAmountAsBigNumber\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Divider/* default */.Z, {}),\n            ![\n                cakePool/* VaultPosition.LockedEnd */.PS.LockedEnd,\n                cakePool/* VaultPosition.AfterBurning */.PS.AfterBurning\n            ].includes(position) && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                children: [\n                    tooltipVisible && tooltip,\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(TooltipText/* default */.Z, {\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                            ref: targetRef,\n                            color: \"textSubtle\",\n                            textTransform: \"uppercase\",\n                            bold: true,\n                            fontSize: \"12px\",\n                            children: t(\"APY\")\n                        })\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* BalanceWithLoading */.s, {\n                        color: \"text\",\n                        bold: true,\n                        fontSize: \"16px\",\n                        value: parseFloat(lockedApy),\n                        decimals: 2,\n                        unit: \"%\"\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(LockDurationRow/* default */.Z, {\n                weekDuration: weekDuration\n            }),\n            ![\n                cakePool/* VaultPosition.LockedEnd */.PS.LockedEnd,\n                cakePool/* VaultPosition.AfterBurning */.PS.AfterBurning\n            ].includes(position) && /*#__PURE__*/ (0,jsx_runtime.jsx)(YieldBoostRow/* default */.Z, {\n                secondDuration: secondDuration\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        color: \"textSubtle\",\n                        textTransform: \"uppercase\",\n                        bold: true,\n                        fontSize: \"12px\",\n                        children: t(\"Recent CAKE profit\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Balance/* BalanceWithLoading */.s, {\n                        color: \"text\",\n                        bold: true,\n                        fontSize: \"16px\",\n                        value: earningTokenBalance,\n                        decimals: 5\n                    })\n                ]\n            }),\n            position === cakePool/* VaultPosition.LockedEnd */.PS.LockedEnd && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        color: \"textSubtle\",\n                        textTransform: \"uppercase\",\n                        bold: true,\n                        fontSize: \"12px\",\n                        children: t(\"After Burning In\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        color: \"failure\",\n                        bold: true,\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(BurningCountDown/* default */.Z, {\n                            lockEndTime: userData === null || userData === void 0 ? void 0 : userData.lockEndTime\n                        })\n                    })\n                ]\n            }),\n            position === cakePool/* VaultPosition.AfterBurning */.PS.AfterBurning && /*#__PURE__*/ (0,jsx_runtime.jsxs)(Flex/* default */.Z, {\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        color: \"textSubtle\",\n                        textTransform: \"uppercase\",\n                        bold: true,\n                        fontSize: \"12px\",\n                        children: t(\"After burning\")\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                        color: \"failure\",\n                        bold: true,\n                        children: (0,isUndefinedOrNull/* default */.Z)(userData === null || userData === void 0 ? void 0 : userData.currentOverdueFee) ? \"-\" : t(\"%amount% Burned\", {\n                            amount: (0,formatBalance/* getFullDisplayBalance */.NJ)(userData === null || userData === void 0 ? void 0 : userData.currentOverdueFee, 18, 5)\n                        })\n                    })\n                ]\n            }),\n            showICake && /*#__PURE__*/ (0,jsx_runtime.jsx)(Common_IfoCakeRow, {})\n        ]\n    });\n};\n/* harmony default export */ var LockedPool_LockedStakingApy = (/*#__PURE__*/(0,react.memo)(LockedStakingApy));\n\n;// CONCATENATED MODULE: ./src/views/Pools/components/CakeVaultCard/index.tsx\n\n\n\n\nfunction CakeVaultCard_templateObject() {\n    var data = (0,_tagged_template_literal/* default */.Z)([\n        \"\\n  min-height: \",\n        \";\\n\"\n    ]);\n    CakeVaultCard_templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar StyledCardBody = (0,styled_components_browser_esm/* default */.ZP)(CardBody/* default */.Z).withConfig({\n    componentId: \"sc-e7f23119-0\"\n})(CakeVaultCard_templateObject(), function(param) {\n    var isLoading = param.isLoading;\n    return isLoading ? \"0\" : \"254px\";\n});\nvar CakeVaultDetail = function(param) {\n    var _isLoading = param.isLoading, isLoading = _isLoading === void 0 ? false : _isLoading, account = param.account, pool = param.pool, vaultPool = param.vaultPool, accountHasSharesStaked = param.accountHasSharesStaked, showICake = param.showICake, performanceFeeAsDecimal = param.performanceFeeAsDecimal, defaultFooterExpanded = param.defaultFooterExpanded;\n    var ref;\n    var t = (0,Localization/* useTranslation */.$G)().t;\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(StyledCardBody, {\n                isLoading: isLoading,\n                children: [\n                    account && pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault && /*#__PURE__*/ (0,jsx_runtime.jsx)(VaultPositionTag/* VaultPositionTagWithLabel */.X, {\n                        userData: vaultPool.userData\n                    }),\n                    account && pool.vaultKey === types/* VaultKey.CakeVault */.om.CakeVault && vaultPool.userData.locked ? /*#__PURE__*/ (0,jsx_runtime.jsx)(LockedPool_LockedStakingApy, {\n                        userData: vaultPool.userData,\n                        stakingToken: pool === null || pool === void 0 ? void 0 : pool.stakingToken,\n                        stakingTokenBalance: pool === null || pool === void 0 ? void 0 : (ref = pool.userData) === null || ref === void 0 ? void 0 : ref.stakingTokenBalance,\n                        showICake: showICake\n                    }) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsx)(StakingApy, {\n                                pool: pool\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(Layout_Flex/* FlexGap */.O, {\n                                mt: \"16px\",\n                                gap: \"24px\",\n                                flexDirection: accountHasSharesStaked ? \"column-reverse\" : \"column\",\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                                        children: [\n                                            account && /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                                                mb: \"8px\",\n                                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(UnstakingFeeCountdownRow/* default */.Z, {\n                                                    vaultKey: pool.vaultKey\n                                                })\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(RecentCakeProfitRow, {\n                                                pool: pool\n                                            })\n                                        ]\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(Flex/* default */.Z, {\n                                        flexDirection: \"column\",\n                                        children: account ? /*#__PURE__*/ (0,jsx_runtime.jsx)(VaultCardActions, {\n                                            pool: pool,\n                                            accountHasSharesStaked: accountHasSharesStaked,\n                                            isLoading: isLoading,\n                                            performanceFee: performanceFeeAsDecimal\n                                        }) : /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n                                            children: [\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(Text/* default */.Z, {\n                                                    mb: \"10px\",\n                                                    textTransform: \"uppercase\",\n                                                    fontSize: \"12px\",\n                                                    color: \"textSubtle\",\n                                                    bold: true,\n                                                    children: t(\"Start earning\")\n                                                }),\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(ConnectWalletButton/* default */.Z, {})\n                                            ]\n                                        })\n                                    })\n                                ]\n                            })\n                        ]\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(CardFooter/* default */.Z, {\n                defaultExpanded: defaultFooterExpanded,\n                pool: pool,\n                account: account\n            })\n        ]\n    });\n};\nvar CakeVaultCard = function(_param) {\n    var pool = _param.pool, showStakedOnly = _param.showStakedOnly, defaultFooterExpanded = _param.defaultFooterExpanded, _showICake = _param.showICake, showICake = _showICake === void 0 ? false : _showICake, props = (0,_object_without_properties/* default */.Z)(_param, [\n        \"pool\",\n        \"showStakedOnly\",\n        \"defaultFooterExpanded\",\n        \"showICake\"\n    ]);\n    var account = (0,core_esm/* useWeb3React */.Ge)().account;\n    var vaultPool = (0,hooks/* useVaultPoolByKey */.eB)(pool.vaultKey);\n    var _userData = vaultPool.userData, userShares = _userData.userShares, isVaultUserDataLoading = _userData.isLoading, performanceFeeAsDecimal = vaultPool.fees.performanceFeeAsDecimal;\n    var accountHasSharesStaked = userShares && userShares.gt(0);\n    var isLoading = !pool.userData || isVaultUserDataLoading;\n    if (showStakedOnly && !accountHasSharesStaked) {\n        return null;\n    }\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(StyledCard/* StyledCard */.r, (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({\n        isActive: true\n    }, props), {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsxs)(PoolCardHeader/* default */.Z, {\n                isStaking: accountHasSharesStaked,\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(PoolCardHeader/* PoolCardHeaderTitle */.e, {\n                        title: pools/* vaultPoolConfig */.Y4[pool.vaultKey].name,\n                        subTitle: pools/* vaultPoolConfig */.Y4[pool.vaultKey].description\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)(TokenPairImage/* default */.Z, (0,_object_spread_props/* default */.Z)((0,_object_spread/* default */.Z)({}, pools/* vaultPoolConfig */.Y4[pool.vaultKey].tokenImage), {\n                        width: 64,\n                        height: 64\n                    }))\n                ]\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(CakeVaultDetail, {\n                isLoading: isLoading,\n                account: account,\n                pool: pool,\n                vaultPool: vaultPool,\n                accountHasSharesStaked: accountHasSharesStaked,\n                showICake: showICake,\n                performanceFeeAsDecimal: performanceFeeAsDecimal,\n                defaultFooterExpanded: defaultFooterExpanded\n            })\n        ]\n    }));\n};\n/* harmony default export */ var components_CakeVaultCard = (CakeVaultCard);\n\n\n/***/ }),\n\n/***/ 73322:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7297);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(67294);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(87379);\n/* harmony import */ var contexts_Localization__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(99150);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(4318);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(36544);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(95596);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(62276);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(10763);\n/* harmony import */ var components_Tags__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(69160);\n/* harmony import */ var _PoolStatsInfo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(91692);\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  align-items: center;\\n  justify-content: space-between;\\n  button {\\n    padding: 0;\\n  }\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  svg {\\n    height: 14px;\\n    width: 14px;\\n  }\\n\"\n    ]);\n    _templateObject1 = function _templateObject1() {\n        return data;\n    };\n    return data;\n}\n\n\n\n\n\n\n\nvar ExpandableButtonWrapper = (0,styled_components__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .ZP)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z).withConfig({\n    componentId: \"sc-751714d1-0\"\n})(_templateObject());\nvar ExpandedWrapper = (0,styled_components__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .ZP)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z).withConfig({\n    componentId: \"sc-751714d1-1\"\n})(_templateObject1());\nvar Footer = function(param) {\n    var pool = param.pool, account = param.account, defaultExpanded = param.defaultExpanded, children = param.children;\n    var vaultKey = pool.vaultKey;\n    var t = (0,contexts_Localization__WEBPACK_IMPORTED_MODULE_3__/* .useTranslation */ .$G)().t;\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(defaultExpanded || false), isExpanded = ref[0], setIsExpanded = ref[1];\n    var manualTooltipText = t(\"You must harvest and compound your earnings from this pool manually.\");\n    var autoTooltipText = t(\"Rewards are distributed and included into your staking balance automatically. There\\u2019s no need to manually compound your rewards.\");\n    var ref1 = (0,_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_8__/* [\"default\"] */ .Z)(vaultKey ? autoTooltipText : manualTooltipText, {\n        placement: \"bottom\"\n    }), targetRef = ref1.targetRef, tooltip = ref1.tooltip, tooltipVisible = ref1.tooltipVisible;\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_9__/* [\"default\"] */ .Z, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(ExpandableButtonWrapper, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z, {\n                        alignItems: \"center\",\n                        children: [\n                            vaultKey ? /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components_Tags__WEBPACK_IMPORTED_MODULE_4__/* .CompoundingPoolTag */ .yd, {}) : /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(components_Tags__WEBPACK_IMPORTED_MODULE_4__/* .ManualPoolTag */ .EM, {}),\n                            tooltipVisible && tooltip,\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__/* [\"default\"] */ .Z, {\n                                ref: targetRef,\n                                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_10__/* [\"default\"] */ .Z, {\n                                    ml: \"4px\",\n                                    width: \"20px\",\n                                    height: \"20px\",\n                                    color: \"textSubtle\"\n                                })\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_11__/* .ExpandableLabel */ .L, {\n                        expanded: isExpanded,\n                        onClick: function() {\n                            return setIsExpanded(!isExpanded);\n                        },\n                        children: isExpanded ? t(\"Hide\") : t(\"Details\")\n                    })\n                ]\n            }),\n            isExpanded && /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ExpandedWrapper, {\n                flexDirection: \"column\",\n                children: children || /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_PoolStatsInfo__WEBPACK_IMPORTED_MODULE_5__/* [\"default\"] */ .Z, {\n                    pool: pool,\n                    account: account\n                })\n            })\n        ]\n    });\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (Footer);\n\n\n/***/ }),\n\n/***/ 68624:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"e\": function() { return /* binding */ PoolCardHeaderTitle; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7297);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85893);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(87654);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4318);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(59750);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(97114);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(87379);\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  background: \",\n        \";\\n  border-radius: \",\n        \";\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\n\nvar Wrapper = (0,styled_components__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .ZP)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z).withConfig({\n    componentId: \"sc-e97e142c-0\"\n})(_templateObject(), function(param) {\n    var isFinished = param.isFinished, background = param.background, theme = param.theme;\n    return isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background];\n}, function(param) {\n    var theme = param.theme;\n    return \"\".concat(theme.radii.card, \" \").concat(theme.radii.card, \" 0 0\");\n});\nvar PoolCardHeader = function(param) {\n    var _isFinished = param.isFinished, isFinished = _isFinished === void 0 ? false : _isFinished, _isStaking = param.isStaking, isStaking = _isStaking === void 0 ? false : _isStaking, children = param.children;\n    var background = isStaking ? \"bubblegum\" : \"cardHeader\";\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Wrapper, {\n        isFinished: isFinished,\n        background: background,\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z, {\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            children: children\n        })\n    });\n};\nvar PoolCardHeaderTitle = function(param) {\n    var isFinished = param.isFinished, title = param.title, subTitle = param.subTitle;\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z, {\n        flexDirection: \"column\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__/* [\"default\"] */ .Z, {\n                color: isFinished ? \"textDisabled\" : \"body\",\n                scale: \"lg\",\n                children: title\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_6__/* [\"default\"] */ .Z, {\n                fontSize: \"14px\",\n                color: isFinished ? \"textDisabled\" : \"textSubtle\",\n                children: subTitle\n            })\n        ]\n    });\n};\n/* harmony default export */ __webpack_exports__[\"Z\"] = (PoolCardHeader);\n\n\n/***/ }),\n\n/***/ 12020:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"r\": function() { return /* binding */ StyledCard; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7297);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(87379);\n/* harmony import */ var _pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(38144);\n\nfunction _templateObject() {\n    var data = (0,_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)([\n        \"\\n  min-width: 280px;\\n  max-width: 100%;\\n  margin: 0 0 24px 0;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  align-self: baseline;\\n  position: relative;\\n  color: \",\n        \";\\n\\n  \",\n        \" {\\n    max-width: 350px;\\n    margin: 0 12px 46px;\\n  }\\n\"\n    ]);\n    _templateObject = function _templateObject() {\n        return data;\n    };\n    return data;\n}\n\n\nvar StyledCard = (0,styled_components__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .ZP)(_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z).withConfig({\n    componentId: \"sc-2d0af5d3-0\"\n})(_templateObject(), function(param) {\n    var isFinished = param.isFinished, theme = param.theme;\n    return theme.colors[isFinished ? \"textDisabled\" : \"secondary\"];\n}, function(param) {\n    var theme = param.theme;\n    return theme.mediaQueries.sm;\n});\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (StyledCard)));\n\n\n/***/ })\n\n}]);"],"names":["self","push","__unused_webpack_module","__webpack_exports__","__webpack_require__","_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","styled_system__WEBPACK_IMPORTED_MODULE_0__","_templateObject","data","Z","CardBody","ZP","div","withConfig","componentId","Dh","defaultProps","p","CardFooter","param","theme","colors","cardBorder","d","CakeVaultDetail","components_CakeVaultCard","_object_spread","_object_spread_props","_object_without_properties","_tagged_template_literal","jsx_runtime","Box","Flex","Text","TokenPairImage","core_esm","ConnectWalletButton","Layout_Flex","pools","Localization","hooks","types","styled_components_browser_esm","PoolCardHeader","StyledCard","VaultPositionTag","UnstakingFeeCountdownRow","farms_hooks","helpers","useTooltip","TooltipText","Balance","AutoEarningsBreakdown","CakeVaultCard_RecentCakeProfitBalance","cakeToDisplay","pool","account","ref","jsx","placement","targetRef","tooltip","tooltipVisible","jsxs","Fragment","children","small","fontSize","value","RecentCakeProfitRow","t","$G","Ge","eB","vaultKey","pricePerFullShare","userData","cakePriceBusd","Iu","ref1","UN","cakeAtLastUserAction","userShares","toNumber","om","CakeVault","currentPerformanceFee","plus","currentOverdueFee","hasAutoEarnings","autoCakeToDisplay","gt","alignItems","justifyContent","concat","_sliced_to_array","useModal","Button","Calculate","Skeleton","Card","useVaultApy","react","VaultRoiCalculatorModal","AprLabelContainer","StakingApy","memo","o","flexibleApy","lockedApy","onPresentFlexibleApyModal","E","onPresentLockedApyModal","ref2","initialView","m5","color","textTransform","bold","parseFloat","decimals","unit","onClick","e","stopPropagation","variant","width","height","padding","marginLeft","O","gap","flexWrap","style","whiteSpace","bignumber","bignumber_default","n","bigNumber","AutoRenew","useApprove","VaultCardActions_VaultApprovalAction","_isLoading","isLoading","setLastUpdated","Le","handleApprove","pendingTx","endIcon","spin","disabled","NotEnoughTokensModal","VaultStakeButtonGroup","VaultStakeModal","LockedStakeModal","IconButton","Minus","Add","formatBalance","ConvertToLock","VaultCardActions_HasSharesActions","stakingTokenBalance","performanceFee","_balance","_userData","balance","cakeAsBigNumber","cakeAsNumberBalance","stakingToken","stakedDollarValue","mW","multipliedBy","onPresentTokenRequired","tokenSymbol","symbol","stakingMax","onPresentStake","ref3","isRemovingStake","onPresentUnstake","mb","flexDirection","as","prefix","mt","mr","currentStakedAmount","VaultCardActions_VaultStakeActions","accountHasSharesStaked","userDataLoaded","openPresentLockedStakeModal","currentBalance","w","onFlexibleClick","onLockedClick","VaultCardActions_templateObject","InlineText","VaultCardActions","HW","dI","isVaultApproved","display","cakePool","Divider","useBUSDPrice","isUndefinedOrNull","BurningCountDown","AddCakeButton","ExtendDurationButton","AfterLockedActions","Common_LockedActions","locked","lockEndTime","lockStartTime","lockedAmount","position","useMemo","cP","lockedAmountAsNumber","PS","Locked","currentLockedAmount","ml","YieldBoostRow","LockDurationRow","Link","IfoCakeRow_templateObject","InlineLink","Common_IfoCakeRow","credit","cq","ceiling","dd","weeksDisplay","XW","weeks","external","href","s","useUserDataInVaultPresenter","LockedPool_LockedStakingApy","showICake","currentLockedAmountAsBigNumber","usdValueStaked","Tx","weekDuration","lockEndDate","secondDuration","remainingTime","duration","earningTokenBalance","minus","tooltipContent","LockedEnd","date","AfterBurning","includes","amount","NJ","CakeVaultCard_templateObject","StyledCardBody","vaultPool","performanceFeeAsDecimal","defaultFooterExpanded","X","defaultExpanded","_param","showStakedOnly","_showICake","props","isVaultUserDataLoading","fees","r","isActive","isStaking","title","Y4","name","subTitle","description","tokenImage","_swc_helpers_src_tagged_template_literal_mjs__WEBPACK_IMPORTED_MODULE_0__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_6__","contexts_Localization__WEBPACK_IMPORTED_MODULE_3__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_7__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_8__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_9__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_10__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_11__","components_Tags__WEBPACK_IMPORTED_MODULE_4__","_PoolStatsInfo__WEBPACK_IMPORTED_MODULE_5__","_templateObject1","ExpandableButtonWrapper","ExpandedWrapper","useState","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","yd","EM","L","expanded","PoolCardHeaderTitle","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_3__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_4__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_5__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_6__","Wrapper","isFinished","background","backgroundDisabled","gradients","radii","card","scale","_isFinished","_isStaking","styled_components__WEBPACK_IMPORTED_MODULE_1__","_pancakeswap_uikit__WEBPACK_IMPORTED_MODULE_2__","mediaQueries","sm"],"sourceRoot":""}